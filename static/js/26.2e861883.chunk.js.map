{"version":3,"sources":["views/Components/Forms/Customers/ViewAll/ViewAllCustomers.js","../node_modules/@material-ui/icons/StorefrontOutlined.js","views/Components/Forms/Customers/AddCustomers/AddCustomersForm.js","../node_modules/@material-ui/icons/Add.js","../node_modules/@material-ui/icons/DeleteForeverSharp.js"],"names":["headCells","id","label","disableSorting","mapActionToProps","fetchAllCustomers","customerActions","DeleteCustomer","connect","state","customersList","customers","list","withStyles","theme","paper","margin","spacing","padding","searchInput","width","newButton","position","right","_ref","classes","props","_objectWithoutProperties","_excluded","_useState","useState","fn","items","_useState2","_slicedToArray","filterFn","setFilterFn","_useState3","_useState4","openPopup","setOpenPopup","_useState5","_useState6","currentId","setcurrentId","addToast","useToasts","_useState7","isOpen","message","type","notify","setNotify","_useState8","_useState9","confirmDialog","setConfirmDialog","_useState10","_useState11","showToast","appearance","useEffect","_useTable","useTable","TblContainer","TblHead","TblPagination","recordsAfterPagingAndSorting","_jsxs","_Fragment","children","_jsx","PageHeader","title","icon","StorefrontOutlinedIcon","fontSize","Paper","className","elevation","Toolbar","Controls","Input","InputProps","startAdornment","InputAdornment","Search","onChange","e","target","value","filter","x","name","toLowerCase","includes","address","phone","description","Button","text","variant","startIcon","AddIcon","onClick","class","TableBody","map","record","index","TableRow","hover","TableCell","ActionButton","color","openInPopup","EditOutlinedIcon","onConfirm","DeleteIcon","Popup","AddCustomersForm","Notification","ConfirmDialog","subTitle","_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","default","React","_default","createElement","d","initialFieldValues","country","storeId","deleteCustomer","createCustomer","updateCustomer","fetchAllStores","storeActions","storesList","stores","root","minWidth","formControl","smMargin","validate","fieldValues","arguments","length","undefined","values","temp","_objectSpread","errors","setErrors","every","_useForm","useForm","setCurrentId","_useForm2","setValues","handleInputChange","resetForm","find","autoComplete","noValidate","onSubmit","preventDefault","onSuccess","TextField","error","helperText","size","style","marginLeft"],"mappings":"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","file":"static/js/26.2e861883.chunk.js","sourcesContent":["import { Paper, TableBody, TableCell, TableRow, TextField, Toolbar, withStyles, InputAdornment } from \"@material-ui/core\";\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\n//import * as actions from \"../../../../../actions/Staff/addStaff\";\r\n//import * as storeActions from \"../../../../../actions/Store/stores\";\r\nimport * as customerActions from \"../../../../../actions/Customers/customers\";\r\nimport { connect } from \"react-redux\";\r\nimport useTable from \"../../useTable\";\r\nimport Controls from \"../../../controls/Controls\";\r\nimport { EditOutlined, Search } from \"@material-ui/icons\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport PageHeader from \"../../../PageHeader\";\r\nimport StorefrontOutlinedIcon from '@material-ui/icons/StorefrontOutlined';\r\nimport Popup from \"../../../Popup\";\r\nimport AddCustomersForm from \"../AddCustomers/AddCustomersForm\";\r\n//import AddNewStore from \"../AddStores/AddNewStore\";\r\nimport EditOutlinedIcon from \"@material-ui/icons/EditOutlined\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport DeleteIcon from \"@material-ui/icons/DeleteForeverSharp\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport Notification from \"../../../controls/Notification\";\r\nimport ConfirmDialog from \"../../../controls/ConfirmDialog\";\r\n\r\n\r\n\r\nconst styles = theme => ({\r\n\r\n    paper: {\r\n        margin: theme.spacing(-8.9),\r\n        padding: theme.spacing(6),\r\n\r\n    },\r\n\r\n    searchInput: {\r\n        width: '75%'\r\n    },\r\n\r\n    newButton: {\r\n        position: 'absolute',\r\n        right: '10px '\r\n\r\n    },\r\n   \r\n})\r\n\r\nconst headCells = [\r\n    { id: 'name', label: 'Customer Name' },\r\n    { id: 'Description', label: 'Description' },\r\n    { id: 'phone', label: 'Store Phone' },\r\n    { id: 'address', label: 'Address' },\r\n    { id: 'Actions', label: 'Actions', disableSorting: true },\r\n]\r\n\r\nconst ViewAllCustomers = ({ classes, ...props }) => {\r\n\r\n    const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n    const [openPopup, setOpenPopup] = useState(false)\r\n    const [currentId, setcurrentId] = useState(0)\r\n    const { addToast } = useToasts()\r\n    const {notify, setNotify} = useState({isOpen:false, message:'', type:''})\r\n    const [confirmDialog, setConfirmDialog] = useState(false) \r\n    const [deleteRecord, setDeleteRecord] = useState(false)\r\n\r\n    const showToast= () =>{\r\n        addToast(\"Record was deleted succesffuly\", { appearance: 'error' })\r\n        addToast(\"Record was deleted succesffuly\", { appearance: 'error' })\r\n        addToast(\"Record was deleted succesffuly\", { appearance: 'error' })\r\n\r\n    }\r\n    const onDelete = id => {\r\n            props.DeleteCustomer(id, showToast )\r\n            setConfirmDialog(false)\r\n\r\n    }\r\n    \r\n\r\n    useEffect(() => {\r\n        props. fetchAllCustomers();\r\n\r\n       \r\n\r\n    }, []);\r\n\r\n\r\n\r\n\r\n    const {\r\n        TblContainer,\r\n        TblHead,\r\n        TblPagination,\r\n        recordsAfterPagingAndSorting,\r\n    } = useTable(props.customersList, headCells, filterFn)\r\n\r\n\r\n    const handleSearch = e => {\r\n        let target = e.target;\r\n        setFilterFn({\r\n            fn: items => {\r\n                if (target.value == \"\")\r\n                    return items;\r\n                else {\r\n                    return items.filter(x =>\r\n\r\n                        x.name.toLowerCase().includes(target.value.toLowerCase()) +\r\n                        x.address.toLowerCase().includes(target.value.toLowerCase()) +\r\n                        x.phone.toLowerCase().includes(target.value.toLowerCase()) +\r\n                        x.description.toLowerCase().includes(target.value.toLowerCase()))\r\n\r\n                }\r\n\r\n\r\n\r\n\r\n            }\r\n        })\r\n    }\r\n\r\n    const addorEdit = (employee, resetForm) => {\r\n\r\n        setOpenPopup(false)\r\n        setNotify({\r\n            isOpen:true,\r\n            message:'Submitted Successfully',\r\n            type: 'Success'\r\n        })\r\n    }\r\n\r\n    const openInPopup = record => {\r\n        setcurrentId(record)\r\n        setOpenPopup(true)\r\n    }\r\n\r\n    const openInDialog = () => {\r\n        setConfirmDialog(true)\r\n        \r\n        \r\n        \r\n    }\r\n\r\n    return (\r\n\r\n        <>\r\n            <PageHeader\r\n                title=\"Customers List\"\r\n                //subTitle=\"Form design with validation\"\r\n                icon={<StorefrontOutlinedIcon  fontSize=\"large\" />}\r\n            />,\r\n            <Paper className={classes.paper} elevation={3}>\r\n\r\n                <Toolbar>\r\n                    <Controls.Input\r\n                        className={classes.searchInput}\r\n                        label=\"Search Customer\"\r\n\r\n                        InputProps={{\r\n                            startAdornment: (<InputAdornment position=\"start\">\r\n                                <Search />\r\n                            </InputAdornment>)\r\n                        }}\r\n                        onChange={handleSearch}\r\n\r\n                    />\r\n                    <Controls.Button\r\n                        text=\"Add New\"\r\n                        variant=\"outlined\"\r\n                        startIcon={<AddIcon />}\r\n                        className={classes.newButton}\r\n                        onClick={() => {setOpenPopup(true); setcurrentId(0);}}\r\n                    />\r\n                </Toolbar>\r\n                <table class=\"table .table-responsive{-sm|-md|-lg|-xl|-xxl} table-hover \" >\r\n                    <thead >\r\n\r\n\r\n                    </thead>\r\n                    <tbody>\r\n                        <TblContainer >\r\n                            <TblHead />\r\n                            <TableBody>\r\n                                {\r\n                                    recordsAfterPagingAndSorting().map((record, index) => {\r\n                                        return (<TableRow key={index} hover>\r\n                                            <TableCell>{record.name}</TableCell>\r\n                                            <TableCell>{record.description}</TableCell>\r\n                                            <TableCell>{record.phone}</TableCell>\r\n                                            <TableCell>{record.address} </TableCell>\r\n                                        \r\n                                            <TableCell>\r\n                                                <Controls.ActionButton\r\n                                                    color=\"primary\"\r\n                                                    // onClick={()=>{setcurrentStoreId(record.id)}}\r\n                                                    onClick={()=> {openInPopup(record.id)}}\r\n                                                >\r\n                                                    <EditOutlinedIcon fontSize=\"small\" />\r\n                                                </Controls.ActionButton>\r\n                                                <Controls.ActionButton\r\n                                                    color=\"secondary\"\r\n                                                    onClick={() => {\r\n                                                        openInDialog()\r\n                                                        setConfirmDialog({\r\n                                                            onConfirm: () =>{onDelete(record.id)}\r\n                                                        })\r\n                                                        \r\n                                                        //onDelete(record.id)\r\n                                                    }\r\n                                                    }\r\n                                                >\r\n                                                    <DeleteIcon fontSize=\"small\" />\r\n                                                </Controls.ActionButton>\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n\r\n                                        )\r\n                                    })\r\n                                }\r\n\r\n                            </TableBody>\r\n                        </TblContainer>\r\n\r\n\r\n                    </tbody>\r\n                </table>\r\n\r\n                <TblPagination />\r\n            </Paper>\r\n            <Popup\r\n                title=\"Customers Form\"\r\n                openPopup={openPopup}\r\n                setOpenPopup={setOpenPopup}\r\n            >\r\n                <AddCustomersForm\r\n                {...({ currentId, setcurrentId, openPopup, setOpenPopup }) }\r\n                    //addorEdit={addorEdit}\r\n                />\r\n            </Popup>\r\n            <Notification\r\n            notify={notify}\r\n            setNotify ={setNotify} \r\n            />\r\n            <ConfirmDialog \r\n            title=\"Are you sure you want to delete this record?\"\r\n            subTitle=\"This operation can't be reversed\"\r\n            confirmDialog={confirmDialog}\r\n            setConfirmDialog = {setConfirmDialog}\r\n            />\r\n        </>\r\n        // {...({ currentStoreId, setcurrentStoreId }) }\r\n\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    customersList: state.customers.list,\r\n\r\n})\r\n\r\nconst mapActionToProps = {\r\n    fetchAllCustomers: customerActions.fetchAllCustomer,\r\n    DeleteCustomer: customerActions.DeleteCustomer,\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, mapActionToProps)(withStyles(styles)(ViewAllCustomers));","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M21.9 8.89l-1.05-4.37c-.22-.9-1-1.52-1.91-1.52H5.05c-.9 0-1.69.63-1.9 1.52L2.1 8.89c-.24 1.02-.02 2.06.62 2.88.08.11.19.19.28.29V19c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2v-6.94c.09-.09.2-.18.28-.28.64-.82.87-1.87.62-2.89zm-2.99-3.9l1.05 4.37c.1.42.01.84-.25 1.17-.14.18-.44.47-.94.47-.61 0-1.14-.49-1.21-1.14L16.98 5l1.93-.01zM13 5h1.96l.54 4.52c.05.39-.07.78-.33 1.07-.22.26-.54.41-.95.41-.67 0-1.22-.59-1.22-1.31V5zM8.49 9.52L9.04 5H11v4.69c0 .72-.55 1.31-1.29 1.31-.34 0-.65-.15-.89-.41-.25-.29-.37-.68-.33-1.07zm-4.45-.16L5.05 5h1.97l-.58 4.86c-.08.65-.6 1.14-1.21 1.14-.49 0-.8-.29-.93-.47-.27-.32-.36-.75-.26-1.17zM5 19v-6.03c.08.01.15.03.23.03.87 0 1.66-.36 2.24-.95.6.6 1.4.95 2.31.95.87 0 1.65-.36 2.23-.93.59.57 1.39.93 2.29.93.84 0 1.64-.35 2.24-.95.58.59 1.37.95 2.24.95.08 0 .15-.02.23-.03V19H5z\"\n}), 'StorefrontOutlined');\n\nexports.default = _default;","import React, { Fragment, useState, useEffect } from \"react\";\r\nimport { FormControl, Grid, TextField, withStyles, InputLabel, Select, MenuItem, Button, FormHelperText } from \"@material-ui/core\";\r\nimport { useForm } from \"../../useForm\";\r\nimport { connect } from \"react-redux\";\r\n//import * as categActions from \"../../../../../actions/Category/categories\";\r\nimport * as customerActions from \"../../../../../actions/Customers/customers\";\r\nimport * as storeActions from \"../../../../../actions/Store/stores\";\r\n//import * as userLevelActions from \"../../../../../actions/UserLevel/userLevel\";\r\nimport { ToastConsumer, useToasts } from \"react-toast-notifications\";\r\nimport \"../../staffForm.css\";\r\nimport { RestoreSharp } from \"@material-ui/icons\";\r\n\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            margin: theme.spacing(1),\r\n            minWidth: 230,\r\n        }\r\n    },\r\n\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 230,\r\n    },\r\n    smMargin: {\r\n        margin: theme.spacing(1),\r\n\r\n    },\r\n})\r\n\r\nconst initialFieldValues = {\r\n\r\n    name: '',\r\n    description: '',\r\n    phone: '',\r\n    address: '',\r\n    // companyDataId:'1',\r\n    // phone: '',\r\n    // location: '',\r\n    // // email: '',\r\n    // // address: '',\r\n    // companyDataId: '',\r\n    country:'kenya',\r\n    storeId: 1,\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst AddCustomerForm = ({ classes, ...props }) => {\r\n\r\n    //toast message\r\n    const { addToast } = useToasts()\r\n\r\n    //realtime validation for the whole form controls\r\n    const validate = (fieldValues = values) => {\r\n        let temp = { ...errors }\r\n        if ('name' in fieldValues) {\r\n            temp.name = fieldValues.name ? \"\" : \"This field is required\"\r\n            // addToast(\"User data saved succeffuly\", {appearance:'success'})\r\n            // console.log(\"Tast has beeen displayed\")\r\n        }\r\n\r\n\r\n        if ('description' in fieldValues) {\r\n            temp.description = fieldValues.description ? \"\" : \"This field is required\"\r\n        }\r\n\r\n\r\n        if ('phone' in fieldValues) {\r\n            temp.phone = fieldValues.phone ? \"\" : \"This field is required\"\r\n        }\r\n\r\n\r\n        if ('address' in fieldValues) {\r\n            temp.address = fieldValues.address ? \"\" : \"This field is required\"\r\n        }\r\n       \r\n\r\n        // if ('storeId' in fieldValues) {\r\n        //     temp.storeId = fieldValues.storeId ? \"\" : \"This field is required\"\r\n        // }\r\n\r\n\r\n        setErrors({\r\n            ...temp\r\n        })\r\n        if (fieldValues == values) {\r\n            return Object.values(temp).every(x => x == \"\")\r\n        }\r\n\r\n\r\n    }\r\n\r\n    const [\r\n        values,\r\n        setValues,\r\n        errors,\r\n        setErrors,\r\n        handleInputChange,\r\n        resetForm\r\n    ] = useForm(initialFieldValues, validate, props.setCurrentId);\r\n\r\n    const showToast = () => {\r\n        addToast(\"Customer data saved succeffuly\", { appearance: 'success' })\r\n        addToast(\"Customer data saved succeffuly\", { appearance: 'success' })\r\n        addToast(\"Customer data saved succeffuly\", { appearance: 'success' })\r\n        props.fetchAllCustomers();\r\n    }\r\n\r\n\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n\r\n\r\n        if (validate()) {\r\n\r\n            const onSuccess = () => {\r\n                showToast();\r\n                resetForm();\r\n\r\n\r\n            }\r\n\r\n\r\n\r\n            if (props.currentId == 0) {\r\n\r\n                //using toast notification\r\n\r\n                props.createCustomer(values, onSuccess)\r\n                //addorEdit(values, onSuccess)\r\n\r\n            }\r\n            else {\r\n                //using windows alert notification\r\n                //props.updateDCandidate(props.currentId, values, () => {window.alert('updated')})\r\n                //using toast notification\r\n                props.updateCustomer(props.currentId, values, onSuccess)\r\n\r\n\r\n\r\n            }\r\n\r\n            if (props.openPopup == true) {\r\n                props.setOpenPopup(false)\r\n            }\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n\r\n        if (props.currentId != 0)\r\n            setValues({\r\n                ...props.customersList.find(x => x.id == props.currentId)\r\n            })\r\n        setErrors({})\r\n        props.fetchAllCustomers();\r\n        // props.fetchAllStores();\r\n        // props.fetchAllCategory();\r\n\r\n\r\n\r\n    }, [props.currentId])\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n\r\n        <section className=\"content\">\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                    {/* left column */}\r\n                    <div className=\"col-md-12\">\r\n                        {/* jquery validation */}\r\n                        <div className=\"card card-primary\">\r\n                            <div className=\"card-header\">\r\n                                <h4 className=\"card-title\">Add Customers<small> </small></h4>\r\n                            </div>\r\n                            {/* /.card-header */}\r\n                            {/* form start */}\r\n                            <form id=\"quickForm\" autoComplete=\"off\" noValidate className={classes.root} onSubmit={handleSubmit}>\r\n\r\n\r\n                            {/* <FormControl className={classes.formControl}\r\n                                    {...(errors.storeId && { error: true })}\r\n                                >\r\n                                    <InputLabel>Store</InputLabel>\r\n                                    <Select\r\n                                        className=\"form-ctr\"\r\n                                        name=\"storeId\"\r\n                                        label=\" Store\"\r\n                                        value={values.storeId}\r\n                                        //onFocus={fetchStores}\r\n                                        onChange={handleInputChange}\r\n                                        variant=\"outlined\"\r\n\r\n                                    >\r\n\r\n                                        <MenuItem value=\"\">Select Store</MenuItem>\r\n\r\n                                        {\r\n                                            props.storesList.map((record, index) => {\r\n                                                return (\r\n                                                    <MenuItem value={record.storeId}>{record.name}</MenuItem>\r\n\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </Select>\r\n                                    {errors.storeId && <FormHelperText>{errors.storeId}</FormHelperText>}\r\n                                </FormControl> */}\r\n\r\n                                <TextField\r\n                                    className=\"form-ctr\"\r\n                                    id=\"standard-basic\"\r\n                                    type=\"text\"\r\n                                    name=\"name\"\r\n                                    label=\"Customer Name\"\r\n                                    value={values.name}\r\n                                    onChange={handleInputChange}\r\n                                    {...(errors.name && { error: true, helperText: errors.name })}\r\n                                />\r\n\r\n                                <TextField className=\"form-ctr\" name=\"description\" label=\"Description\" value={values.description}\r\n                                    onChange={handleInputChange}\r\n\r\n\r\n                                    {... (errors.description && { error: true, helperText: errors.description })}\r\n                                />\r\n\r\n                                <TextField className=\"form-ctr\" name=\"phone\" label=\"Phone Number\" value={values.phone}\r\n                                    onChange={handleInputChange}\r\n\r\n\r\n                                    {... (errors.size && { error: true, helperText: errors.size })}\r\n                                />\r\n                                <TextField\r\n                                    className=\"form-ctr\"\r\n                                    id=\"standard-basic\"\r\n                                    type=\"text\"\r\n                                    name=\"address\"\r\n                                    label=\"Address\"\r\n                                    value={values.address}\r\n                                    onChange={handleInputChange}\r\n                                    {...(errors.address && { error: true, helperText: errors.address })}\r\n                                />\r\n\r\n                            \r\n\r\n\r\n\r\n                                {/* /.card-body */}\r\n                                <div className=\"card-footer\">\r\n                                    <div>\r\n                                        <button type=\"submit\" className=\"btn btn-primary\" >Save</button>\r\n                                        <button variant=\"contained\"\r\n                                            className=\"btn btn-secondary\"\r\n                                            onClick={resetForm} style={{ marginLeft: 3 }}>Reset</button>\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                            </form>\r\n\r\n                        </div>\r\n                        {/* /.card */}\r\n                    </div>\r\n                    {/*/.col (left) */}\r\n                    {/* right column */}\r\n                    <div className=\"col-md-6\">\r\n                    </div>\r\n                    {/*/.col (right) */}\r\n                </div>\r\n                {/* /.row */}\r\n            </div>{/* /.container-fluid */}\r\n        </section>\r\n\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    customersList: state.customers.list,\r\n    storesList: state.stores.list\r\n    //categoryList: state.category.list\r\n})\r\n\r\nconst mapActionToProps = {\r\n    fetchAllCustomers: customerActions.fetchAllCustomer,\r\n    deleteCustomer: customerActions.DeleteCustomer,\r\n    // fetchAllCategory: CustomerActions.fetchAllCategory,\r\n    createCustomer: customerActions.createCustomer,\r\n    updateCustomer: customerActions.updateCustomer,\r\n    fetchAllStores: storeActions.fetchAllStore\r\n}\r\nexport default connect(mapStateToProps, mapActionToProps)(withStyles(styles)(AddCustomerForm));","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6 21h12V7H6v14zm2.46-9.12l1.41-1.41L12 12.59l2.12-2.12 1.41 1.41L13.41 14l2.12 2.12-1.41 1.41L12 15.41l-2.12 2.12-1.41-1.41L10.59 14l-2.13-2.12zM15.5 4l-1-1h-5l-1 1H5v2h14V4h-3.5z\"\n}), 'DeleteForeverSharp');\n\nexports.default = _default;"],"sourceRoot":""}