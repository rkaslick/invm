{"version":3,"sources":["views/Components/Forms/Products/AddProduct/AddNewProduct.js","../node_modules/@material-ui/core/esm/ButtonGroup/ButtonGroup.js","views/Components/Forms/Products/AddProduct/AddNewProductForm.js","../node_modules/@material-ui/icons/Delete.js","../node_modules/@material-ui/icons/Edit.js"],"names":["mapActionToProps","fetchAllProducts","productActions","deleteProduct","connect","state","productsList","products","list","withStyles","theme","root","fontSize","paper","margin","spacing","padding","grid","paddingLeft","_ref","classes","props","_objectWithoutProperties","_excluded","addToast","useToasts","_useState","useState","_useState2","_slicedToArray","currentProductId","setCurrentProductId","_useState3","_useState4","confirmDialog","setConfirmDialog","useEffect","showToast","appearance","_jsxs","_Fragment","children","_jsx","PageHeader","title","icon","AddShoppingCartTwoToneIcon","Paper","className","elevation","AddNewProductForm","class","scope","map","record","index","hover","productId","name","description","size","category","stockInHand","reorderLevel","buyingPrice","markup","discountLimit","ButtonGroup","variant","Button","EditIcon","color","onClick","DeleteIcon","onConfirm","id","ConfirmDialog","subTitle","styles","React","ref","_props$color","_props$component","component","Component","_props$disabled","disabled","_props$disableElevati","disableElevation","_props$disableFocusRi","disableFocusRipple","_props$disableRipple","disableRipple","_props$fullWidth","fullWidth","_props$orientation","orientation","_props$size","_props$variant","other","buttonClassName","clsx","grouped","concat","capitalize","_extends","role","contained","vertical","child","display","borderRadius","shape","boxShadow","shadows","width","flexDirection","minWidth","groupedHorizontal","borderTopLeftRadius","borderBottomLeftRadius","borderTopRightRadius","borderBottomRightRadius","groupedVertical","groupedText","groupedTextHorizontal","borderRight","palette","type","groupedTextVertical","borderBottom","groupedTextPrimary","borderColor","alpha","primary","main","groupedTextSecondary","secondary","groupedOutlined","groupedOutlinedHorizontal","marginLeft","borderRightColor","groupedOutlinedVertical","marginTop","borderBottomColor","groupedOutlinedPrimary","groupedOutlinedSecondary","groupedContained","groupedContainedHorizontal","grey","action","groupedContainedVertical","groupedContainedPrimary","dark","groupedContainedSecondary","initialFieldValues","categoryId","sellingPrice","taxId","storeId","fetchAllCategory","categActions","createProducts","updateProducts","fetchAllTaxes","TActions","fetchAllStores","storeActions","categoryList","taxList","tax","storesList","stores","formControl","smMargin","validate","fieldValues","arguments","length","undefined","values","temp","_objectSpread","errors","setErrors","Object","every","x","_useForm","useForm","_useForm2","setValues","handleInputChange","resetForm","find","autoComplete","noValidate","onSubmit","e","preventDefault","onSuccess","parseInt","parseFloat","openPopup","setOpenPopup","TextField","label","value","onChange","error","helperText","FormControl","InputLabel","Select","MenuItem","FormHelperText","console","log","target","profit","sP3","sP4","Math","ceil","rate","style","_interopRequireDefault","require","_interopRequireWildcard","defineProperty","exports","default","_default","createElement","d"],"mappings":"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","file":"static/js/30.fa62ebb5.chunk.js","sourcesContent":["import { Grid, Paper, Table, TableContainer, TableHead, TableRow, TableCell, TableBody, withStyles, ButtonGroup, Button } from \"@material-ui/core\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n//import * as actions from \"../../../../../actions/Staff/addStaff\";\r\nimport * as productActions from \"../../../../../actions/Products/products\";\r\n//import * as storeActions from \"../../../../../actions/Store/stores\";\r\nimport AddNewProductForm from \"./AddNewProductForm\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\n//import PeopleOutlineTwoToneIcon from '@material-ui/icons/PeopleOutlineTwoTone';\r\nimport PageHeader from \"../../../PageHeader\";\r\nimport AddShoppingCartTwoToneIcon from '@material-ui/icons/AddShoppingCartTwoTone';\r\nimport ConfirmDialog from \"../../../controls/ConfirmDialog\";\r\n//import Controls from \"./Controls\";\r\nimport NotListedLocation  from '@material-ui/icons/NotListedLocation';\r\n\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        \"& .MuiTableCell-head\": {\r\n            fontSize: \"0.95rem\"\r\n        }\r\n    },\r\n    paper: {\r\n        margin: theme.spacing(-8.9),\r\n        padding: theme.spacing(6)\r\n    },\r\n\r\n    grid:{\r\n        paddingLeft: theme.spacing(2)\r\n    }\r\n})\r\n\r\n\r\n\r\nconst AddNewProduct = ({ classes, ...props }) => {\r\n    //Toast message\r\n    const { addToast } = useToasts()\r\n    const [currentProductId, setCurrentProductId] = useState(0)\r\n    const [confirmDialog, setConfirmDialog] = useState(false) \r\n    useEffect(() => {\r\n        props.fetchAllProducts()\r\n       // props.fetchAllStores()\r\n    }, [])\r\n\r\n    const showToast= () =>{\r\n        addToast(\"Record was deleted succesffuly\", { appearance: 'error' })\r\n        addToast(\"Record was deleted succesffuly\", { appearance: 'error' })\r\n        addToast(\"Record was deleted succesffuly\", { appearance: 'error' })\r\n        props.fetchAllProducts()\r\n\r\n    }\r\n    const onDelete = id => {\r\n            props.deleteProduct(id, showToast )\r\n            setConfirmDialog(false)\r\n\r\n    }\r\n\r\n    const openInDialog = () => {\r\n        setConfirmDialog(true)\r\n        \r\n        \r\n        \r\n    }\r\n\r\n    return (\r\n         <>\r\n         <PageHeader\r\n                title=\"Products\"\r\n                //subTitle=\"Form design with validation\"\r\n                icon={<AddShoppingCartTwoToneIcon fontSize=\"large\" />}\r\n            />,\r\n         <Paper className={classes.paper} elevation={3}>\r\n            {/* <Grid container>\r\n                <Grid item xs={12}> */}\r\n                    \r\n                    <AddNewProductForm {...({ currentProductId, setCurrentProductId })} />\r\n                {/* </Grid>\r\n                <Grid>\r\n\r\n                </Grid>\r\n                <Grid item xs={12}> */}\r\n                    {/* <TableContainer>\r\n                        <Table>\r\n                            <TableHead className = {classes.root}>\r\n                                <TableRow>\r\n                                    <TableCell>Name</TableCell>\r\n                                    <TableCell>Mobile</TableCell>\r\n                                    <TableCell>Address</TableCell>\r\n                                    <TableCell></TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                 {\r\n                                     props.addStaffList.map((record, index) => {\r\n                                         return ( <TableRow key = {index} hover>\r\n                                             <TableCell>{record.fullName}</TableCell>\r\n                                             <TableCell>{record.mobile}</TableCell>\r\n                                             <TableCell>{record.bloodGroup}</TableCell>\r\n                                             <TableCell>\r\n                                                 <ButtonGroup variant= \"text\">\r\n                                                    <Button><EditIcon color=\"primary\"\r\n                                                    onClick={()=>{setCurrentId(record.id)}}/></Button>\r\n                                                    <Button><DeleteIcon color=\"Secondary\"\r\n                                                    onClick={() => onDelete(record.id)}/></Button>\r\n                                                 </ButtonGroup>\r\n                                             </TableCell>\r\n                                         </TableRow>\r\n\r\n                                         )\r\n                                     })\r\n                                 }\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer> */}\r\n                    <div className={classes.grid}>\r\n                    <table class=\"table  .table-responsive{-sm|-md|-lg|-xl|-xxl} table-bordered table-hover table-sm table-striped\" >\r\n                        <thead class=\"thead-dark\">\r\n                            <tr>\r\n                                <th scope=\"col\">Product Id</th>\r\n                                <th scope=\"col\">Name</th>\r\n                                <th scope=\"col\">Description</th>\r\n                                <th scope=\"col\">Size</th>\r\n                                <th scope=\"col\">Category</th>\r\n                                <th scope=\"col\">Stock In Hand</th>\r\n                                <th scope=\"col\">Re-order Level</th>\r\n                                <th scope=\"col\">Buying Price</th>\r\n                                <th scope=\"col\">Markup</th>\r\n                                <th scope=\"col\">Discount Limit</th>\r\n                                \r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {/* <tr>\r\n                                <th scope=\"row\">1</th>\r\n                                <td>Mark</td>\r\n                                <td>Otto</td>\r\n                                <td>@mdo</td>\r\n                            </tr> */}\r\n                            {\r\n                                     props.productsList.map((record, index) => {\r\n                                         return ( <tr key = {index} hover>\r\n                                             <td>{record.productId}</td>\r\n                                             <td>{record.name}</td>\r\n                                             <td>{record.description}</td>\r\n                                             <td>{record.size}</td>\r\n                                             <td>{record.category}</td>\r\n                                             <td>{record.stockInHand}</td>\r\n                                             <td>{record.reorderLevel}</td>\r\n                                             <td>{record.buyingPrice}</td>\r\n                                             <td>{record.markup}</td>\r\n                                             <td>{record.discountLimit}</td>\r\n                                             <td>\r\n                                                 <ButtonGroup variant= \"text\">\r\n                                                    <Button><EditIcon color=\"primary\"\r\n                                                    onClick={()=>{setCurrentProductId(record.productId)}}/></Button>\r\n                                                    <Button><DeleteIcon color=\"Secondary\"\r\n                                                      onClick={() => {\r\n                                                        openInDialog()\r\n                                                        setConfirmDialog({\r\n                                                            onConfirm: () =>{onDelete(record.productId)}\r\n                                                        })\r\n                                                        \r\n                                                        //onDelete(record.id)\r\n                                                    }\r\n                                                    }\r\n                                                \r\n                                                    /></Button> \r\n                                                 </ButtonGroup>\r\n                                             </td>\r\n                                         </tr>\r\n\r\n                                         )\r\n                                     })\r\n                                 }\r\n                           \r\n                        </tbody>\r\n                    </table>\r\n                    </div>\r\n                {/* </Grid>\r\n            </Grid> */}\r\n        </Paper>\r\n\r\n        <ConfirmDialog \r\n            title=\"Are you sure you want to delete this record?\"\r\n            subTitle=\"This operation can't be reversed\"\r\n            confirmDialog={confirmDialog}\r\n            setConfirmDialog = {setConfirmDialog}\r\n            />\r\n         </>\r\n    );\r\n}\r\n\r\n//export default staff; \r\n\r\nconst mapStateToProps = state => ({\r\n    productsList: state.products.list,\r\n    \r\n})\r\n\r\nconst mapActionToProps = {\r\n    fetchAllProducts: productActions.fetchAllProduct,\r\n    deleteProduct: productActions.DeleteProduct,\r\n    \r\n}\r\n\r\nexport default connect(mapStateToProps, mapActionToProps)(withStyles(styles)(AddNewProduct));\r\n\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport capitalize from '../utils/capitalize';\nimport { alpha } from '../styles/colorManipulator';\nimport withStyles from '../styles/withStyles';\nimport Button from '../Button'; // Force a side effect so we don't have any override priority issue.\n// eslint-disable-next-line no-unused-expressions\n\nButton.styles;\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-flex',\n      borderRadius: theme.shape.borderRadius\n    },\n\n    /* Styles applied to the root element if `variant=\"contained\"`. */\n    contained: {\n      boxShadow: theme.shadows[2]\n    },\n\n    /* Styles applied to the root element if `disableElevation={true}`. */\n    disableElevation: {\n      boxShadow: 'none'\n    },\n\n    /* Pseudo-class applied to child elements if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `fullWidth={true}`. */\n    fullWidth: {\n      width: '100%'\n    },\n\n    /* Styles applied to the root element if `orientation=\"vertical\"`. */\n    vertical: {\n      flexDirection: 'column'\n    },\n\n    /* Styles applied to the children. */\n    grouped: {\n      minWidth: 40\n    },\n\n    /* Styles applied to the children if `orientation=\"horizontal\"`. */\n    groupedHorizontal: {\n      '&:not(:first-child)': {\n        borderTopLeftRadius: 0,\n        borderBottomLeftRadius: 0\n      },\n      '&:not(:last-child)': {\n        borderTopRightRadius: 0,\n        borderBottomRightRadius: 0\n      }\n    },\n\n    /* Styles applied to the children if `orientation=\"vertical\"`. */\n    groupedVertical: {\n      '&:not(:first-child)': {\n        borderTopRightRadius: 0,\n        borderTopLeftRadius: 0\n      },\n      '&:not(:last-child)': {\n        borderBottomRightRadius: 0,\n        borderBottomLeftRadius: 0\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"text\"`. */\n    groupedText: {},\n\n    /* Styles applied to the children if `variant=\"text\"` and `orientation=\"horizontal\"`. */\n    groupedTextHorizontal: {\n      '&:not(:last-child)': {\n        borderRight: \"1px solid \".concat(theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.23)' : 'rgba(255, 255, 255, 0.23)')\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"text\"` and `orientation=\"vertical\"`. */\n    groupedTextVertical: {\n      '&:not(:last-child)': {\n        borderBottom: \"1px solid \".concat(theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.23)' : 'rgba(255, 255, 255, 0.23)')\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"text\"` and `color=\"primary\"`. */\n    groupedTextPrimary: {\n      '&:not(:last-child)': {\n        borderColor: alpha(theme.palette.primary.main, 0.5)\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"text\"` and `color=\"secondary\"`. */\n    groupedTextSecondary: {\n      '&:not(:last-child)': {\n        borderColor: alpha(theme.palette.secondary.main, 0.5)\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"outlined\"`. */\n    groupedOutlined: {},\n\n    /* Styles applied to the children if `variant=\"outlined\"` and `orientation=\"horizontal\"`. */\n    groupedOutlinedHorizontal: {\n      '&:not(:first-child)': {\n        marginLeft: -1\n      },\n      '&:not(:last-child)': {\n        borderRightColor: 'transparent'\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"outlined\"` and `orientation=\"vertical\"`. */\n    groupedOutlinedVertical: {\n      '&:not(:first-child)': {\n        marginTop: -1\n      },\n      '&:not(:last-child)': {\n        borderBottomColor: 'transparent'\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"outlined\"` and `color=\"primary\"`. */\n    groupedOutlinedPrimary: {\n      '&:hover': {\n        borderColor: theme.palette.primary.main\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"outlined\"` and `color=\"secondary\"`. */\n    groupedOutlinedSecondary: {\n      '&:hover': {\n        borderColor: theme.palette.secondary.main\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"contained\"`. */\n    groupedContained: {\n      boxShadow: 'none'\n    },\n\n    /* Styles applied to the children if `variant=\"contained\"` and `orientation=\"horizontal\"`. */\n    groupedContainedHorizontal: {\n      '&:not(:last-child)': {\n        borderRight: \"1px solid \".concat(theme.palette.grey[400]),\n        '&$disabled': {\n          borderRight: \"1px solid \".concat(theme.palette.action.disabled)\n        }\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"contained\"` and `orientation=\"vertical\"`. */\n    groupedContainedVertical: {\n      '&:not(:last-child)': {\n        borderBottom: \"1px solid \".concat(theme.palette.grey[400]),\n        '&$disabled': {\n          borderBottom: \"1px solid \".concat(theme.palette.action.disabled)\n        }\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"contained\"` and `color=\"primary\"`. */\n    groupedContainedPrimary: {\n      '&:not(:last-child)': {\n        borderColor: theme.palette.primary.dark\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"contained\"` and `color=\"secondary\"`. */\n    groupedContainedSecondary: {\n      '&:not(:last-child)': {\n        borderColor: theme.palette.secondary.dark\n      }\n    }\n  };\n};\nvar ButtonGroup = /*#__PURE__*/React.forwardRef(function ButtonGroup(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'default' : _props$color,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$disableElevati = props.disableElevation,\n      disableElevation = _props$disableElevati === void 0 ? false : _props$disableElevati,\n      _props$disableFocusRi = props.disableFocusRipple,\n      disableFocusRipple = _props$disableFocusRi === void 0 ? false : _props$disableFocusRi,\n      _props$disableRipple = props.disableRipple,\n      disableRipple = _props$disableRipple === void 0 ? false : _props$disableRipple,\n      _props$fullWidth = props.fullWidth,\n      fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth,\n      _props$orientation = props.orientation,\n      orientation = _props$orientation === void 0 ? 'horizontal' : _props$orientation,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'outlined' : _props$variant,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"color\", \"component\", \"disabled\", \"disableElevation\", \"disableFocusRipple\", \"disableRipple\", \"fullWidth\", \"orientation\", \"size\", \"variant\"]);\n\n  var buttonClassName = clsx(classes.grouped, classes[\"grouped\".concat(capitalize(orientation))], classes[\"grouped\".concat(capitalize(variant))], classes[\"grouped\".concat(capitalize(variant)).concat(capitalize(orientation))], classes[\"grouped\".concat(capitalize(variant)).concat(color !== 'default' ? capitalize(color) : '')], disabled && classes.disabled);\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    role: \"group\",\n    className: clsx(classes.root, className, fullWidth && classes.fullWidth, disableElevation && classes.disableElevation, variant === 'contained' && classes.contained, orientation === 'vertical' && classes.vertical),\n    ref: ref\n  }, other), React.Children.map(children, function (child) {\n    if (! /*#__PURE__*/React.isValidElement(child)) {\n      return null;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"Material-UI: The ButtonGroup component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    return /*#__PURE__*/React.cloneElement(child, {\n      className: clsx(buttonClassName, child.props.className),\n      color: child.props.color || color,\n      disabled: child.props.disabled || disabled,\n      disableElevation: child.props.disableElevation || disableElevation,\n      disableFocusRipple: disableFocusRipple,\n      disableRipple: disableRipple,\n      fullWidth: fullWidth,\n      size: child.props.size || size,\n      variant: child.props.variant || variant\n    });\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? ButtonGroup.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the button group.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'inherit', 'primary', 'secondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the buttons will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, no elevation is used.\n   */\n  disableElevation: PropTypes.bool,\n\n  /**\n   * If `true`, the button keyboard focus ripple will be disabled.\n   */\n  disableFocusRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the button ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the buttons will take up the full width of its container.\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * The group orientation (layout flow direction).\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n\n  /**\n   * The size of the button.\n   * `small` is equivalent to the dense button styling.\n   */\n  size: PropTypes.oneOf(['large', 'medium', 'small']),\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['contained', 'outlined', 'text'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiButtonGroup'\n})(ButtonGroup);","import React, { Fragment, useState, useEffect } from \"react\";\r\nimport { FormControl, Grid, TextField, withStyles, InputLabel, Select, MenuItem, Button, FormHelperText } from \"@material-ui/core\";\r\nimport { useForm } from \"../../useForm\";\r\nimport { connect } from \"react-redux\";\r\nimport * as categActions from \"../../../../../actions/Category/categories\";\r\nimport * as productActions from \"../../../../../actions/Products/products\";\r\nimport * as storeActions from \"../../../../../actions/Store/stores\";\r\n//import * as userLevelActions from \"../../../../../actions/UserLevel/userLevel\";\r\nimport { ToastConsumer, useToasts } from \"react-toast-notifications\";\r\nimport \"../../staffForm.css\";\r\nimport { RestoreSharp } from \"@material-ui/icons\";\r\nimport * as TActions from \"../../../../../actions/Tax/tax\";\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            margin: theme.spacing(1),\r\n            minWidth: 230,\r\n        }\r\n    },\r\n\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 230,\r\n    },\r\n    smMargin: {\r\n        margin: theme.spacing(1),\r\n\r\n    },\r\n})\r\n\r\nconst initialFieldValues = {\r\n    productId: '',\r\n    name: '',\r\n    description: '',\r\n    size: '',\r\n    categoryId: '',\r\n    buyingPrice: '',\r\n    sellingPrice: '',\r\n    reorderLevel: '',\r\n    stockInHand: '',\r\n    markup: '',\r\n    discountLimit: '',\r\n    taxId: '',\r\n    storeId: 2\r\n    // userId: 1,\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst AddNewProductForm = ({ classes, ...props }) => {\r\n\r\n    //toast message\r\n    const { addToast } = useToasts()\r\n\r\n    //realtime validation for the whole form controls\r\n    const validate = (fieldValues = values) => {\r\n        let temp = { ...errors }\r\n        if ('name' in fieldValues) {\r\n            temp.name = fieldValues.name ? \"\" : \"This field is required\"\r\n            // addToast(\"User data saved succeffuly\", {appearance:'success'})\r\n            // console.log(\"Tast has beeen displayed\")\r\n        }\r\n\r\n\r\n        if ('description' in fieldValues) {\r\n            temp.description = fieldValues.description ? \"\" : \"This field is required\"\r\n        }\r\n\r\n\r\n        // if ('productId' in fieldValues) {\r\n        //     temp.productId = fieldValues.productId ? \"\" : \"This field is required\"\r\n        // }\r\n\r\n\r\n        if ('size' in fieldValues) {\r\n            temp.size = fieldValues.size ? \"\" : \"This field is required\"\r\n        }\r\n        // }\r\n        if ('categoryId' in fieldValues) {\r\n            temp.categoryId = fieldValues.categoryId ? \"\" : \"This field is required\"\r\n        }\r\n\r\n        if ('stockInHand' in fieldValues) {\r\n            temp.stockInHand = fieldValues.stockInHand ? \"\" : \"This field is required\"\r\n        }\r\n\r\n        if ('buyingPrice' in fieldValues) {\r\n            temp.buyingPrice = fieldValues.buyingPrice ? \"\" : \"This field is required\"\r\n        }\r\n        // if ('sellingPrice' in fieldValues) {\r\n        //     temp.sellingPrice = fieldValues.sellingPrice ? \"\" : \"This field is required\"\r\n        // }\r\n        if ('markup' in fieldValues) {\r\n            temp.markup = fieldValues.markup ? \"\" : \"This field is required\"\r\n        }\r\n        if ('reorderLevel' in fieldValues) {\r\n            temp.reorderLevel = fieldValues.reorderLevel ? \"\" : \"This field is required\"\r\n        }\r\n\r\n        // if ('storeId' in fieldValues) {\r\n        //     temp.storeId = fieldValues.storeId ? \"\" : \"This field is required\"\r\n        // }\r\n        // if ('companyDataId' in fieldValues) {\r\n        //     temp.companyDataId = fieldValues.companyDataId ? \"\" : \"This field is required\"\r\n        // }\r\n        // if ('userLevelId' in fieldValues) {\r\n        //     temp.userLevelId = fieldValues.userLevelId ? \"\" : \"This field is required\"\r\n        // }\r\n        // if ('storeId' in fieldValues) {\r\n        //     temp.storeId = fieldValues.storeId ? \"\" : \"This field is required\"\r\n        // }\r\n        // if ('uName' in fieldValues) {\r\n        //     temp.uName = fieldValues.uName ? \"\" : \"This field is required\"\r\n        // }\r\n        // if ('password' in fieldValues) {\r\n        //     temp.password = fieldValues.password ? \"\" : \"This field is required\"\r\n        // }\r\n        // if ('cPswd' in fieldValues) {\r\n        //     temp.cPswd = fieldValues.cPswd ? \"\" : \"This field is required\"\r\n\r\n        // }\r\n\r\n\r\n\r\n\r\n        setErrors({\r\n            ...temp\r\n        })\r\n        if (fieldValues == values) {\r\n            return Object.values(temp).every(x => x == \"\")\r\n        }\r\n\r\n\r\n    }\r\n\r\n    const [\r\n        values,\r\n        setValues,\r\n        errors,\r\n        setErrors,\r\n        handleInputChange,\r\n        resetForm\r\n    ] = useForm(initialFieldValues, validate, props.setCurrentProductId);\r\n\r\n    const showToast = () => {\r\n        addToast(\"Product data saved succeffuly\", { appearance: 'success' })\r\n        addToast(\"Product data saved succeffuly\", { appearance: 'success' })\r\n        addToast(\"Product data saved succeffuly\", { appearance: 'success' })\r\n        props.fetchAllProducts();\r\n    }\r\n\r\n\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n\r\n\r\n        if (validate()) {\r\n\r\n            const onSuccess = () => {\r\n                showToast();\r\n                resetForm();\r\n\r\n\r\n            }\r\n\r\n\r\n\r\n            if (props.currentProductId == 0) {\r\n\r\n                //using toast notification\r\n\r\n                props.createProducts({\r\n                    // productId: values.productId,\r\n                    name: values.name,\r\n                    description: values.description,\r\n                    size: values.size,\r\n                    categoryId: parseInt(values.categoryId),\r\n                    stockInHand: parseInt(values.stockInHand),\r\n                    reorderLevel: parseInt(values.reorderLevel),\r\n                    buyingPrice: parseFloat(values.buyingPrice),\r\n                    markup: parseFloat(values.markup),\r\n                    discountLimit: parseFloat(values.discountLimit),\r\n                    sellingPrice: parseFloat(values.sellingPrice),\r\n                    // storeId: parseInt(values.storeId),\r\n                    taxId: values.taxId\r\n                }, onSuccess)\r\n                //addorEdit(values, onSuccess)\r\n                // console.log(values);\r\n\r\n            }\r\n            else {\r\n                //using windows alert notification\r\n                //props.updateDCandidate(props.currentId, values, () => {window.alert('updated')})\r\n                //using toast notification\r\n                props.updateProducts(props.currentProductId,\r\n                    {\r\n                        // productId: values.productId,\r\n                        name: values.name,\r\n                        description: values.description,\r\n                        size: values.size,\r\n                        categoryId: parseInt(values.categoryId),\r\n                        stockInHand: parseInt(values.stockInHand),\r\n                        reorderLevel: parseInt(values.reorderLevel),\r\n                        buyingPrice: parseFloat(values.buyingPrice),\r\n                        markup: parseFloat(values.markup),\r\n                        discountLimit: parseFloat(values.discountLimit),\r\n                        sellingPrice: parseFloat(values.sellingPrice),\r\n                        // storeId: parseInt(values.storeId),\r\n                        taxId: values.taxId\r\n                    }, onSuccess)\r\n\r\n\r\n\r\n            }\r\n\r\n            if (props.openPopup == true) {\r\n                props.setOpenPopup(false)\r\n            }\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n\r\n        if (props.currentProductId != 0)\r\n            setValues({\r\n                ...props.productsList.find(x => x.productId == props.currentProductId)\r\n            })\r\n        setErrors({})\r\n        props.fetchAllProducts();\r\n        props.fetchAllCategory();\r\n        props.fetchAllTaxes();\r\n        // props.fetchAllStores();\r\n\r\n\r\n    }, [props.currentProductId])\r\n\r\n\r\n    const calcMarkup = e => {\r\n        // console.log(\"Mark up has been called\");\r\n        console.log(e.target.value);\r\n        let profit = parseFloat(e.target.value);\r\n        let buyingPrice = parseFloat(values.buyingPrice);\r\n        let sP1 = profit / 100\r\n        let sP2 = sP1 * buyingPrice;\r\n        let sP3 = buyingPrice + sP2;\r\n\r\n        let sP4 = Math.ceil(sP3 / 10) * 10;\r\n        values.sellingPrice = sP4;\r\n        // console.log(sP4);\r\n        setValues({\r\n            ...values,\r\n            sellingPrice: values.sellingPrice\r\n        })\r\n        handleInputChange(e);\r\n    }\r\n\r\n\r\n    return (\r\n\r\n\r\n        <section className=\"content\">\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                    {/* left column */}\r\n                    <div className=\"col-md-12\">\r\n                        {/* jquery validation */}\r\n                        <div className=\"card card-primary\">\r\n                            <div className=\"card-header\">\r\n                                <h4 className=\"card-title\">Add Products<small> </small></h4>\r\n                            </div>\r\n                            {/* /.card-header */}\r\n                            {/* form start */}\r\n                            <form id=\"quickForm\" autoComplete=\"off\" noValidate className={classes.root} onSubmit={handleSubmit}>\r\n\r\n                                {/* <TextField\r\n                                    className=\"form-ctr\"\r\n                                    id=\"standard-basic\"\r\n                                    type=\"text\"\r\n                                    name=\"productId\"\r\n                                    label=\"Product Id\"\r\n                                    value={values.productId}\r\n                                    onChange={handleInputChange}\r\n                                    {...(errors.productId && { error: true, helperText: errors.productId })}\r\n                                /> */}\r\n                                {/* <FormControl className={classes.formControl}\r\n                                    {...(errors.storeId && { error: true })}\r\n                                >\r\n                                    <InputLabel>Store</InputLabel>\r\n                                    <Select\r\n                                        className=\"form-ctr\"\r\n                                        name=\"storeId\"\r\n                                        label=\" Store\"\r\n                                        value={values.storeId}\r\n                                        //onFocus={fetchStores}\r\n                                        onChange={handleInputChange}\r\n                                        variant=\"outlined\"\r\n\r\n                                    >\r\n\r\n                                        <MenuItem value=\"\">Select Store</MenuItem>\r\n\r\n                                        {\r\n                                            props.storesList.map((record, index) => {\r\n                                                return (\r\n                                                    <MenuItem value={record.storeId}>{record.name}</MenuItem>\r\n\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </Select>\r\n                                    {errors.storeId && <FormHelperText>{errors.storeId}</FormHelperText>}\r\n                                </FormControl> */}\r\n                                <TextField\r\n                                    className=\"form-ctr\"\r\n                                    id=\"standard-basic\"\r\n                                    type=\"text\"\r\n                                    name=\"name\"\r\n                                    label=\"Product Name\"\r\n                                    value={values.name}\r\n                                    onChange={handleInputChange}\r\n                                    {...(errors.name && { error: true, helperText: errors.name })}\r\n                                />\r\n\r\n                                <TextField className=\"form-ctr\" name=\"description\" label=\"Description\" value={values.description}\r\n                                    onChange={handleInputChange}\r\n\r\n\r\n                                    {... (errors.description && { error: true, helperText: errors.description })}\r\n                                />\r\n\r\n                                <TextField className=\"form-ctr\" name=\"size\" label=\"Size\" value={values.size}\r\n                                    onChange={handleInputChange}\r\n\r\n\r\n                                    {... (errors.size && { error: true, helperText: errors.size })}\r\n                                />\r\n\r\n                                <FormControl className={classes.formControl}\r\n                                    {...(errors.categoryId && { error: true })}\r\n                                >\r\n                                    <InputLabel >Category</InputLabel>\r\n                                    <Select\r\n                                        className=\"form-ctr\"\r\n                                        name=\"categoryId\"\r\n                                        label=\"category\"\r\n                                        value={values.categoryId}\r\n                                        onChange={handleInputChange}\r\n\r\n                                    >\r\n                                        <MenuItem value=\"\">Select Category</MenuItem>\r\n                                        {\r\n                                            props.categoryList.map((record, index) => {\r\n                                                return (\r\n                                                    <MenuItem value={record.id}>{record.name}</MenuItem>\r\n\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </Select>\r\n                                    {errors.categoryId && <FormHelperText>{errors.categoryId}</FormHelperText>}\r\n                                </FormControl>\r\n\r\n                                {/* <TextField className=\"form-ctr\" name=\"phone\" label=\"Categ Phone No\" value={values.phone}\r\n                                    onChange={handleInputChange}\r\n\r\n                                    {... (errors.phone && { error: true, helperText: errors.phone })}\r\n                                /> */}\r\n\r\n                                {/* <TextField\r\n                                    className=\"form-ctr\"\r\n                                    name=\"email\"\r\n                                    label=\"Email\" type=\"email\" value={values.email}\r\n                                    onChange={handleInputChange}\r\n\r\n                                    {...(errors.email && { error: true, helperText: errors.email })}\r\n                                /> */}\r\n\r\n                                {/* <TextField className=\"form-ctr\" name=\"location\" label=\"location\" value={values.location}\r\n                                    onChange={handleInputChange}\r\n\r\n                                    {... (errors.location && { error: true, helperText: errors.location })}\r\n                                />\r\n\r\n                               \r\n                             \r\n\r\n                             <FormControl className={classes.formControl}\r\n                                    {...(errors.userLevelId && { error: true })}\r\n                                >\r\n                                    <InputLabel >Company</InputLabel>\r\n                                    <Select\r\n                                        className=\"form-ctr\"\r\n                                        name=\"companyDataId\"\r\n                                        label=\"Company\"\r\n                                        value={values.companyDataId}\r\n                                        onChange={handleInputChange}\r\n\r\n                                    > */}\r\n                                {/* <MenuItem value=\"\">Select Company</MenuItem>\r\n                                        <MenuItem value=\"1\">{1}</MenuItem>\r\n                                        {/* {\r\n                                            props.userLevelList.map((record, index) => {\r\n                                                return (\r\n                                                    <MenuItem value={record.id}>{record.level}</MenuItem>\r\n\r\n                                                )\r\n                                            })\r\n                                        } */}\r\n                                {/* </Select>\r\n                                    {errors.companyDataId && <FormHelperText>{errors.companyDataId}</FormHelperText>}\r\n                                </FormControl>   */}\r\n\r\n                                <TextField\r\n                                    className=\"form-ctr\"\r\n                                    id=\"standard-basic\"\r\n                                    type=\"text\"\r\n                                    name=\"stockInHand\"\r\n                                    label=\"Stock In Hand\"\r\n                                    value={values.stockInHand}\r\n                                    onChange={handleInputChange}\r\n                                    {...(errors.stockInHand && { error: true, helperText: errors.stockInHand })}\r\n                                />\r\n\r\n                                <TextField\r\n                                    className=\"form-ctr\"\r\n                                    id=\"standard-basic\"\r\n                                    type=\"text\"\r\n                                    name=\"reorderLevel\"\r\n                                    label=\"Re-order Level\"\r\n                                    value={values.reorderLevel}\r\n                                    onChange={handleInputChange}\r\n                                    {...(errors.reorderLevel && { error: true, helperText: errors.reorderLevel })}\r\n                                />\r\n\r\n                                <TextField\r\n                                    className=\"form-ctr\"\r\n                                    id=\"standard-basic\"\r\n                                    type=\"text\"\r\n                                    name=\"buyingPrice\"\r\n                                    label=\"Buying Price\"\r\n                                    value={values.buyingPrice}\r\n                                    onChange={handleInputChange}\r\n                                    {...(errors.buyingPrice && { error: true, helperText: errors.buyingPrice })}\r\n                                />\r\n\r\n                                <TextField\r\n                                    className=\"form-ctr\"\r\n                                    id=\"standard-basic\"\r\n                                    type=\"text\"\r\n                                    name=\"markup\"\r\n                                    label=\"Markup\"\r\n                                    value={values.markup}\r\n                                    onChange={calcMarkup}\r\n                                    {...(errors.markup && { error: true, helperText: errors.markup })}\r\n                                />\r\n                                <TextField\r\n                                    className=\"form-ctr\"\r\n                                    id=\"standard-basic\"\r\n                                    type=\"text\"\r\n                                    name=\"sellingPrice\"\r\n                                    label=\"Selling Price\"\r\n                                    value={values.sellingPrice}\r\n                                    onChange={handleInputChange}\r\n                                    {...(errors.sellingPrice && { error: true, helperText: errors.sellingPrice })}\r\n                                />\r\n\r\n                                <TextField\r\n                                    className=\"form-ctr\"\r\n                                    id=\"standard-basic\"\r\n                                    type=\"text\"\r\n                                    name=\"discountLimit\"\r\n                                    label=\"Discount Limit \"\r\n                                    value={values.discountLimit}\r\n                                    onChange={handleInputChange}\r\n                                    {...(errors.discountLimit && { error: true, helperText: errors.discountLimit })}\r\n                                />\r\n\r\n                                <FormControl className={classes.formControl}\r\n                                // {...(errors.categoryId && { error: true })}\r\n                                >\r\n                                    <InputLabel >Tax</InputLabel>\r\n                                    <Select\r\n                                        className=\"form-ctr\"\r\n                                        name=\"taxId\"\r\n                                        label=\"Tax\"\r\n                                        value={values.taxId}\r\n                                        onChange={handleInputChange}\r\n\r\n                                    >\r\n                                        <MenuItem value=\"\">Select Tax</MenuItem>\r\n                                        {\r\n                                            props.taxList.map((record, index) => {\r\n                                                return (\r\n                                                    <MenuItem value={record.taxId}>{record.rate}%</MenuItem>\r\n\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </Select>\r\n                                    {/* {errors.categoryId && <FormHelperText>{errors.categoryId}</FormHelperText>} */}\r\n                                </FormControl>\r\n\r\n\r\n                                {/* /.card-body */}\r\n                                <div className=\"card-footer\">\r\n                                    <div>\r\n                                        <button type=\"submit\" className=\"btn btn-primary\" >Save</button>\r\n                                        <button variant=\"contained\"\r\n                                            className=\"btn btn-secondary\"\r\n                                            onClick={resetForm} style={{ marginLeft: 3 }}>Reset</button>\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                            </form>\r\n\r\n                        </div>\r\n                        {/* /.card */}\r\n                    </div>\r\n                    {/*/.col (left) */}\r\n                    {/* right column */}\r\n                    <div className=\"col-md-6\">\r\n                    </div>\r\n                    {/*/.col (right) */}\r\n                </div>\r\n                {/* /.row */}\r\n            </div>{/* /.container-fluid */}\r\n        </section>\r\n\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    productsList: state.products.list,\r\n    categoryList: state.category.list,\r\n    taxList: state.tax.list,\r\n    storesList: state.stores.list,\r\n})\r\n\r\nconst mapActionToProps = {\r\n    fetchAllProducts: productActions.fetchAllProduct,\r\n    deleteProduct: productActions.DeleteProduct,\r\n    fetchAllCategory: categActions.fetchAllCategory,\r\n    createProducts: productActions.createProduct,\r\n    updateProducts: productActions.updateProduct,\r\n    fetchAllTaxes: TActions.fetchAllTaxes,\r\n    fetchAllStores: storeActions.fetchAllStore\r\n}\r\nexport default connect(mapStateToProps, mapActionToProps)(withStyles(styles)(AddNewProductForm));","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 00-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'Edit');\n\nexports.default = _default;"],"sourceRoot":""}