{"version":3,"sources":["views/Components/Forms/Stores/ViewAll/ViewAllStores.js","../node_modules/@material-ui/core/esm/ButtonGroup/ButtonGroup.js","../node_modules/@material-ui/icons/StorefrontOutlined.js","views/Components/Forms/Stores/AddStores/AddNewStoreForm.js","../node_modules/@material-ui/icons/StoreSharp.js","../node_modules/@material-ui/icons/Delete.js","../node_modules/@material-ui/icons/Edit.js","../node_modules/@material-ui/icons/Add.js","../node_modules/@material-ui/icons/DeleteForeverSharp.js","views/Components/Forms/Stores/AddStores/AddNewStore.js"],"names":["headCells","id","label","disableSorting","mapActionToProps","fetchAllStores","storeActions","DeleteStore","connect","state","storesList","stores","list","withStyles","theme","paper","margin","spacing","padding","searchInput","width","newButton","position","right","_ref","classes","props","_objectWithoutProperties","_excluded","_useState","useState","fn","items","_useState2","_slicedToArray","filterFn","setFilterFn","_useState3","_useState4","openPopup","setOpenPopup","_useState5","_useState6","currentStoreId","setcurrentStoreId","addToast","useToasts","_useState7","isOpen","message","type","notify","setNotify","_useState8","_useState9","confirmDialog","setConfirmDialog","_useState10","_useState11","showToast","appearance","useEffect","_useTable","useTable","TblContainer","TblHead","TblPagination","recordsAfterPagingAndSorting","_jsxs","_Fragment","children","_jsx","PageHeader","title","icon","StorefrontOutlinedIcon","fontSize","Paper","className","elevation","Toolbar","Controls","Input","InputProps","startAdornment","InputAdornment","Search","onChange","e","target","value","filter","x","name","toLowerCase","includes","address","phone","location","Button","text","variant","startIcon","AddIcon","onClick","class","TableBody","map","record","index","TableRow","hover","TableCell","ActionButton","color","openInPopup","storeId","EditOutlinedIcon","onConfirm","DeleteIcon","Popup","AddNewStoreForm","Notification","ConfirmDialog","subTitle","styles","ButtonGroup","React","ref","_props$color","_props$component","component","Component","_props$disabled","disabled","_props$disableElevati","disableElevation","_props$disableFocusRi","disableFocusRipple","_props$disableRipple","disableRipple","_props$fullWidth","fullWidth","_props$orientation","orientation","_props$size","size","_props$variant","other","buttonClassName","clsx","grouped","concat","capitalize","_extends","role","root","contained","vertical","child","display","borderRadius","shape","boxShadow","shadows","flexDirection","minWidth","groupedHorizontal","borderTopLeftRadius","borderBottomLeftRadius","borderTopRightRadius","borderBottomRightRadius","groupedVertical","groupedText","groupedTextHorizontal","borderRight","palette","groupedTextVertical","borderBottom","groupedTextPrimary","borderColor","alpha","primary","main","groupedTextSecondary","secondary","groupedOutlined","groupedOutlinedHorizontal","marginLeft","borderRightColor","groupedOutlinedVertical","marginTop","borderBottomColor","groupedOutlinedPrimary","groupedOutlinedSecondary","groupedContained","groupedContainedHorizontal","grey","action","groupedContainedVertical","groupedContainedPrimary","dark","groupedContainedSecondary","_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","default","_default","createElement","d","initialFieldValues","companyDataId","createStore","updateStore","formControl","smMargin","validate","fieldValues","arguments","length","undefined","values","temp","_objectSpread","errors","setErrors","every","_useForm","useForm","setCurrentStoreId","_useForm2","setValues","handleInputChange","resetForm","find","autoComplete","noValidate","onSubmit","preventDefault","onSuccess","store","parseInt","TextField","error","helperText","FormControl","userLevelId","InputLabel","Select","MenuItem","FormHelperText","style","grid","paddingLeft","StorefrontTwoToneIcon","scope","EditIcon"],"mappings":"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","file":"static/js/8.76b48725.chunk.js","sourcesContent":["import { Paper, TableBody, TableCell, TableRow, TextField, Toolbar, withStyles, InputAdornment } from \"@material-ui/core\";\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\n//import * as actions from \"../../../../../actions/Staff/addStaff\";\r\nimport * as storeActions from \"../../../../../actions/Store/stores\";\r\nimport { connect } from \"react-redux\";\r\nimport useTable from \"../../useTable\";\r\nimport Controls from \"../../../controls/Controls\";\r\nimport { EditOutlined, Search } from \"@material-ui/icons\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport PageHeader from \"../../../PageHeader\";\r\nimport StorefrontOutlinedIcon from '@material-ui/icons/StorefrontOutlined';\r\nimport Popup from \"../../../Popup\";\r\nimport AddNewStoreForm from \"../AddStores/AddNewStoreForm\";\r\nimport AddNewStore from \"../AddStores/AddNewStore\";\r\nimport EditOutlinedIcon from \"@material-ui/icons/EditOutlined\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport DeleteIcon from \"@material-ui/icons/DeleteForeverSharp\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport Notification from \"../../../controls/Notification\";\r\nimport ConfirmDialog from \"../../../controls/ConfirmDialog\";\r\n\r\n\r\n\r\nconst styles = theme => ({\r\n\r\n    paper: {\r\n        margin: theme.spacing(-8.9),\r\n        padding: theme.spacing(6),\r\n\r\n    },\r\n\r\n    searchInput: {\r\n        width: '75%'\r\n    },\r\n\r\n    newButton: {\r\n        position: 'absolute',\r\n        right: '10px '\r\n\r\n    },\r\n   \r\n})\r\n\r\nconst headCells = [\r\n    { id: 'name', label: 'Store Name' },\r\n    { id: 'address', label: 'Address' },\r\n    { id: 'phone', label: 'Store Phone' },\r\n    { id: 'location', label: 'Location' },\r\n    { id: 'Actions', label: 'Actions', disableSorting: true },\r\n]\r\n\r\nconst ViewAllStores = ({ classes, ...props }) => {\r\n\r\n    const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n    const [openPopup, setOpenPopup] = useState(false)\r\n    const [currentStoreId, setcurrentStoreId] = useState(0)\r\n    const { addToast } = useToasts()\r\n    const {notify, setNotify} = useState({isOpen:false, message:'', type:''})\r\n    const [confirmDialog, setConfirmDialog] = useState(false) \r\n    const [deleteRecord, setDeleteRecord] = useState(false)\r\n\r\n    const showToast= () =>{\r\n        addToast(\"Record was deleted succesffuly\", { appearance: 'error' })\r\n        addToast(\"Record was deleted succesffuly\", { appearance: 'error' })\r\n        addToast(\"Record was deleted succesffuly\", { appearance: 'error' })\r\n\r\n    }\r\n    const onDelete = id => {\r\n            props.DeleteStore(id, showToast )\r\n            setConfirmDialog(false)\r\n\r\n    }\r\n    \r\n\r\n    useEffect(() => {\r\n        props. fetchAllStores();\r\n\r\n       \r\n\r\n    }, []);\r\n\r\n\r\n\r\n\r\n    const {\r\n        TblContainer,\r\n        TblHead,\r\n        TblPagination,\r\n        recordsAfterPagingAndSorting,\r\n    } = useTable(props.storesList, headCells, filterFn)\r\n\r\n\r\n    const handleSearch = e => {\r\n        let target = e.target;\r\n        setFilterFn({\r\n            fn: items => {\r\n                if (target.value == \"\")\r\n                    return items;\r\n                else {\r\n                    return items.filter(x =>\r\n\r\n                        x.name.toLowerCase().includes(target.value.toLowerCase()) +\r\n                        x.address.toLowerCase().includes(target.value.toLowerCase()) +\r\n                        x.phone.toLowerCase().includes(target.value.toLowerCase()) +\r\n                        x.location.toLowerCase().includes(target.value.toLowerCase()))\r\n\r\n                }\r\n\r\n\r\n\r\n\r\n            }\r\n        })\r\n    }\r\n\r\n    const addorEdit = (employee, resetForm) => {\r\n\r\n        setOpenPopup(false)\r\n        setNotify({\r\n            isOpen:true,\r\n            message:'Submitted Successfully',\r\n            type: 'Success'\r\n        })\r\n    }\r\n\r\n    const openInPopup = record => {\r\n        setcurrentStoreId(record)\r\n        setOpenPopup(true)\r\n    }\r\n\r\n    const openInDialog = () => {\r\n        setConfirmDialog(true)\r\n        \r\n        \r\n        \r\n    }\r\n\r\n    return (\r\n\r\n        <>\r\n            <PageHeader\r\n                title=\"Stores List\"\r\n                //subTitle=\"Form design with validation\"\r\n                icon={<StorefrontOutlinedIcon  fontSize=\"large\" />}\r\n            />,\r\n            <Paper className={classes.paper} elevation={3}>\r\n\r\n                <Toolbar>\r\n                    <Controls.Input\r\n                        className={classes.searchInput}\r\n                        label=\"Search Stores\"\r\n\r\n                        InputProps={{\r\n                            startAdornment: (<InputAdornment position=\"start\">\r\n                                <Search />\r\n                            </InputAdornment>)\r\n                        }}\r\n                        onChange={handleSearch}\r\n\r\n                    />\r\n                    <Controls.Button\r\n                        text=\"Add New\"\r\n                        variant=\"outlined\"\r\n                        startIcon={<AddIcon />}\r\n                        className={classes.newButton}\r\n                        onClick={() => {setOpenPopup(true); setcurrentStoreId(0);}}\r\n                    />\r\n                </Toolbar>\r\n                <table class=\"table .table-responsive{-sm|-md|-lg|-xl|-xxl} table-hover \" >\r\n                    <thead >\r\n\r\n\r\n                    </thead>\r\n                    <tbody>\r\n                        <TblContainer >\r\n                            <TblHead />\r\n                            <TableBody>\r\n                                {\r\n                                    recordsAfterPagingAndSorting().map((record, index) => {\r\n                                        return (<TableRow key={index} hover>\r\n                                            <TableCell>{record.name}</TableCell>\r\n                                            <TableCell>{record.address}</TableCell>\r\n                                            <TableCell>{record.phone}</TableCell>\r\n                                            <TableCell>{record.location} </TableCell>\r\n                                        \r\n                                            <TableCell>\r\n                                                <Controls.ActionButton\r\n                                                    color=\"primary\"\r\n                                                    // onClick={()=>{setcurrentStoreId(record.id)}}\r\n                                                    onClick={()=> {openInPopup(record.storeId)}}\r\n                                                >\r\n                                                    <EditOutlinedIcon fontSize=\"small\" />\r\n                                                </Controls.ActionButton>\r\n                                                <Controls.ActionButton\r\n                                                    color=\"secondary\"\r\n                                                    onClick={() => {\r\n                                                        openInDialog()\r\n                                                        setConfirmDialog({\r\n                                                            onConfirm: () =>{onDelete(record.storeId)}\r\n                                                        })\r\n                                                        \r\n                                                        //onDelete(record.id)\r\n                                                    }\r\n                                                    }\r\n                                                >\r\n                                                    <DeleteIcon fontSize=\"small\" />\r\n                                                </Controls.ActionButton>\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n\r\n                                        )\r\n                                    })\r\n                                }\r\n\r\n                            </TableBody>\r\n                        </TblContainer>\r\n\r\n\r\n                    </tbody>\r\n                </table>\r\n\r\n                <TblPagination />\r\n            </Paper>\r\n            <Popup\r\n                title=\"Stores Form\"\r\n                openPopup={openPopup}\r\n                setOpenPopup={setOpenPopup}\r\n            >\r\n                <AddNewStoreForm\r\n                {...({ currentStoreId, setcurrentStoreId, openPopup, setOpenPopup }) }\r\n                    //addorEdit={addorEdit}\r\n                />\r\n            </Popup>\r\n            <Notification\r\n            notify={notify}\r\n            setNotify ={setNotify} \r\n            />\r\n            <ConfirmDialog \r\n            title=\"Are you sure you want to delete this record?\"\r\n            subTitle=\"This operation can't be reversed\"\r\n            confirmDialog={confirmDialog}\r\n            setConfirmDialog = {setConfirmDialog}\r\n            />\r\n        </>\r\n        // {...({ currentStoreId, setcurrentStoreId }) }\r\n\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    storesList: state.stores.list,\r\n\r\n})\r\n\r\nconst mapActionToProps = {\r\n    fetchAllStores: storeActions.fetchAllStore,\r\n    DeleteStore: storeActions.DeleteStore,\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, mapActionToProps)(withStyles(styles)(ViewAllStores));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport capitalize from '../utils/capitalize';\nimport { alpha } from '../styles/colorManipulator';\nimport withStyles from '../styles/withStyles';\nimport Button from '../Button'; // Force a side effect so we don't have any override priority issue.\n// eslint-disable-next-line no-unused-expressions\n\nButton.styles;\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-flex',\n      borderRadius: theme.shape.borderRadius\n    },\n\n    /* Styles applied to the root element if `variant=\"contained\"`. */\n    contained: {\n      boxShadow: theme.shadows[2]\n    },\n\n    /* Styles applied to the root element if `disableElevation={true}`. */\n    disableElevation: {\n      boxShadow: 'none'\n    },\n\n    /* Pseudo-class applied to child elements if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `fullWidth={true}`. */\n    fullWidth: {\n      width: '100%'\n    },\n\n    /* Styles applied to the root element if `orientation=\"vertical\"`. */\n    vertical: {\n      flexDirection: 'column'\n    },\n\n    /* Styles applied to the children. */\n    grouped: {\n      minWidth: 40\n    },\n\n    /* Styles applied to the children if `orientation=\"horizontal\"`. */\n    groupedHorizontal: {\n      '&:not(:first-child)': {\n        borderTopLeftRadius: 0,\n        borderBottomLeftRadius: 0\n      },\n      '&:not(:last-child)': {\n        borderTopRightRadius: 0,\n        borderBottomRightRadius: 0\n      }\n    },\n\n    /* Styles applied to the children if `orientation=\"vertical\"`. */\n    groupedVertical: {\n      '&:not(:first-child)': {\n        borderTopRightRadius: 0,\n        borderTopLeftRadius: 0\n      },\n      '&:not(:last-child)': {\n        borderBottomRightRadius: 0,\n        borderBottomLeftRadius: 0\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"text\"`. */\n    groupedText: {},\n\n    /* Styles applied to the children if `variant=\"text\"` and `orientation=\"horizontal\"`. */\n    groupedTextHorizontal: {\n      '&:not(:last-child)': {\n        borderRight: \"1px solid \".concat(theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.23)' : 'rgba(255, 255, 255, 0.23)')\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"text\"` and `orientation=\"vertical\"`. */\n    groupedTextVertical: {\n      '&:not(:last-child)': {\n        borderBottom: \"1px solid \".concat(theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.23)' : 'rgba(255, 255, 255, 0.23)')\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"text\"` and `color=\"primary\"`. */\n    groupedTextPrimary: {\n      '&:not(:last-child)': {\n        borderColor: alpha(theme.palette.primary.main, 0.5)\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"text\"` and `color=\"secondary\"`. */\n    groupedTextSecondary: {\n      '&:not(:last-child)': {\n        borderColor: alpha(theme.palette.secondary.main, 0.5)\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"outlined\"`. */\n    groupedOutlined: {},\n\n    /* Styles applied to the children if `variant=\"outlined\"` and `orientation=\"horizontal\"`. */\n    groupedOutlinedHorizontal: {\n      '&:not(:first-child)': {\n        marginLeft: -1\n      },\n      '&:not(:last-child)': {\n        borderRightColor: 'transparent'\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"outlined\"` and `orientation=\"vertical\"`. */\n    groupedOutlinedVertical: {\n      '&:not(:first-child)': {\n        marginTop: -1\n      },\n      '&:not(:last-child)': {\n        borderBottomColor: 'transparent'\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"outlined\"` and `color=\"primary\"`. */\n    groupedOutlinedPrimary: {\n      '&:hover': {\n        borderColor: theme.palette.primary.main\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"outlined\"` and `color=\"secondary\"`. */\n    groupedOutlinedSecondary: {\n      '&:hover': {\n        borderColor: theme.palette.secondary.main\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"contained\"`. */\n    groupedContained: {\n      boxShadow: 'none'\n    },\n\n    /* Styles applied to the children if `variant=\"contained\"` and `orientation=\"horizontal\"`. */\n    groupedContainedHorizontal: {\n      '&:not(:last-child)': {\n        borderRight: \"1px solid \".concat(theme.palette.grey[400]),\n        '&$disabled': {\n          borderRight: \"1px solid \".concat(theme.palette.action.disabled)\n        }\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"contained\"` and `orientation=\"vertical\"`. */\n    groupedContainedVertical: {\n      '&:not(:last-child)': {\n        borderBottom: \"1px solid \".concat(theme.palette.grey[400]),\n        '&$disabled': {\n          borderBottom: \"1px solid \".concat(theme.palette.action.disabled)\n        }\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"contained\"` and `color=\"primary\"`. */\n    groupedContainedPrimary: {\n      '&:not(:last-child)': {\n        borderColor: theme.palette.primary.dark\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"contained\"` and `color=\"secondary\"`. */\n    groupedContainedSecondary: {\n      '&:not(:last-child)': {\n        borderColor: theme.palette.secondary.dark\n      }\n    }\n  };\n};\nvar ButtonGroup = /*#__PURE__*/React.forwardRef(function ButtonGroup(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'default' : _props$color,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$disableElevati = props.disableElevation,\n      disableElevation = _props$disableElevati === void 0 ? false : _props$disableElevati,\n      _props$disableFocusRi = props.disableFocusRipple,\n      disableFocusRipple = _props$disableFocusRi === void 0 ? false : _props$disableFocusRi,\n      _props$disableRipple = props.disableRipple,\n      disableRipple = _props$disableRipple === void 0 ? false : _props$disableRipple,\n      _props$fullWidth = props.fullWidth,\n      fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth,\n      _props$orientation = props.orientation,\n      orientation = _props$orientation === void 0 ? 'horizontal' : _props$orientation,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'outlined' : _props$variant,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"color\", \"component\", \"disabled\", \"disableElevation\", \"disableFocusRipple\", \"disableRipple\", \"fullWidth\", \"orientation\", \"size\", \"variant\"]);\n\n  var buttonClassName = clsx(classes.grouped, classes[\"grouped\".concat(capitalize(orientation))], classes[\"grouped\".concat(capitalize(variant))], classes[\"grouped\".concat(capitalize(variant)).concat(capitalize(orientation))], classes[\"grouped\".concat(capitalize(variant)).concat(color !== 'default' ? capitalize(color) : '')], disabled && classes.disabled);\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    role: \"group\",\n    className: clsx(classes.root, className, fullWidth && classes.fullWidth, disableElevation && classes.disableElevation, variant === 'contained' && classes.contained, orientation === 'vertical' && classes.vertical),\n    ref: ref\n  }, other), React.Children.map(children, function (child) {\n    if (! /*#__PURE__*/React.isValidElement(child)) {\n      return null;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"Material-UI: The ButtonGroup component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    return /*#__PURE__*/React.cloneElement(child, {\n      className: clsx(buttonClassName, child.props.className),\n      color: child.props.color || color,\n      disabled: child.props.disabled || disabled,\n      disableElevation: child.props.disableElevation || disableElevation,\n      disableFocusRipple: disableFocusRipple,\n      disableRipple: disableRipple,\n      fullWidth: fullWidth,\n      size: child.props.size || size,\n      variant: child.props.variant || variant\n    });\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? ButtonGroup.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the button group.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'inherit', 'primary', 'secondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the buttons will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, no elevation is used.\n   */\n  disableElevation: PropTypes.bool,\n\n  /**\n   * If `true`, the button keyboard focus ripple will be disabled.\n   */\n  disableFocusRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the button ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the buttons will take up the full width of its container.\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * The group orientation (layout flow direction).\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n\n  /**\n   * The size of the button.\n   * `small` is equivalent to the dense button styling.\n   */\n  size: PropTypes.oneOf(['large', 'medium', 'small']),\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['contained', 'outlined', 'text'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiButtonGroup'\n})(ButtonGroup);","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M21.9 8.89l-1.05-4.37c-.22-.9-1-1.52-1.91-1.52H5.05c-.9 0-1.69.63-1.9 1.52L2.1 8.89c-.24 1.02-.02 2.06.62 2.88.08.11.19.19.28.29V19c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2v-6.94c.09-.09.2-.18.28-.28.64-.82.87-1.87.62-2.89zm-2.99-3.9l1.05 4.37c.1.42.01.84-.25 1.17-.14.18-.44.47-.94.47-.61 0-1.14-.49-1.21-1.14L16.98 5l1.93-.01zM13 5h1.96l.54 4.52c.05.39-.07.78-.33 1.07-.22.26-.54.41-.95.41-.67 0-1.22-.59-1.22-1.31V5zM8.49 9.52L9.04 5H11v4.69c0 .72-.55 1.31-1.29 1.31-.34 0-.65-.15-.89-.41-.25-.29-.37-.68-.33-1.07zm-4.45-.16L5.05 5h1.97l-.58 4.86c-.08.65-.6 1.14-1.21 1.14-.49 0-.8-.29-.93-.47-.27-.32-.36-.75-.26-1.17zM5 19v-6.03c.08.01.15.03.23.03.87 0 1.66-.36 2.24-.95.6.6 1.4.95 2.31.95.87 0 1.65-.36 2.23-.93.59.57 1.39.93 2.29.93.84 0 1.64-.35 2.24-.95.58.59 1.37.95 2.24.95.08 0 .15-.02.23-.03V19H5z\"\n}), 'StorefrontOutlined');\n\nexports.default = _default;","import React, { Fragment, useState, useEffect } from \"react\";\r\nimport { FormControl, Grid, TextField, withStyles, InputLabel, Select, MenuItem, Button, FormHelperText } from \"@material-ui/core\";\r\nimport { useForm } from \"../../useForm\";\r\nimport { connect } from \"react-redux\";\r\n//import * as actions from \"../../../../../actions/Staff/addStaff\";\r\nimport * as storeActions from \"../../../../../actions/Store/stores\";\r\nimport * as userLevelActions from \"../../../../../actions/UserLevel/userLevel\";\r\nimport { ToastConsumer, useToasts } from \"react-toast-notifications\";\r\nimport \"../../staffForm.css\";\r\nimport { RestoreSharp } from \"@material-ui/icons\";\r\n\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            margin: theme.spacing(1),\r\n            minWidth: 230,\r\n        }\r\n    },\r\n\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 230,\r\n    },\r\n    smMargin: {\r\n        margin: theme.spacing(1),\r\n        \r\n    },\r\n})\r\n\r\nconst initialFieldValues = {\r\n\r\n    name: '',\r\n    address: '',\r\n    phone: '',\r\n    location: '',\r\n    // email: '',\r\n    // address: '',\r\n    companyDataId: '',\r\n    \r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst AddNewStoreForm = ({ classes, ...props }) => {\r\n    \r\n    //toast message\r\n    const { addToast } = useToasts()\r\n    \r\n    //realtime validation for the whole form controls\r\n    const validate = (fieldValues = values) => {\r\n        let temp = { ...errors }\r\n        if ('name' in fieldValues) {\r\n            temp.name = fieldValues.name ? \"\" : \"This field is required\"\r\n            // addToast(\"User data saved succeffuly\", {appearance:'success'})\r\n            // console.log(\"Tast has beeen displayed\")\r\n        }\r\n\r\n\r\n        if ('address' in fieldValues) {\r\n            temp.address = fieldValues.address ? \"\" : \"This field is required\"\r\n        }\r\n\r\n\r\n        if ('location' in fieldValues) {\r\n            temp.location = fieldValues.location ? \"\" : \"This field is required\"\r\n        }\r\n\r\n\r\n        // if ('email' in fieldValues) {\r\n        //     if (temp.email != \" \") {\r\n        //         temp.email = (/^&|.+@.+..+/).test(fieldValues.email) ? \"\" : \"Email is not valid\"\r\n        //     }\r\n        // }\r\n        if ('phone' in fieldValues) {\r\n            temp.phone = fieldValues.phone ? \"\" : \"This field is required\"\r\n        }\r\n        // if ('companyDataId' in fieldValues) {\r\n        //     temp.companyDataId = fieldValues.companyDataId ? \"\" : \"This field is required\"\r\n        // }\r\n        // if ('userLevelId' in fieldValues) {\r\n        //     temp.userLevelId = fieldValues.userLevelId ? \"\" : \"This field is required\"\r\n        // }\r\n        // if ('storeId' in fieldValues) {\r\n        //     temp.storeId = fieldValues.storeId ? \"\" : \"This field is required\"\r\n        // }\r\n        // if ('uName' in fieldValues) {\r\n        //     temp.uName = fieldValues.uName ? \"\" : \"This field is required\"\r\n        // }\r\n        // if ('password' in fieldValues) {\r\n        //     temp.password = fieldValues.password ? \"\" : \"This field is required\"\r\n        // }\r\n        // if ('cPswd' in fieldValues) {\r\n        //     temp.cPswd = fieldValues.cPswd ? \"\" : \"This field is required\"\r\n\r\n        // }\r\n\r\n\r\n\r\n\r\n        setErrors({\r\n            ...temp\r\n        })\r\n        if (fieldValues == values) {\r\n            return Object.values(temp).every(x => x == \"\")\r\n        }\r\n\r\n\r\n    }\r\n\r\n    const [\r\n        values,\r\n        setValues,\r\n        errors,\r\n        setErrors,\r\n        handleInputChange,\r\n        resetForm\r\n    ] = useForm(initialFieldValues, validate, props.setCurrentStoreId);\r\n\r\n    const showToast = () => {\r\n        addToast(\"Store data saved succeffuly\", { appearance: 'success' })\r\n        addToast(\"Store data saved succeffuly\", { appearance: 'success' })\r\n        addToast(\"Store data saved succeffuly\", { appearance: 'success' })\r\n        props.fetchAllStores();\r\n    }\r\n\r\n\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n\r\n\r\n        if (validate()) {\r\n\r\n            const onSuccess = () => {\r\n                showToast();\r\n                resetForm();\r\n                \r\n\r\n            }\r\n\r\n\r\n            const store={\r\n                name: values.name,\r\n                address: values.address,\r\n                phone: values.phone,\r\n                location:values.location,\r\n                companyDataId: parseInt(values.companyDataId)\r\n            }\r\n            if (props.currentStoreId == 0) {\r\n\r\n                //using toast notification\r\n               \r\n\r\n                props.createStore(store, onSuccess)\r\n                //addorEdit(values, onSuccess)\r\n\r\n             \r\n                \r\n            }\r\n            else {\r\n                //using windows alert notification\r\n                //props.updateDCandidate(props.currentId, values, () => {window.alert('updated')})\r\n                //using toast notification\r\n                props.updateStore(props.currentStoreId, store, onSuccess)\r\n                \r\n                \r\n               \r\n            }\r\n\r\n            if(props.openPopup == true){\r\n                props.setOpenPopup(false)\r\n            }\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n\r\n        if (props.currentStoreId != 0)\r\n            setValues({\r\n                ...props.storesList.find(x => x.storeId == props.currentStoreId)\r\n            })\r\n        setErrors({})\r\n        props.fetchAllStores();\r\n       // props.fetchAllUserLevel();\r\n\r\n\r\n\r\n    }, [props.currentStoreId])\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n\r\n        <section className=\"content\">\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                    {/* left column */}\r\n                    <div className=\"col-md-12\">\r\n                        {/* jquery validation */}\r\n                        <div className=\"card card-primary\">\r\n                            <div className=\"card-header\">\r\n                                <h4 className=\"card-title\">Add Store <small> </small></h4>\r\n                            </div>\r\n                            {/* /.card-header */}\r\n                            {/* form start */}\r\n                            <form id=\"quickForm\" autoComplete=\"off\" noValidate className={classes.root} onSubmit={handleSubmit}>\r\n\r\n                                <TextField\r\n                                    className=\"form-ctr\"\r\n                                    id=\"standard-basic\"\r\n                                    type=\"text\"\r\n                                    name=\"name\"\r\n                                    label=\"Store Name\"\r\n                                    value={values.name}\r\n                                    onChange={handleInputChange}\r\n                                    {...(errors.name && { error: true, helperText: errors.name })}\r\n                                />\r\n\r\n                                <TextField className=\"form-ctr\" name=\"address\" label=\"Address\" value={values.address}\r\n                                    onChange={handleInputChange}\r\n\r\n\r\n                                    {... (errors.address && { error: true, helperText: errors.address })}\r\n                                />\r\n\r\n                                <TextField className=\"form-ctr\" name=\"phone\" label=\"Store Phone No\" value={values.phone}\r\n                                    onChange={handleInputChange}\r\n\r\n                                    {... (errors.phone && { error: true, helperText: errors.phone })}\r\n                                />\r\n\r\n                                {/* <TextField\r\n                                    className=\"form-ctr\"\r\n                                    name=\"email\"\r\n                                    label=\"Email\" type=\"email\" value={values.email}\r\n                                    onChange={handleInputChange}\r\n\r\n                                    {...(errors.email && { error: true, helperText: errors.email })}\r\n                                /> */}\r\n\r\n                                <TextField className=\"form-ctr\" name=\"location\" label=\"location\" value={values.location}\r\n                                    onChange={handleInputChange}\r\n\r\n                                    {... (errors.location && { error: true, helperText: errors.location })}\r\n                                />\r\n\r\n                               \r\n                             \r\n\r\n                             <FormControl className={classes.formControl}\r\n                                    {...(errors.userLevelId && { error: true })}\r\n                                >\r\n                                    <InputLabel >Company</InputLabel>\r\n                                    <Select\r\n                                        className=\"form-ctr\"\r\n                                        name=\"companyDataId\"\r\n                                        label=\"Company\"\r\n                                        value={values.companyDataId}\r\n                                        onChange={handleInputChange}\r\n\r\n                                    >\r\n                                        <MenuItem value=\"\">Select Company</MenuItem>\r\n                                        <MenuItem value=\"1\">{1}</MenuItem>\r\n                                        {/* {\r\n                                            props.userLevelList.map((record, index) => {\r\n                                                return (\r\n                                                    <MenuItem value={record.id}>{record.level}</MenuItem>\r\n\r\n                                                )\r\n                                            })\r\n                                        } */}\r\n                                    </Select>\r\n                                    {errors.companyDataId && <FormHelperText>{errors.companyDataId}</FormHelperText>}\r\n                                </FormControl>  \r\n\r\n                                \r\n\r\n\r\n                                {/* /.card-body */}\r\n                                <div className=\"card-footer\">\r\n                                    <div>\r\n                                        <button type=\"submit\" className=\"btn btn-primary\" >Save</button>\r\n                                        <button variant=\"contained\"\r\n                                            className=\"btn btn-secondary\"\r\n                                            onClick={resetForm} style={{marginLeft:3}}>Reset</button>\r\n                                    </div>\r\n                                   \r\n                                </div>\r\n\r\n                            </form>\r\n\r\n                        </div>\r\n                        {/* /.card */}\r\n                    </div>\r\n                    {/*/.col (left) */}\r\n                    {/* right column */}\r\n                    <div className=\"col-md-6\">\r\n                    </div>\r\n                    {/*/.col (right) */}\r\n                </div>\r\n                {/* /.row */}\r\n            </div>{/* /.container-fluid */}\r\n        </section>\r\n\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    //addStaffList: state.addStaff.list,\r\n    storesList: state.stores.list,\r\n   // userLevelList: state.userLevel.list,\r\n})\r\n\r\n\r\n\r\nconst mapActionToProps = {\r\n    createStore: storeActions.createStore,\r\n    updateStore: storeActions.updateStore,\r\n    fetchAllStores: storeActions.fetchAllStore,\r\n    //fetchAllUserLevel: userLevelActions.fetchAllUserLevel,\r\n    //fetchAllAddStaff: actions.fetchAll,\r\n\r\n}\r\nexport default connect(mapStateToProps, mapActionToProps)(withStyles(styles)(AddNewStoreForm));","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M20 4H4v2h16V4zm1 10v-2l-1-5H4l-1 5v2h1v6h10v-6h4v6h2v-6h1zm-9 4H6v-4h6v4z\"\n}), 'StoreSharp');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 00-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'Edit');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6 21h12V7H6v14zm2.46-9.12l1.41-1.41L12 12.59l2.12-2.12 1.41 1.41L13.41 14l2.12 2.12-1.41 1.41L12 15.41l-2.12 2.12-1.41-1.41L10.59 14l-2.13-2.12zM15.5 4l-1-1h-5l-1 1H5v2h14V4h-3.5z\"\n}), 'DeleteForeverSharp');\n\nexports.default = _default;","import { Grid, Paper, Table, TableContainer, TableHead, TableRow, TableCell, TableBody, withStyles, ButtonGroup, Button } from \"@material-ui/core\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n//import * as actions from \"../../../../../actions/Staff/addStaff\";\r\nimport * as storeActions from \"../../../../../actions/Store/stores\";\r\nimport AddNewStoreForm from \"./AddNewStoreForm\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\n//import PeopleOutlineTwoToneIcon from '@material-ui/icons/PeopleOutlineTwoTone';\r\nimport PageHeader from \"../../../PageHeader\";\r\nimport StorefrontTwoToneIcon from '@material-ui/icons/StoreSharp';\r\nimport ConfirmDialog from \"../../../controls/ConfirmDialog\";\r\n//import Controls from \"./Controls\";\r\nimport NotListedLocation  from '@material-ui/icons/NotListedLocation';\r\n\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        \"& .MuiTableCell-head\": {\r\n            fontSize: \"0.95rem\"\r\n        }\r\n    },\r\n    paper: {\r\n        margin: theme.spacing(-8.9),\r\n        padding: theme.spacing(6)\r\n    },\r\n\r\n    grid:{\r\n        paddingLeft: theme.spacing(2)\r\n    }\r\n})\r\n\r\n\r\n\r\nconst AddNewStore = ({ classes, ...props }) => {\r\n    //Toast message\r\n    const { addToast } = useToasts()\r\n    const [currentStoreId, setCurrentStoreId] = useState(0)\r\n    const [confirmDialog, setConfirmDialog] = useState(false) \r\n    useEffect(() => {\r\n        \r\n       props.fetchAllStores();\r\n    }, [])\r\n\r\n    const showToast= () =>{\r\n        addToast(\"Record was deleted succesffuly\", { appearance: 'error' })\r\n        addToast(\"Record was deleted succesffuly\", { appearance: 'error' })\r\n        addToast(\"Record was deleted succesffuly\", { appearance: 'error' })\r\n\r\n    }\r\n    const onDelete = id => {\r\n            props.DeleteStore(id, showToast )\r\n            props.fetchAllStores();\r\n            setConfirmDialog(false)\r\n            \r\n\r\n    }\r\n\r\n    const openInDialog = () => {\r\n        setConfirmDialog(true)\r\n        \r\n        \r\n        \r\n    }\r\n\r\n    return (\r\n         <>\r\n         <PageHeader\r\n                title=\"Stores\"\r\n                //subTitle=\"Form design with validation\"\r\n                icon={<StorefrontTwoToneIcon fontSize=\"large\" />}\r\n            />,\r\n         <Paper className={classes.paper} elevation={3}>\r\n            \r\n                    \r\n                    <AddNewStoreForm {...({ currentStoreId, setCurrentStoreId })} />\r\n                \r\n                    <div className={classes.grid}>\r\n                    <table class=\"table .table-responsive{-sm|-md|-lg|-xl|-xxl} table-bordered table-hover  align-middle table-striped \" >\r\n                        <thead class=\"thead-dark\">\r\n                            <tr>\r\n                                <th scope=\"col\">Id</th>\r\n                                <th scope=\"col\">Name</th>\r\n                                <th scope=\"col\">Address</th>\r\n                                <th scope=\"col\">Store Phone</th>\r\n                                <th scope=\"col\">Location</th>\r\n                                \r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {/* <tr>\r\n                                <th scope=\"row\">1</th>\r\n                                <td>Mark</td>\r\n                                <td>Otto</td>\r\n                                <td>@mdo</td>\r\n                            </tr> */}\r\n                            {\r\n                                     props.storesList.map((record, index) => {\r\n                                         return ( <tr key = {index} hover>\r\n                                             <td>{record.storeId}</td>\r\n                                             <td>{record.name}</td>\r\n                                             <td>{record.address}</td>\r\n                                             <td>{record.phone}</td>\r\n                                             <td>{record.location}</td>\r\n                                            \r\n                                             \r\n                                             <td>\r\n                                                 <ButtonGroup variant= \"text\">\r\n                                                    <Button><EditIcon color=\"primary\"\r\n                                                    onClick={()=>{setCurrentStoreId(record.storeId)}}/></Button>\r\n                                                    <Button><DeleteIcon color=\"Secondary\"\r\n                                                      onClick={() => {\r\n                                                        openInDialog()\r\n                                                        setConfirmDialog({\r\n                                                            onConfirm: () =>{onDelete(record.storeId)}\r\n                                                        })\r\n                                                        \r\n                                                        //onDelete(record.id)\r\n                                                    }\r\n                                                    }\r\n                                                \r\n                                                    /></Button> \r\n                                                 </ButtonGroup>\r\n                                             </td>\r\n                                         </tr>\r\n\r\n                                         )\r\n                                     })\r\n                                 }\r\n                           \r\n                        </tbody>\r\n                    </table>\r\n                    </div>\r\n                {/* </Grid>\r\n            </Grid> */}\r\n        </Paper>\r\n\r\n        <ConfirmDialog \r\n            title=\"Are you sure you want to delete this record?\"\r\n            subTitle=\"This operation can't be reversed\"\r\n            confirmDialog={confirmDialog}\r\n            setConfirmDialog = {setConfirmDialog}\r\n            />\r\n         </>\r\n    );\r\n}\r\n\r\n//export default staff; \r\n\r\nconst mapStateToProps = state => ({\r\n    storesList: state.stores.list,\r\n    \r\n})\r\n\r\nconst mapActionToProps = {\r\n    fetchAllStores: storeActions.fetchAllStore,\r\n    DeleteStore: storeActions.DeleteStore,\r\n    \r\n}\r\n\r\nexport default connect(mapStateToProps, mapActionToProps)(withStyles(styles)(AddNewStore));\r\n\r\n"],"sourceRoot":""}