{"version":3,"sources":["../node_modules/@material-ui/core/esm/ButtonGroup/ButtonGroup.js","views/Components/Forms/Stores/AddStores/AddNewStoreForm.js","../node_modules/@material-ui/icons/StoreSharp.js","../node_modules/@material-ui/icons/Delete.js","../node_modules/@material-ui/icons/Edit.js","views/Components/Forms/Stores/AddStores/AddNewStore.js"],"names":["Button","styles","ButtonGroup","React","props","ref","children","classes","className","_props$color","color","_props$component","component","Component","_props$disabled","disabled","_props$disableElevati","disableElevation","_props$disableFocusRi","disableFocusRipple","_props$disableRipple","disableRipple","_props$fullWidth","fullWidth","_props$orientation","orientation","_props$size","size","_props$variant","variant","other","_objectWithoutProperties","buttonClassName","clsx","grouped","concat","capitalize","_extends","role","root","contained","vertical","map","child","withStyles","theme","display","borderRadius","shape","boxShadow","shadows","width","flexDirection","minWidth","groupedHorizontal","borderTopLeftRadius","borderBottomLeftRadius","borderTopRightRadius","borderBottomRightRadius","groupedVertical","groupedText","groupedTextHorizontal","borderRight","palette","type","groupedTextVertical","borderBottom","groupedTextPrimary","borderColor","alpha","primary","main","groupedTextSecondary","secondary","groupedOutlined","groupedOutlinedHorizontal","marginLeft","borderRightColor","groupedOutlinedVertical","marginTop","borderBottomColor","groupedOutlinedPrimary","groupedOutlinedSecondary","groupedContained","groupedContainedHorizontal","grey","action","groupedContainedVertical","groupedContainedPrimary","dark","groupedContainedSecondary","name","initialFieldValues","address","phone","location","companyDataId","mapActionToProps","createStore","storeActions","updateStore","fetchAllStores","connect","state","storesList","stores","list","margin","spacing","formControl","smMargin","_ref","_excluded","addToast","useToasts","validate","fieldValues","arguments","length","undefined","values","temp","_objectSpread","errors","setErrors","Object","every","x","_useForm","useForm","setCurrentStoreId","_useForm2","_slicedToArray","setValues","handleInputChange","resetForm","useEffect","currentStoreId","find","storeId","_jsx","_jsxs","id","autoComplete","noValidate","onSubmit","e","preventDefault","onSuccess","appearance","store","parseInt","openPopup","setOpenPopup","TextField","label","value","onChange","error","helperText","FormControl","userLevelId","InputLabel","Select","MenuItem","FormHelperText","onClick","style","_interopRequireDefault","require","_interopRequireWildcard","defineProperty","exports","default","_default","createElement","d","DeleteStore","fontSize","paper","padding","grid","paddingLeft","_useState","useState","_useState2","_useState3","_useState4","confirmDialog","setConfirmDialog","showToast","_Fragment","PageHeader","title","icon","StorefrontTwoToneIcon","Paper","elevation","AddNewStoreForm","class","scope","record","index","hover","EditIcon","DeleteIcon","onConfirm","ConfirmDialog","subTitle"],"mappings":"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","file":"static/js/19.5bfa8049.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport capitalize from '../utils/capitalize';\nimport { alpha } from '../styles/colorManipulator';\nimport withStyles from '../styles/withStyles';\nimport Button from '../Button'; // Force a side effect so we don't have any override priority issue.\n// eslint-disable-next-line no-unused-expressions\n\nButton.styles;\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-flex',\n      borderRadius: theme.shape.borderRadius\n    },\n\n    /* Styles applied to the root element if `variant=\"contained\"`. */\n    contained: {\n      boxShadow: theme.shadows[2]\n    },\n\n    /* Styles applied to the root element if `disableElevation={true}`. */\n    disableElevation: {\n      boxShadow: 'none'\n    },\n\n    /* Pseudo-class applied to child elements if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `fullWidth={true}`. */\n    fullWidth: {\n      width: '100%'\n    },\n\n    /* Styles applied to the root element if `orientation=\"vertical\"`. */\n    vertical: {\n      flexDirection: 'column'\n    },\n\n    /* Styles applied to the children. */\n    grouped: {\n      minWidth: 40\n    },\n\n    /* Styles applied to the children if `orientation=\"horizontal\"`. */\n    groupedHorizontal: {\n      '&:not(:first-child)': {\n        borderTopLeftRadius: 0,\n        borderBottomLeftRadius: 0\n      },\n      '&:not(:last-child)': {\n        borderTopRightRadius: 0,\n        borderBottomRightRadius: 0\n      }\n    },\n\n    /* Styles applied to the children if `orientation=\"vertical\"`. */\n    groupedVertical: {\n      '&:not(:first-child)': {\n        borderTopRightRadius: 0,\n        borderTopLeftRadius: 0\n      },\n      '&:not(:last-child)': {\n        borderBottomRightRadius: 0,\n        borderBottomLeftRadius: 0\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"text\"`. */\n    groupedText: {},\n\n    /* Styles applied to the children if `variant=\"text\"` and `orientation=\"horizontal\"`. */\n    groupedTextHorizontal: {\n      '&:not(:last-child)': {\n        borderRight: \"1px solid \".concat(theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.23)' : 'rgba(255, 255, 255, 0.23)')\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"text\"` and `orientation=\"vertical\"`. */\n    groupedTextVertical: {\n      '&:not(:last-child)': {\n        borderBottom: \"1px solid \".concat(theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.23)' : 'rgba(255, 255, 255, 0.23)')\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"text\"` and `color=\"primary\"`. */\n    groupedTextPrimary: {\n      '&:not(:last-child)': {\n        borderColor: alpha(theme.palette.primary.main, 0.5)\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"text\"` and `color=\"secondary\"`. */\n    groupedTextSecondary: {\n      '&:not(:last-child)': {\n        borderColor: alpha(theme.palette.secondary.main, 0.5)\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"outlined\"`. */\n    groupedOutlined: {},\n\n    /* Styles applied to the children if `variant=\"outlined\"` and `orientation=\"horizontal\"`. */\n    groupedOutlinedHorizontal: {\n      '&:not(:first-child)': {\n        marginLeft: -1\n      },\n      '&:not(:last-child)': {\n        borderRightColor: 'transparent'\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"outlined\"` and `orientation=\"vertical\"`. */\n    groupedOutlinedVertical: {\n      '&:not(:first-child)': {\n        marginTop: -1\n      },\n      '&:not(:last-child)': {\n        borderBottomColor: 'transparent'\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"outlined\"` and `color=\"primary\"`. */\n    groupedOutlinedPrimary: {\n      '&:hover': {\n        borderColor: theme.palette.primary.main\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"outlined\"` and `color=\"secondary\"`. */\n    groupedOutlinedSecondary: {\n      '&:hover': {\n        borderColor: theme.palette.secondary.main\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"contained\"`. */\n    groupedContained: {\n      boxShadow: 'none'\n    },\n\n    /* Styles applied to the children if `variant=\"contained\"` and `orientation=\"horizontal\"`. */\n    groupedContainedHorizontal: {\n      '&:not(:last-child)': {\n        borderRight: \"1px solid \".concat(theme.palette.grey[400]),\n        '&$disabled': {\n          borderRight: \"1px solid \".concat(theme.palette.action.disabled)\n        }\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"contained\"` and `orientation=\"vertical\"`. */\n    groupedContainedVertical: {\n      '&:not(:last-child)': {\n        borderBottom: \"1px solid \".concat(theme.palette.grey[400]),\n        '&$disabled': {\n          borderBottom: \"1px solid \".concat(theme.palette.action.disabled)\n        }\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"contained\"` and `color=\"primary\"`. */\n    groupedContainedPrimary: {\n      '&:not(:last-child)': {\n        borderColor: theme.palette.primary.dark\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"contained\"` and `color=\"secondary\"`. */\n    groupedContainedSecondary: {\n      '&:not(:last-child)': {\n        borderColor: theme.palette.secondary.dark\n      }\n    }\n  };\n};\nvar ButtonGroup = /*#__PURE__*/React.forwardRef(function ButtonGroup(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'default' : _props$color,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$disableElevati = props.disableElevation,\n      disableElevation = _props$disableElevati === void 0 ? false : _props$disableElevati,\n      _props$disableFocusRi = props.disableFocusRipple,\n      disableFocusRipple = _props$disableFocusRi === void 0 ? false : _props$disableFocusRi,\n      _props$disableRipple = props.disableRipple,\n      disableRipple = _props$disableRipple === void 0 ? false : _props$disableRipple,\n      _props$fullWidth = props.fullWidth,\n      fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth,\n      _props$orientation = props.orientation,\n      orientation = _props$orientation === void 0 ? 'horizontal' : _props$orientation,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'outlined' : _props$variant,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"color\", \"component\", \"disabled\", \"disableElevation\", \"disableFocusRipple\", \"disableRipple\", \"fullWidth\", \"orientation\", \"size\", \"variant\"]);\n\n  var buttonClassName = clsx(classes.grouped, classes[\"grouped\".concat(capitalize(orientation))], classes[\"grouped\".concat(capitalize(variant))], classes[\"grouped\".concat(capitalize(variant)).concat(capitalize(orientation))], classes[\"grouped\".concat(capitalize(variant)).concat(color !== 'default' ? capitalize(color) : '')], disabled && classes.disabled);\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    role: \"group\",\n    className: clsx(classes.root, className, fullWidth && classes.fullWidth, disableElevation && classes.disableElevation, variant === 'contained' && classes.contained, orientation === 'vertical' && classes.vertical),\n    ref: ref\n  }, other), React.Children.map(children, function (child) {\n    if (! /*#__PURE__*/React.isValidElement(child)) {\n      return null;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"Material-UI: The ButtonGroup component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    return /*#__PURE__*/React.cloneElement(child, {\n      className: clsx(buttonClassName, child.props.className),\n      color: child.props.color || color,\n      disabled: child.props.disabled || disabled,\n      disableElevation: child.props.disableElevation || disableElevation,\n      disableFocusRipple: disableFocusRipple,\n      disableRipple: disableRipple,\n      fullWidth: fullWidth,\n      size: child.props.size || size,\n      variant: child.props.variant || variant\n    });\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? ButtonGroup.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the button group.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'inherit', 'primary', 'secondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the buttons will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, no elevation is used.\n   */\n  disableElevation: PropTypes.bool,\n\n  /**\n   * If `true`, the button keyboard focus ripple will be disabled.\n   */\n  disableFocusRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the button ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the buttons will take up the full width of its container.\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * The group orientation (layout flow direction).\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n\n  /**\n   * The size of the button.\n   * `small` is equivalent to the dense button styling.\n   */\n  size: PropTypes.oneOf(['large', 'medium', 'small']),\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['contained', 'outlined', 'text'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiButtonGroup'\n})(ButtonGroup);","import React, { Fragment, useState, useEffect } from \"react\";\r\nimport { FormControl, Grid, TextField, withStyles, InputLabel, Select, MenuItem, Button, FormHelperText } from \"@material-ui/core\";\r\nimport { useForm } from \"../../useForm\";\r\nimport { connect } from \"react-redux\";\r\n//import * as actions from \"../../../../../actions/Staff/addStaff\";\r\nimport * as storeActions from \"../../../../../actions/Store/stores\";\r\nimport * as userLevelActions from \"../../../../../actions/UserLevel/userLevel\";\r\nimport { ToastConsumer, useToasts } from \"react-toast-notifications\";\r\nimport \"../../staffForm.css\";\r\nimport { RestoreSharp } from \"@material-ui/icons\";\r\n\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            margin: theme.spacing(1),\r\n            minWidth: 230,\r\n        }\r\n    },\r\n\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 230,\r\n    },\r\n    smMargin: {\r\n        margin: theme.spacing(1),\r\n        \r\n    },\r\n})\r\n\r\nconst initialFieldValues = {\r\n\r\n    name: '',\r\n    address: '',\r\n    phone: '',\r\n    location: '',\r\n    // email: '',\r\n    // address: '',\r\n    companyDataId: '',\r\n    \r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst AddNewStoreForm = ({ classes, ...props }) => {\r\n    \r\n    //toast message\r\n    const { addToast } = useToasts()\r\n    \r\n    //realtime validation for the whole form controls\r\n    const validate = (fieldValues = values) => {\r\n        let temp = { ...errors }\r\n        if ('name' in fieldValues) {\r\n            temp.name = fieldValues.name ? \"\" : \"This field is required\"\r\n            // addToast(\"User data saved succeffuly\", {appearance:'success'})\r\n            // console.log(\"Tast has beeen displayed\")\r\n        }\r\n\r\n\r\n        if ('address' in fieldValues) {\r\n            temp.address = fieldValues.address ? \"\" : \"This field is required\"\r\n        }\r\n\r\n\r\n        if ('location' in fieldValues) {\r\n            temp.location = fieldValues.location ? \"\" : \"This field is required\"\r\n        }\r\n\r\n\r\n        // if ('email' in fieldValues) {\r\n        //     if (temp.email != \" \") {\r\n        //         temp.email = (/^&|.+@.+..+/).test(fieldValues.email) ? \"\" : \"Email is not valid\"\r\n        //     }\r\n        // }\r\n        if ('phone' in fieldValues) {\r\n            temp.phone = fieldValues.phone ? \"\" : \"This field is required\"\r\n        }\r\n        // if ('companyDataId' in fieldValues) {\r\n        //     temp.companyDataId = fieldValues.companyDataId ? \"\" : \"This field is required\"\r\n        // }\r\n        // if ('userLevelId' in fieldValues) {\r\n        //     temp.userLevelId = fieldValues.userLevelId ? \"\" : \"This field is required\"\r\n        // }\r\n        // if ('storeId' in fieldValues) {\r\n        //     temp.storeId = fieldValues.storeId ? \"\" : \"This field is required\"\r\n        // }\r\n        // if ('uName' in fieldValues) {\r\n        //     temp.uName = fieldValues.uName ? \"\" : \"This field is required\"\r\n        // }\r\n        // if ('password' in fieldValues) {\r\n        //     temp.password = fieldValues.password ? \"\" : \"This field is required\"\r\n        // }\r\n        // if ('cPswd' in fieldValues) {\r\n        //     temp.cPswd = fieldValues.cPswd ? \"\" : \"This field is required\"\r\n\r\n        // }\r\n\r\n\r\n\r\n\r\n        setErrors({\r\n            ...temp\r\n        })\r\n        if (fieldValues == values) {\r\n            return Object.values(temp).every(x => x == \"\")\r\n        }\r\n\r\n\r\n    }\r\n\r\n    const [\r\n        values,\r\n        setValues,\r\n        errors,\r\n        setErrors,\r\n        handleInputChange,\r\n        resetForm\r\n    ] = useForm(initialFieldValues, validate, props.setCurrentStoreId);\r\n\r\n    const showToast = () => {\r\n        addToast(\"Store data saved succeffuly\", { appearance: 'success' })\r\n        addToast(\"Store data saved succeffuly\", { appearance: 'success' })\r\n        addToast(\"Store data saved succeffuly\", { appearance: 'success' })\r\n        props.fetchAllStores();\r\n    }\r\n\r\n\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n\r\n\r\n        if (validate()) {\r\n\r\n            const onSuccess = () => {\r\n                showToast();\r\n                resetForm();\r\n                \r\n\r\n            }\r\n\r\n\r\n            const store={\r\n                name: values.name,\r\n                address: values.address,\r\n                phone: values.phone,\r\n                location:values.location,\r\n                companyDataId: parseInt(values.companyDataId)\r\n            }\r\n            if (props.currentStoreId == 0) {\r\n\r\n                //using toast notification\r\n               \r\n\r\n                props.createStore(store, onSuccess)\r\n                //addorEdit(values, onSuccess)\r\n\r\n             \r\n                \r\n            }\r\n            else {\r\n                //using windows alert notification\r\n                //props.updateDCandidate(props.currentId, values, () => {window.alert('updated')})\r\n                //using toast notification\r\n                props.updateStore(props.currentStoreId, store, onSuccess)\r\n                \r\n                \r\n               \r\n            }\r\n\r\n            if(props.openPopup == true){\r\n                props.setOpenPopup(false)\r\n            }\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n\r\n        if (props.currentStoreId != 0)\r\n            setValues({\r\n                ...props.storesList.find(x => x.storeId == props.currentStoreId)\r\n            })\r\n        setErrors({})\r\n        props.fetchAllStores();\r\n       // props.fetchAllUserLevel();\r\n\r\n\r\n\r\n    }, [props.currentStoreId])\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n\r\n        <section className=\"content\">\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                    {/* left column */}\r\n                    <div className=\"col-md-12\">\r\n                        {/* jquery validation */}\r\n                        <div className=\"card card-primary\">\r\n                            <div className=\"card-header\">\r\n                                <h4 className=\"card-title\">Add Store <small> </small></h4>\r\n                            </div>\r\n                            {/* /.card-header */}\r\n                            {/* form start */}\r\n                            <form id=\"quickForm\" autoComplete=\"off\" noValidate className={classes.root} onSubmit={handleSubmit}>\r\n\r\n                                <TextField\r\n                                    className=\"form-ctr\"\r\n                                    id=\"standard-basic\"\r\n                                    type=\"text\"\r\n                                    name=\"name\"\r\n                                    label=\"Store Name\"\r\n                                    value={values.name}\r\n                                    onChange={handleInputChange}\r\n                                    {...(errors.name && { error: true, helperText: errors.name })}\r\n                                />\r\n\r\n                                <TextField className=\"form-ctr\" name=\"address\" label=\"Address\" value={values.address}\r\n                                    onChange={handleInputChange}\r\n\r\n\r\n                                    {... (errors.address && { error: true, helperText: errors.address })}\r\n                                />\r\n\r\n                                <TextField className=\"form-ctr\" name=\"phone\" label=\"Store Phone No\" value={values.phone}\r\n                                    onChange={handleInputChange}\r\n\r\n                                    {... (errors.phone && { error: true, helperText: errors.phone })}\r\n                                />\r\n\r\n                                {/* <TextField\r\n                                    className=\"form-ctr\"\r\n                                    name=\"email\"\r\n                                    label=\"Email\" type=\"email\" value={values.email}\r\n                                    onChange={handleInputChange}\r\n\r\n                                    {...(errors.email && { error: true, helperText: errors.email })}\r\n                                /> */}\r\n\r\n                                <TextField className=\"form-ctr\" name=\"location\" label=\"location\" value={values.location}\r\n                                    onChange={handleInputChange}\r\n\r\n                                    {... (errors.location && { error: true, helperText: errors.location })}\r\n                                />\r\n\r\n                               \r\n                             \r\n\r\n                             <FormControl className={classes.formControl}\r\n                                    {...(errors.userLevelId && { error: true })}\r\n                                >\r\n                                    <InputLabel >Company</InputLabel>\r\n                                    <Select\r\n                                        className=\"form-ctr\"\r\n                                        name=\"companyDataId\"\r\n                                        label=\"Company\"\r\n                                        value={values.companyDataId}\r\n                                        onChange={handleInputChange}\r\n\r\n                                    >\r\n                                        <MenuItem value=\"\">Select Company</MenuItem>\r\n                                        <MenuItem value=\"1\">{1}</MenuItem>\r\n                                        {/* {\r\n                                            props.userLevelList.map((record, index) => {\r\n                                                return (\r\n                                                    <MenuItem value={record.id}>{record.level}</MenuItem>\r\n\r\n                                                )\r\n                                            })\r\n                                        } */}\r\n                                    </Select>\r\n                                    {errors.companyDataId && <FormHelperText>{errors.companyDataId}</FormHelperText>}\r\n                                </FormControl>  \r\n\r\n                                \r\n\r\n\r\n                                {/* /.card-body */}\r\n                                <div className=\"card-footer\">\r\n                                    <div>\r\n                                        <button type=\"submit\" className=\"btn btn-primary\" >Save</button>\r\n                                        <button variant=\"contained\"\r\n                                            className=\"btn btn-secondary\"\r\n                                            onClick={resetForm} style={{marginLeft:3}}>Reset</button>\r\n                                    </div>\r\n                                   \r\n                                </div>\r\n\r\n                            </form>\r\n\r\n                        </div>\r\n                        {/* /.card */}\r\n                    </div>\r\n                    {/*/.col (left) */}\r\n                    {/* right column */}\r\n                    <div className=\"col-md-6\">\r\n                    </div>\r\n                    {/*/.col (right) */}\r\n                </div>\r\n                {/* /.row */}\r\n            </div>{/* /.container-fluid */}\r\n        </section>\r\n\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    //addStaffList: state.addStaff.list,\r\n    storesList: state.stores.list,\r\n   // userLevelList: state.userLevel.list,\r\n})\r\n\r\n\r\n\r\nconst mapActionToProps = {\r\n    createStore: storeActions.createStore,\r\n    updateStore: storeActions.updateStore,\r\n    fetchAllStores: storeActions.fetchAllStore,\r\n    //fetchAllUserLevel: userLevelActions.fetchAllUserLevel,\r\n    //fetchAllAddStaff: actions.fetchAll,\r\n\r\n}\r\nexport default connect(mapStateToProps, mapActionToProps)(withStyles(styles)(AddNewStoreForm));","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M20 4H4v2h16V4zm1 10v-2l-1-5H4l-1 5v2h1v6h10v-6h4v6h2v-6h1zm-9 4H6v-4h6v4z\"\n}), 'StoreSharp');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 00-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'Edit');\n\nexports.default = _default;","import { Grid, Paper, Table, TableContainer, TableHead, TableRow, TableCell, TableBody, withStyles, ButtonGroup, Button } from \"@material-ui/core\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n//import * as actions from \"../../../../../actions/Staff/addStaff\";\r\nimport * as storeActions from \"../../../../../actions/Store/stores\";\r\nimport AddNewStoreForm from \"./AddNewStoreForm\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\n//import PeopleOutlineTwoToneIcon from '@material-ui/icons/PeopleOutlineTwoTone';\r\nimport PageHeader from \"../../../PageHeader\";\r\nimport StorefrontTwoToneIcon from '@material-ui/icons/StoreSharp';\r\nimport ConfirmDialog from \"../../../controls/ConfirmDialog\";\r\n//import Controls from \"./Controls\";\r\nimport NotListedLocation  from '@material-ui/icons/NotListedLocation';\r\n\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        \"& .MuiTableCell-head\": {\r\n            fontSize: \"0.95rem\"\r\n        }\r\n    },\r\n    paper: {\r\n        margin: theme.spacing(-8.9),\r\n        padding: theme.spacing(6)\r\n    },\r\n\r\n    grid:{\r\n        paddingLeft: theme.spacing(2)\r\n    }\r\n})\r\n\r\n\r\n\r\nconst AddNewStore = ({ classes, ...props }) => {\r\n    //Toast message\r\n    const { addToast } = useToasts()\r\n    const [currentStoreId, setCurrentStoreId] = useState(0)\r\n    const [confirmDialog, setConfirmDialog] = useState(false) \r\n    useEffect(() => {\r\n        \r\n       props.fetchAllStores();\r\n    }, [])\r\n\r\n    const showToast= () =>{\r\n        addToast(\"Record was deleted succesffuly\", { appearance: 'error' })\r\n        addToast(\"Record was deleted succesffuly\", { appearance: 'error' })\r\n        addToast(\"Record was deleted succesffuly\", { appearance: 'error' })\r\n\r\n    }\r\n    const onDelete = id => {\r\n            props.DeleteStore(id, showToast )\r\n            props.fetchAllStores();\r\n            setConfirmDialog(false)\r\n            \r\n\r\n    }\r\n\r\n    const openInDialog = () => {\r\n        setConfirmDialog(true)\r\n        \r\n        \r\n        \r\n    }\r\n\r\n    return (\r\n         <>\r\n         <PageHeader\r\n                title=\"Stores\"\r\n                //subTitle=\"Form design with validation\"\r\n                icon={<StorefrontTwoToneIcon fontSize=\"large\" />}\r\n            />,\r\n         <Paper className={classes.paper} elevation={3}>\r\n            \r\n                    \r\n                    <AddNewStoreForm {...({ currentStoreId, setCurrentStoreId })} />\r\n                \r\n                    <div className={classes.grid}>\r\n                    <table class=\"table .table-responsive{-sm|-md|-lg|-xl|-xxl} table-bordered table-hover  align-middle table-striped \" >\r\n                        <thead class=\"thead-dark\">\r\n                            <tr>\r\n                                <th scope=\"col\">Id</th>\r\n                                <th scope=\"col\">Name</th>\r\n                                <th scope=\"col\">Address</th>\r\n                                <th scope=\"col\">Store Phone</th>\r\n                                <th scope=\"col\">Location</th>\r\n                                \r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {/* <tr>\r\n                                <th scope=\"row\">1</th>\r\n                                <td>Mark</td>\r\n                                <td>Otto</td>\r\n                                <td>@mdo</td>\r\n                            </tr> */}\r\n                            {\r\n                                     props.storesList.map((record, index) => {\r\n                                         return ( <tr key = {index} hover>\r\n                                             <td>{record.storeId}</td>\r\n                                             <td>{record.name}</td>\r\n                                             <td>{record.address}</td>\r\n                                             <td>{record.phone}</td>\r\n                                             <td>{record.location}</td>\r\n                                            \r\n                                             \r\n                                             <td>\r\n                                                 <ButtonGroup variant= \"text\">\r\n                                                    <Button><EditIcon color=\"primary\"\r\n                                                    onClick={()=>{setCurrentStoreId(record.storeId)}}/></Button>\r\n                                                    <Button><DeleteIcon color=\"Secondary\"\r\n                                                      onClick={() => {\r\n                                                        openInDialog()\r\n                                                        setConfirmDialog({\r\n                                                            onConfirm: () =>{onDelete(record.storeId)}\r\n                                                        })\r\n                                                        \r\n                                                        //onDelete(record.id)\r\n                                                    }\r\n                                                    }\r\n                                                \r\n                                                    /></Button> \r\n                                                 </ButtonGroup>\r\n                                             </td>\r\n                                         </tr>\r\n\r\n                                         )\r\n                                     })\r\n                                 }\r\n                           \r\n                        </tbody>\r\n                    </table>\r\n                    </div>\r\n                {/* </Grid>\r\n            </Grid> */}\r\n        </Paper>\r\n\r\n        <ConfirmDialog \r\n            title=\"Are you sure you want to delete this record?\"\r\n            subTitle=\"This operation can't be reversed\"\r\n            confirmDialog={confirmDialog}\r\n            setConfirmDialog = {setConfirmDialog}\r\n            />\r\n         </>\r\n    );\r\n}\r\n\r\n//export default staff; \r\n\r\nconst mapStateToProps = state => ({\r\n    storesList: state.stores.list,\r\n    \r\n})\r\n\r\nconst mapActionToProps = {\r\n    fetchAllStores: storeActions.fetchAllStore,\r\n    DeleteStore: storeActions.DeleteStore,\r\n    \r\n}\r\n\r\nexport default connect(mapStateToProps, mapActionToProps)(withStyles(styles)(AddNewStore));\r\n\r\n"],"sourceRoot":""}