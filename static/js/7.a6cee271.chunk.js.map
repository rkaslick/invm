{"version":3,"sources":["views/Components/Forms/Staff/ViewAll/ViewAllStaff.js","../node_modules/@material-ui/core/esm/ButtonGroup/ButtonGroup.js","../node_modules/@material-ui/icons/PeopleOutlineTwoTone.js","../node_modules/@material-ui/icons/PersonAddSharp.js","views/Components/Forms/Staff/AddStaff/AddNewStaffForm.js","../node_modules/@material-ui/icons/Delete.js","../node_modules/@material-ui/icons/Edit.js","../node_modules/@material-ui/icons/Add.js","../node_modules/@material-ui/icons/DeleteForeverSharp.js","views/Components/Forms/Staff/AddStaff/AddNewStaff.js"],"names":["headCells","id","label","disableSorting","mapActionToProps","fetchAllAdmin","actions","deleteStaff","connect","state","addStaffList","addStaff","list","withStyles","theme","paper","margin","spacing","padding","searchInput","width","newButton","position","right","_ref","classes","props","_objectWithoutProperties","_excluded","_useState","useState","fn","items","_useState2","_slicedToArray","filterFn","setFilterFn","_useState3","_useState4","openPopup","setOpenPopup","_useState5","_useState6","currentId","setCurrentId","addToast","useToasts","_useState7","isOpen","message","type","notify","setNotify","_useState8","_useState9","confirmDialog","setConfirmDialog","_useState10","_useState11","showToast","appearance","useEffect","_useTable","useTable","TblContainer","TblHead","TblPagination","recordsAfterPagingAndSorting","_jsxs","_Fragment","children","_jsx","PageHeader","title","icon","PeopleOutlineTwoToneIcon","fontSize","Paper","className","elevation","Toolbar","Controls","Input","InputProps","startAdornment","InputAdornment","Search","onChange","e","target","value","filter","x","fName","toLowerCase","includes","sName","lName","mobile","address","uName","email","Button","text","variant","startIcon","AddIcon","onClick","class","TableBody","map","record","index","TableRow","hover","TableCell","accessLevel","ActionButton","color","openInPopup","EditOutlinedIcon","onConfirm","DeleteIcon","Popup","AddNewStaffForm","Notification","ConfirmDialog","subTitle","styles","ButtonGroup","React","ref","_props$color","_props$component","component","Component","_props$disabled","disabled","_props$disableElevati","disableElevation","_props$disableFocusRi","disableFocusRipple","_props$disableRipple","disableRipple","_props$fullWidth","fullWidth","_props$orientation","orientation","_props$size","size","_props$variant","other","buttonClassName","clsx","grouped","concat","capitalize","_extends","role","root","contained","vertical","child","display","borderRadius","shape","boxShadow","shadows","flexDirection","minWidth","groupedHorizontal","borderTopLeftRadius","borderBottomLeftRadius","borderTopRightRadius","borderBottomRightRadius","groupedVertical","groupedText","groupedTextHorizontal","borderRight","palette","groupedTextVertical","borderBottom","groupedTextPrimary","borderColor","alpha","primary","main","groupedTextSecondary","secondary","groupedOutlined","groupedOutlinedHorizontal","marginLeft","borderRightColor","groupedOutlinedVertical","marginTop","borderBottomColor","groupedOutlinedPrimary","groupedOutlinedSecondary","groupedContained","groupedContainedHorizontal","grey","action","groupedContainedVertical","groupedContainedPrimary","dark","groupedContainedSecondary","name","_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","default","_default","createElement","Fragment","cx","cy","r","opacity","d","initialFieldValues","password","userLevelId","cPswd","createStaff","updateStaff","fetchAllUserLevel","userLevelActions","userLevelList","userLevel","formControl","smMargin","validate","fieldValues","arguments","length","undefined","values","temp","_objectSpread","errors","test","storeId","setErrors","every","_useForm","useForm","_useForm2","setValues","handleInputChange","resetForm","find","autoComplete","noValidate","onSubmit","preventDefault","onSuccess","TextField","InputLabelProps","AccountCircle","error","helperText","Mobile","FormControl","InputLabel","Select","MenuItem","level","FormHelperText","style","grid","paddingLeft","scope","EditIcon"],"mappings":"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","file":"static/js/7.a6cee271.chunk.js","sourcesContent":["import { Paper, TableBody, TableCell, TableRow, TextField, Toolbar, withStyles, InputAdornment } from \"@material-ui/core\";\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\nimport * as actions from \"../../../../../actions/Staff/addStaff\";\r\nimport { connect } from \"react-redux\";\r\nimport useTable from \"../../useTable\";\r\nimport Controls from \"../../../controls/Controls\";\r\nimport { EditOutlined, Search } from \"@material-ui/icons\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport PageHeader from \"../../../PageHeader\";\r\nimport PeopleOutlineTwoToneIcon from '@material-ui/icons/PeopleOutlineTwoTone';\r\nimport Popup from \"../../../Popup\";\r\nimport AddNewStaffForm from \"../AddStaff/AddNewStaffForm\";\r\nimport AddNewStaff from \"../AddStaff/AddNewStaff\";\r\nimport EditOutlinedIcon from \"@material-ui/icons/EditOutlined\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport DeleteIcon from \"@material-ui/icons/DeleteForeverSharp\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport Notification from \"../../../controls/Notification\";\r\nimport ConfirmDialog from \"../../../controls/ConfirmDialog\";\r\n\r\n\r\n\r\nconst styles = theme => ({\r\n\r\n    paper: {\r\n        margin: theme.spacing(-8.9),\r\n        padding: theme.spacing(6),\r\n\r\n    },\r\n\r\n    searchInput: {\r\n        width: '75%'\r\n    },\r\n\r\n    newButton: {\r\n        position: 'absolute',\r\n        right: '10px '\r\n\r\n    },\r\n   \r\n})\r\n\r\nconst headCells = [\r\n    { id: 'fName' + 'sName' + 'lName', label: 'Staff Name' },\r\n    { id: 'mobile', label: 'Mobile' },\r\n    { id: 'email', label: 'Email' },\r\n    { id: 'address', label: 'Address' },\r\n    { id: 'store', label: 'Store Name' },\r\n    { id: 'accessLevel', label: 'User Type' },\r\n    { id: 'uName', label: 'User Name' },\r\n    { id: 'Actions', label: 'Actions', disableSorting: true },\r\n]\r\n\r\nconst ViewAllStaff = ({ classes, ...props }) => {\r\n\r\n    const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n    const [openPopup, setOpenPopup] = useState(false)\r\n    const [currentId, setCurrentId] = useState(0)\r\n    const { addToast } = useToasts()\r\n    const {notify, setNotify} = useState({isOpen:false, message:'', type:''})\r\n    const [confirmDialog, setConfirmDialog] = useState(false) \r\n    const [deleteRecord, setDeleteRecord] = useState(false)\r\n\r\n    const showToast= () =>{\r\n        addToast(\"Record was deleted succesffuly\", { appearance: 'error' })\r\n        addToast(\"Record was deleted succesffuly\", { appearance: 'error' })\r\n        addToast(\"Record was deleted succesffuly\", { appearance: 'error' })\r\n\r\n    }\r\n    const onDelete = id => {\r\n            props.deleteStaff(id, showToast )\r\n            setConfirmDialog(false)\r\n\r\n    }\r\n    \r\n\r\n    useEffect(() => {\r\n        props.fetchAllAdmin();\r\n\r\n       \r\n\r\n    }, []);\r\n\r\n\r\n\r\n\r\n    const {\r\n        TblContainer,\r\n        TblHead,\r\n        TblPagination,\r\n        recordsAfterPagingAndSorting,\r\n    } = useTable(props.addStaffList, headCells, filterFn)\r\n\r\n\r\n    const handleSearch = e => {\r\n        let target = e.target;\r\n        setFilterFn({\r\n            fn: items => {\r\n                if (target.value == \"\")\r\n                    return items;\r\n                else {\r\n                    return items.filter(x =>\r\n\r\n                        x.fName.toLowerCase().includes(target.value.toLowerCase()) +\r\n                        x.sName.toLowerCase().includes(target.value.toLowerCase()) +\r\n                        x.lName.toLowerCase().includes(target.value.toLowerCase()) +\r\n                        x.mobile.toLowerCase().includes(target.value.toLowerCase()) +\r\n                        x.address.toLowerCase().includes(target.value.toLowerCase()) +\r\n                        //x.store.toLowerCase().includes(target.value.toLowerCase()) + \r\n                        //x.accessLevel.toLowerCase().includes(target.value.toLowerCase()) + \r\n                        x.uName.toLowerCase().includes(target.value.toLowerCase()) +\r\n                        x.email.toLowerCase().includes(target.value.toLowerCase()))\r\n\r\n                }\r\n\r\n\r\n\r\n\r\n            }\r\n        })\r\n    }\r\n\r\n    const addorEdit = (employee, resetForm) => {\r\n\r\n        setOpenPopup(false)\r\n        setNotify({\r\n            isOpen:true,\r\n            message:'Submitted Successfully',\r\n            type: 'Success'\r\n        })\r\n    }\r\n\r\n    const openInPopup = record => {\r\n        setCurrentId(record)\r\n        setOpenPopup(true)\r\n    }\r\n\r\n    const openInDialog = () => {\r\n        setConfirmDialog(true)\r\n        \r\n        \r\n        \r\n    }\r\n\r\n    return (\r\n\r\n        <>\r\n            <PageHeader\r\n                title=\"Employee List\"\r\n                //subTitle=\"Form design with validation\"\r\n                icon={<PeopleOutlineTwoToneIcon fontSize=\"large\" />}\r\n            />,\r\n            <Paper className={classes.paper} elevation={3}>\r\n\r\n                <Toolbar>\r\n                    <Controls.Input\r\n                        className={classes.searchInput}\r\n                        label=\"Search Employees\"\r\n\r\n                        InputProps={{\r\n                            startAdornment: (<InputAdornment position=\"start\">\r\n                                <Search />\r\n                            </InputAdornment>)\r\n                        }}\r\n                        onChange={handleSearch}\r\n\r\n                    />\r\n                    <Controls.Button\r\n                        text=\"Add New\"\r\n                        variant=\"outlined\"\r\n                        startIcon={<AddIcon />}\r\n                        className={classes.newButton}\r\n                        onClick={() => {setOpenPopup(true); setCurrentId(0);}}\r\n                    />\r\n                </Toolbar>\r\n                <table class=\"table .table-responsive{-sm|-md|-lg|-xl|-xxl} table-hover \" >\r\n                    <thead >\r\n\r\n\r\n                    </thead>\r\n                    <tbody>\r\n                        <TblContainer >\r\n                            <TblHead />\r\n                            <TableBody>\r\n                                {\r\n                                    recordsAfterPagingAndSorting().map((record, index) => {\r\n                                        return (<TableRow key={index} hover>\r\n                                            <TableCell>{record.fName + \" \" + record.sName + \" \" + record.lName}</TableCell>\r\n                                            <TableCell>{record.mobile}</TableCell>\r\n                                            <TableCell>{record.email}</TableCell>\r\n                                            <TableCell>{record.address} </TableCell>\r\n                                            \r\n                                            <TableCell>{record.accessLevel} </TableCell>\r\n                                            <TableCell>{record.uName} </TableCell>\r\n                                            <TableCell>\r\n                                                <Controls.ActionButton\r\n                                                    color=\"primary\"\r\n                                                    // onClick={()=>{setCurrentId(record.id)}}\r\n                                                    onClick={()=> {openInPopup(record.id)}}\r\n                                                >\r\n                                                    <EditOutlinedIcon fontSize=\"small\" />\r\n                                                </Controls.ActionButton>\r\n                                                <Controls.ActionButton\r\n                                                    color=\"secondary\"\r\n                                                    onClick={() => {\r\n                                                        openInDialog()\r\n                                                        setConfirmDialog({\r\n                                                            onConfirm: () =>{onDelete(record.id)}\r\n                                                        })\r\n                                                        \r\n                                                        //onDelete(record.id)\r\n                                                    }\r\n                                                    }\r\n                                                >\r\n                                                    <DeleteIcon fontSize=\"small\" />\r\n                                                </Controls.ActionButton>\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n\r\n                                        )\r\n                                    })\r\n                                }\r\n\r\n                            </TableBody>\r\n                        </TblContainer>\r\n\r\n\r\n                    </tbody>\r\n                </table>\r\n\r\n                <TblPagination />\r\n            </Paper>\r\n            <Popup\r\n                title=\"Employee Form\"\r\n                openPopup={openPopup}\r\n                setOpenPopup={setOpenPopup}\r\n            >\r\n                <AddNewStaffForm\r\n                {...({ currentId, setCurrentId, setOpenPopup }) }\r\n                    //addorEdit={addorEdit}\r\n                />\r\n            </Popup>\r\n            <Notification\r\n            notify={notify}\r\n            setNotify ={setNotify} \r\n            />\r\n            <ConfirmDialog \r\n            title=\"Are you sure you want to delete this record?\"\r\n            subTitle=\"This operation can't be reversed\"\r\n            confirmDialog={confirmDialog}\r\n            setConfirmDialog = {setConfirmDialog}\r\n            />\r\n        </>\r\n        // {...({ currentId, setCurrentId }) }\r\n\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    addStaffList: state.addStaff.list,\r\n\r\n})\r\n\r\nconst mapActionToProps = {\r\n    fetchAllAdmin: actions.fetchAllAdmin,\r\n    deleteStaff: actions.Delete,\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, mapActionToProps)(withStyles(styles)(ViewAllStaff));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport capitalize from '../utils/capitalize';\nimport { alpha } from '../styles/colorManipulator';\nimport withStyles from '../styles/withStyles';\nimport Button from '../Button'; // Force a side effect so we don't have any override priority issue.\n// eslint-disable-next-line no-unused-expressions\n\nButton.styles;\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-flex',\n      borderRadius: theme.shape.borderRadius\n    },\n\n    /* Styles applied to the root element if `variant=\"contained\"`. */\n    contained: {\n      boxShadow: theme.shadows[2]\n    },\n\n    /* Styles applied to the root element if `disableElevation={true}`. */\n    disableElevation: {\n      boxShadow: 'none'\n    },\n\n    /* Pseudo-class applied to child elements if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `fullWidth={true}`. */\n    fullWidth: {\n      width: '100%'\n    },\n\n    /* Styles applied to the root element if `orientation=\"vertical\"`. */\n    vertical: {\n      flexDirection: 'column'\n    },\n\n    /* Styles applied to the children. */\n    grouped: {\n      minWidth: 40\n    },\n\n    /* Styles applied to the children if `orientation=\"horizontal\"`. */\n    groupedHorizontal: {\n      '&:not(:first-child)': {\n        borderTopLeftRadius: 0,\n        borderBottomLeftRadius: 0\n      },\n      '&:not(:last-child)': {\n        borderTopRightRadius: 0,\n        borderBottomRightRadius: 0\n      }\n    },\n\n    /* Styles applied to the children if `orientation=\"vertical\"`. */\n    groupedVertical: {\n      '&:not(:first-child)': {\n        borderTopRightRadius: 0,\n        borderTopLeftRadius: 0\n      },\n      '&:not(:last-child)': {\n        borderBottomRightRadius: 0,\n        borderBottomLeftRadius: 0\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"text\"`. */\n    groupedText: {},\n\n    /* Styles applied to the children if `variant=\"text\"` and `orientation=\"horizontal\"`. */\n    groupedTextHorizontal: {\n      '&:not(:last-child)': {\n        borderRight: \"1px solid \".concat(theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.23)' : 'rgba(255, 255, 255, 0.23)')\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"text\"` and `orientation=\"vertical\"`. */\n    groupedTextVertical: {\n      '&:not(:last-child)': {\n        borderBottom: \"1px solid \".concat(theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.23)' : 'rgba(255, 255, 255, 0.23)')\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"text\"` and `color=\"primary\"`. */\n    groupedTextPrimary: {\n      '&:not(:last-child)': {\n        borderColor: alpha(theme.palette.primary.main, 0.5)\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"text\"` and `color=\"secondary\"`. */\n    groupedTextSecondary: {\n      '&:not(:last-child)': {\n        borderColor: alpha(theme.palette.secondary.main, 0.5)\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"outlined\"`. */\n    groupedOutlined: {},\n\n    /* Styles applied to the children if `variant=\"outlined\"` and `orientation=\"horizontal\"`. */\n    groupedOutlinedHorizontal: {\n      '&:not(:first-child)': {\n        marginLeft: -1\n      },\n      '&:not(:last-child)': {\n        borderRightColor: 'transparent'\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"outlined\"` and `orientation=\"vertical\"`. */\n    groupedOutlinedVertical: {\n      '&:not(:first-child)': {\n        marginTop: -1\n      },\n      '&:not(:last-child)': {\n        borderBottomColor: 'transparent'\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"outlined\"` and `color=\"primary\"`. */\n    groupedOutlinedPrimary: {\n      '&:hover': {\n        borderColor: theme.palette.primary.main\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"outlined\"` and `color=\"secondary\"`. */\n    groupedOutlinedSecondary: {\n      '&:hover': {\n        borderColor: theme.palette.secondary.main\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"contained\"`. */\n    groupedContained: {\n      boxShadow: 'none'\n    },\n\n    /* Styles applied to the children if `variant=\"contained\"` and `orientation=\"horizontal\"`. */\n    groupedContainedHorizontal: {\n      '&:not(:last-child)': {\n        borderRight: \"1px solid \".concat(theme.palette.grey[400]),\n        '&$disabled': {\n          borderRight: \"1px solid \".concat(theme.palette.action.disabled)\n        }\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"contained\"` and `orientation=\"vertical\"`. */\n    groupedContainedVertical: {\n      '&:not(:last-child)': {\n        borderBottom: \"1px solid \".concat(theme.palette.grey[400]),\n        '&$disabled': {\n          borderBottom: \"1px solid \".concat(theme.palette.action.disabled)\n        }\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"contained\"` and `color=\"primary\"`. */\n    groupedContainedPrimary: {\n      '&:not(:last-child)': {\n        borderColor: theme.palette.primary.dark\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"contained\"` and `color=\"secondary\"`. */\n    groupedContainedSecondary: {\n      '&:not(:last-child)': {\n        borderColor: theme.palette.secondary.dark\n      }\n    }\n  };\n};\nvar ButtonGroup = /*#__PURE__*/React.forwardRef(function ButtonGroup(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'default' : _props$color,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$disableElevati = props.disableElevation,\n      disableElevation = _props$disableElevati === void 0 ? false : _props$disableElevati,\n      _props$disableFocusRi = props.disableFocusRipple,\n      disableFocusRipple = _props$disableFocusRi === void 0 ? false : _props$disableFocusRi,\n      _props$disableRipple = props.disableRipple,\n      disableRipple = _props$disableRipple === void 0 ? false : _props$disableRipple,\n      _props$fullWidth = props.fullWidth,\n      fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth,\n      _props$orientation = props.orientation,\n      orientation = _props$orientation === void 0 ? 'horizontal' : _props$orientation,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'outlined' : _props$variant,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"color\", \"component\", \"disabled\", \"disableElevation\", \"disableFocusRipple\", \"disableRipple\", \"fullWidth\", \"orientation\", \"size\", \"variant\"]);\n\n  var buttonClassName = clsx(classes.grouped, classes[\"grouped\".concat(capitalize(orientation))], classes[\"grouped\".concat(capitalize(variant))], classes[\"grouped\".concat(capitalize(variant)).concat(capitalize(orientation))], classes[\"grouped\".concat(capitalize(variant)).concat(color !== 'default' ? capitalize(color) : '')], disabled && classes.disabled);\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    role: \"group\",\n    className: clsx(classes.root, className, fullWidth && classes.fullWidth, disableElevation && classes.disableElevation, variant === 'contained' && classes.contained, orientation === 'vertical' && classes.vertical),\n    ref: ref\n  }, other), React.Children.map(children, function (child) {\n    if (! /*#__PURE__*/React.isValidElement(child)) {\n      return null;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"Material-UI: The ButtonGroup component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    return /*#__PURE__*/React.cloneElement(child, {\n      className: clsx(buttonClassName, child.props.className),\n      color: child.props.color || color,\n      disabled: child.props.disabled || disabled,\n      disableElevation: child.props.disableElevation || disableElevation,\n      disableFocusRipple: disableFocusRipple,\n      disableRipple: disableRipple,\n      fullWidth: fullWidth,\n      size: child.props.size || size,\n      variant: child.props.variant || variant\n    });\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? ButtonGroup.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the button group.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'inherit', 'primary', 'secondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the buttons will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, no elevation is used.\n   */\n  disableElevation: PropTypes.bool,\n\n  /**\n   * If `true`, the button keyboard focus ripple will be disabled.\n   */\n  disableFocusRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the button ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the buttons will take up the full width of its container.\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * The group orientation (layout flow direction).\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n\n  /**\n   * The size of the button.\n   * `small` is equivalent to the dense button styling.\n   */\n  size: PropTypes.oneOf(['large', 'medium', 'small']),\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['contained', 'outlined', 'text'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiButtonGroup'\n})(ButtonGroup);","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"circle\", {\n  cx: \"9\",\n  cy: \"8.5\",\n  r: \"1.5\",\n  opacity: \".3\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M4.34 17h9.32c-.84-.58-2.87-1.25-4.66-1.25s-3.82.67-4.66 1.25z\",\n  opacity: \".3\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M9 12c1.93 0 3.5-1.57 3.5-3.5S10.93 5 9 5 5.5 6.57 5.5 8.5 7.07 12 9 12zm0-5c.83 0 1.5.67 1.5 1.5S9.83 10 9 10s-1.5-.67-1.5-1.5S8.17 7 9 7zm0 6.75c-2.34 0-7 1.17-7 3.5V19h14v-1.75c0-2.33-4.66-3.5-7-3.5zM4.34 17c.84-.58 2.87-1.25 4.66-1.25s3.82.67 4.66 1.25H4.34zm11.7-3.19c1.16.84 1.96 1.96 1.96 3.44V19h4v-1.75c0-2.02-3.5-3.17-5.96-3.44zM15 12c1.93 0 3.5-1.57 3.5-3.5S16.93 5 15 5c-.54 0-1.04.13-1.5.35.63.89 1 1.98 1 3.15s-.37 2.26-1 3.15c.46.22.96.35 1.5.35z\"\n})), 'PeopleOutlineTwoTone');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M15 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm-9-2V7H4v3H1v2h3v3h2v-3h3v-2H6zm9 4c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n}), 'PersonAddSharp');\n\nexports.default = _default;","import React, { Fragment, useState, useEffect } from \"react\";\r\nimport { FormControl, Grid, TextField, withStyles, InputLabel, Select, MenuItem, Button, FormHelperText } from \"@material-ui/core\";\r\nimport { useForm } from \"../../useForm\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../../../../actions/Staff/addStaff\";\r\nimport * as storeActions from \"../../../../../actions/Store/stores\";\r\nimport * as userLevelActions from \"../../../../../actions/UserLevel/userLevel\";\r\nimport { ToastConsumer, useToasts } from \"react-toast-notifications\";\r\nimport \"../../staffForm.css\";\r\nimport { string } from \"prop-types\";\r\nimport { RestoreSharp } from \"@material-ui/icons\";\r\nimport { createSelector, createStructuredSelector } from 'reselect';\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\n\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            margin: theme.spacing(1),\r\n            minWidth: 230,\r\n        }\r\n    },\r\n\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 230,\r\n    },\r\n    smMargin: {\r\n        margin: theme.spacing(1),\r\n\r\n    },\r\n})\r\n\r\nconst initialFieldValues = {\r\n\r\n    fName: '',\r\n    sName: '',\r\n    lName: '',\r\n    mobile: '',\r\n    email: '',\r\n    address: '',\r\n    uName: '',\r\n    password: '',\r\n    userLevelId: '',\r\n    \r\n    cPswd: '',\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst AddNewStaffForm = ({ classes, ...props }) => {\r\n    //const [addorEdit] = props;\r\n    //const [openPopup, setOpenPopup] = useState(false)\r\n    //toast message\r\n    const { addToast } = useToasts()\r\n    \r\n    //realtime validation for the whole form controls\r\n    const validate = (fieldValues = values) => {\r\n        let temp = { ...errors }\r\n        if ('fName' in fieldValues) {\r\n            temp.fName = fieldValues.fName ? \"\" : \"This field is required\"\r\n            // addToast(\"User data saved succeffuly\", {appearance:'success'})\r\n            // console.log(\"Tast has beeen displayed\")\r\n        }\r\n\r\n\r\n        if ('sName' in fieldValues) {\r\n            temp.sName = fieldValues.sName ? \"\" : \"This field is required\"\r\n        }\r\n\r\n\r\n        if ('lName' in fieldValues) {\r\n            temp.lName = fieldValues.lName ? \"\" : \"This field is required\"\r\n        }\r\n\r\n\r\n        if ('email' in fieldValues) {\r\n            if (temp.email != \" \") {\r\n                temp.email = (/^&|.+@.+..+/).test(fieldValues.email) ? \"\" : \"Email is not valid\"\r\n            }\r\n        }\r\n        if ('mobile' in fieldValues) {\r\n            temp.mobile = fieldValues.mobile ? \"\" : \"This field is required\"\r\n        }\r\n        if ('address' in fieldValues) {\r\n            temp.address = fieldValues.address ? \"\" : \"This field is required\"\r\n        }\r\n        if ('userLevelId' in fieldValues) {\r\n            temp.userLevelId = fieldValues.userLevelId ? \"\" : \"This field is required\"\r\n        }\r\n        if ('storeId' in fieldValues) {\r\n            temp.storeId = fieldValues.storeId ? \"\" : \"This field is required\"\r\n        }\r\n        if ('uName' in fieldValues) {\r\n            temp.uName = fieldValues.uName ? \"\" : \"This field is required\"\r\n        }\r\n        if ('password' in fieldValues) {\r\n            temp.password = fieldValues.password ? \"\" : \"This field is required\"\r\n        }\r\n        if ('cPswd' in fieldValues) {\r\n            temp.cPswd = fieldValues.cPswd ? \"\" : \"This field is required\"\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n        setErrors({\r\n            ...temp\r\n        })\r\n        if (fieldValues == values) {\r\n            return Object.values(temp).every(x => x == \"\")\r\n        }\r\n\r\n\r\n    }\r\n\r\n    const [\r\n        values,\r\n        setValues,\r\n        errors,\r\n        setErrors,\r\n        handleInputChange,\r\n        resetForm\r\n    ] = useForm(initialFieldValues, validate, props.setCurrentId);\r\n\r\n    const showToast = () => {\r\n        addToast(\"Staff data saved succeffuly\", { appearance: 'success' })\r\n        addToast(\"Staff data saved succeffuly\", { appearance: 'success' })\r\n        addToast(\"Staff data saved succeffuly\", { appearance: 'success' })\r\n        props.fetchAllAdmin();\r\n    }\r\n\r\n\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n\r\n\r\n        if (validate()) {\r\n\r\n            const onSuccess = () => {\r\n                resetForm();\r\n                showToast();\r\n\r\n            }\r\n\r\n\r\n\r\n            if (props.currentId == 0) {\r\n\r\n                //using toast notification\r\n\r\n                props.createStaff(values, onSuccess)\r\n                //addorEdit(values, onSuccess)\r\n\r\n            }\r\n            else {\r\n                //using windows alert notification\r\n                //props.updateDCandidate(props.currentId, values, () => {window.alert('updated')})\r\n                //using toast notification\r\n                props.updateStaff(props.currentId, values, onSuccess)\r\n\r\n            }\r\n            if (props.openPopup == true) {\r\n                props.setOpenPopup(false)\r\n            }\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n\r\n        if (props.currentId != 0)\r\n            setValues({\r\n                ...props.addStaffList.find(x => x.id == props.currentId)\r\n            })\r\n        setErrors({})\r\n        props.fetchAllUserLevel();\r\n\r\n\r\n\r\n    }, [props.currentId])\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n\r\n        <section className=\"content\">\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                    {/* left column */}\r\n                    <div className=\"col-md-12\">\r\n                        {/* jquery validation */}\r\n                        <div className=\"card card-primary\">\r\n                            <div className=\"card-header\">\r\n                                <h4 className=\"card-title\">Add Staff <small>+ Credentials </small></h4>\r\n                            </div>\r\n                            {/* /.card-header */}\r\n                            {/* form start */}\r\n                            <form id=\"quickForm\" autoComplete=\"off\" noValidate className={classes.root} onSubmit={handleSubmit}>\r\n\r\n                                <TextField\r\n                                    className=\"form-ctr\"\r\n                                    id=\"input-with-icon-textfield\"\r\n                                    variant=\"outlined\"\r\n                                    type=\"text\"\r\n                                    name=\"fName\"\r\n                                    label=\"First Name\"\r\n                                    InputLabelProps={{\r\n                                        startAdornment: (\r\n                                            <InputAdornment position=\"start\">\r\n                                                <AccountCircle />\r\n                                            </InputAdornment>\r\n                                        ),\r\n                                    }}\r\n                                    value={values.fName}\r\n                                    onChange={handleInputChange}\r\n                                    {...(errors.fName && { error: true, helperText: errors.fName })}\r\n                                />\r\n\r\n                                <TextField className=\"form-ctr\" name=\"sName\" label=\"Second Name\" value={values.sName}\r\n                                    onChange={handleInputChange}\r\n                                    variant=\"outlined\"\r\n                                    {... (errors.sName && { error: true, helperText: errors.sName })}\r\n                                />\r\n\r\n                                <TextField className=\"form-ctr\" name=\"lName\" label=\"Last Name\" value={values.lName}\r\n                                    onChange={handleInputChange}\r\n                                    variant=\"outlined\"\r\n\r\n                                    {... (errors.lName && { error: true, helperText: errors.lName })}\r\n                                />\r\n\r\n                                <TextField\r\n                                    className=\"form-ctr\"\r\n                                    name=\"email\"\r\n                                    label=\"Email\" type=\"email\" value={values.email}\r\n                                    onChange={handleInputChange}\r\n                                    variant=\"outlined\"\r\n\r\n                                    {...(errors.email && { error: true, helperText: errors.email })}\r\n                                />\r\n\r\n                                <TextField className=\"form-ctr\" name=\"mobile\" label=\"Mobile\" value={values.mobile}\r\n                                    onChange={handleInputChange}\r\n                                    variant=\"outlined\"\r\n\r\n                                    {... (errors.mobile && { error: true, helperText: errors.Mobile })}\r\n                                />\r\n\r\n                                <TextField className=\"form-ctr\" name=\"address\" label=\"Address\" value={values.address}\r\n                                    onChange={handleInputChange}\r\n                                    variant=\"outlined\"\r\n\r\n                                    {... (errors.address && { error: true, helperText: errors.address })}\r\n                                />\r\n                                \r\n\r\n                                <FormControl className={classes.formControl}\r\n                                    {...(errors.userLevelId && { error: true })}\r\n                                >\r\n                                    <InputLabel >Access Level</InputLabel>\r\n                                    <Select\r\n                                        className=\"form-ctr\"\r\n                                        name=\"userLevelId\"\r\n                                        label=\"Access Level\"\r\n                                        value={values.userLevelId}\r\n                                        onChange={handleInputChange}\r\n                                        variant=\"outlined\"\r\n\r\n                                    >\r\n                                        <MenuItem value=\"\">Select Access Level</MenuItem>\r\n                                        {\r\n                                            props.userLevelList.map((record, index) => {\r\n                                                return (\r\n                                                    <MenuItem value={record.id}>{record.level}</MenuItem>\r\n\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </Select>\r\n                                    {errors.userLevelId && <FormHelperText>{errors.userLevelId}</FormHelperText>}\r\n                                </FormControl>\r\n\r\n                                <TextField className=\"form-ctr\" name=\"uName\" label=\"User Name\" value={values.uName}\r\n                                    onChange={handleInputChange}\r\n                                    variant=\"outlined\"\r\n\r\n                                    {... (errors.uName && { error: true, helperText: errors.uName })}\r\n                                />\r\n\r\n                                <TextField className=\"form-ctr\" name=\"password\" label=\"Password\" type=\"password\" value={values.password}\r\n                                    onChange={handleInputChange}\r\n                                    variant=\"outlined\"\r\n\r\n                                    {... (errors.password && { error: true, helperText: errors.password })}\r\n                                />\r\n\r\n                                <TextField className=\"form-ctr\" name=\"cPswd\" label=\"Confirm Password\" type=\"password\" value={values.cPswd}\r\n                                    onChange={handleInputChange}\r\n                                    variant=\"outlined\"\r\n\r\n\r\n                                    {... (errors.cPswd && { error: true, helperText: errors.cPswd })}\r\n                                />\r\n\r\n\r\n\r\n                                {/* /.card-body */}\r\n                                <div className=\"card-footer\">\r\n                                    <div>\r\n                                        <button type=\"submit\" className=\"btn btn-primary\" >Save</button>\r\n                                        <button variant=\"contained\"\r\n                                            className=\"btn btn-secondary\"\r\n                                            onClick={resetForm} style={{ marginLeft: 3 }}>Reset</button>\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                            </form>\r\n\r\n                        </div>\r\n                        {/* /.card */}\r\n                    </div>\r\n                    {/*/.col (left) */}\r\n                    {/* right column */}\r\n                    <div className=\"col-md-6\">\r\n                    </div>\r\n                    {/*/.col (right) */}\r\n                </div>\r\n                {/* /.row */}\r\n            </div>{/* /.container-fluid */}\r\n        </section>\r\n\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    addStaffList: state.addStaff.list,\r\n    userLevelList: state.userLevel.list,\r\n})\r\n\r\n\r\n\r\nconst mapActionToProps = {\r\n    createStaff: actions.create,\r\n    updateStaff: actions.update,\r\n    fetchAllUserLevel: userLevelActions.fetchAllUserLevel,\r\n    fetchAllAdmin: actions.fetchAllAdmin,\r\n\r\n}\r\nexport default connect(mapStateToProps, mapActionToProps)(withStyles(styles)(AddNewStaffForm));","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 00-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'Edit');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6 21h12V7H6v14zm2.46-9.12l1.41-1.41L12 12.59l2.12-2.12 1.41 1.41L13.41 14l2.12 2.12-1.41 1.41L12 15.41l-2.12 2.12-1.41-1.41L10.59 14l-2.13-2.12zM15.5 4l-1-1h-5l-1 1H5v2h14V4h-3.5z\"\n}), 'DeleteForeverSharp');\n\nexports.default = _default;","import { Grid, Paper, Table, TableContainer, TableHead, TableRow, TableCell, TableBody, withStyles, ButtonGroup, Button } from \"@material-ui/core\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../../../../actions/Staff/addStaff\";\r\n\r\nimport AddNewStaffForm from \"./AddNewStaffForm\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\n//import PeopleOutlineTwoToneIcon from '@material-ui/icons/PeopleOutlineTwoTone';\r\nimport PageHeader from \"../../../PageHeader\";\r\nimport PeopleOutlineTwoToneIcon from '@material-ui/icons/PersonAddSharp';\r\nimport ConfirmDialog from \"../../../controls/ConfirmDialog\";\r\n//import Controls from \"./Controls\";\r\nimport NotListedLocation  from '@material-ui/icons/NotListedLocation';\r\n\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        \"& .MuiTableCell-head\": {\r\n            fontSize: \"0.95rem\"\r\n        }\r\n    },\r\n    paper: {\r\n        margin: theme.spacing(-8.9),\r\n        padding: theme.spacing(6)\r\n    },\r\n\r\n    grid:{\r\n        paddingLeft: theme.spacing(2)\r\n    }\r\n})\r\n\r\n\r\n\r\nconst AddNewStaff = ({ classes, ...props }) => {\r\n    //Toast message\r\n    const { addToast } = useToasts()\r\n    const [currentId, setCurrentId] = useState(0)\r\n    const [confirmDialog, setConfirmDialog] = useState(false) \r\n    useEffect(() => {\r\n        props.fetchAllAdmin()\r\n       // props.fetchAllStores()\r\n    }, [])\r\n\r\n    const showToast= () =>{\r\n        addToast(\"Record was deleted succesffuly\", { appearance: 'error' })\r\n        addToast(\"Record was deleted succesffuly\", { appearance: 'error' })\r\n        addToast(\"Record was deleted succesffuly\", { appearance: 'error' })\r\n\r\n    }\r\n    const onDelete = id => {\r\n            props.deleteStaff(id, showToast )\r\n            setConfirmDialog(false)\r\n    }\r\n\r\n    const openInDialog = () => {\r\n        setConfirmDialog(true)   \r\n    }\r\n\r\n    return (\r\n         <>\r\n         <PageHeader\r\n                title=\"Employees\"\r\n                //subTitle=\"Form design with validation\"\r\n                icon={<PeopleOutlineTwoToneIcon fontSize=\"large\" />}\r\n            />,\r\n         <Paper className={classes.paper} elevation={3}>\r\n           \r\n                    \r\n                    <AddNewStaffForm {...({ currentId, setCurrentId })} />\r\n               \r\n                    <div className={classes.grid}>\r\n                    <table class=\"table  .table-responsive{-sm|-md|-lg|-xl|-xxl} table-bordered table-hover table-sm table-striped\" >\r\n                        <thead class=\"thead-dark\">\r\n                            <tr>\r\n                                <th scope=\"col\">Id</th>\r\n                                <th scope=\"col\">Name</th>\r\n                                <th scope=\"col\">Email</th>\r\n                                <th scope=\"col\">Mobile</th>\r\n                                <th scope=\"col\">Address</th>\r\n                               \r\n                                <th scope=\"col\">Access Level</th>\r\n                                <th scope=\"col\">User Name</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {/* <tr>\r\n                                <th scope=\"row\">1</th>\r\n                                <td>Mark</td>\r\n                                <td>Otto</td>\r\n                                <td>@mdo</td>\r\n                            </tr> */}\r\n                            {\r\n                                     props.addStaffList.map((record, index) => {\r\n                                         return ( <tr key = {index} hover>\r\n                                             <td>{record.id}</td>\r\n                                             <td>{record.fName + \" \"+ record.sName + \" \" + record.lName}</td>\r\n                                             <td>{record.email}</td>\r\n                                             <td>{record.mobile}</td>\r\n                                             <td>{record.address}</td>\r\n                                             <td>{record.userLevel}</td>\r\n                                             <td>{record.uName}</td>\r\n                                             \r\n                                             <td>\r\n                                                 <ButtonGroup variant= \"text\">\r\n                                                    <Button><EditIcon color=\"primary\"\r\n                                                    onClick={()=>{setCurrentId(record.id)}}/></Button>\r\n                                                    <Button><DeleteIcon color=\"Secondary\"\r\n                                                      onClick={() => {\r\n                                                        openInDialog()\r\n                                                        setConfirmDialog({\r\n                                                            onConfirm: () =>{onDelete(record.id)}\r\n                                                        })\r\n                                                        \r\n                                                        //onDelete(record.id)\r\n                                                    }\r\n                                                    }\r\n                                                \r\n                                                    /></Button> \r\n                                                 </ButtonGroup>\r\n                                             </td>\r\n                                         </tr>\r\n\r\n                                         )\r\n                                     })\r\n                                 }\r\n                           \r\n                        </tbody>\r\n                    </table>\r\n                    </div>\r\n                {/* </Grid>\r\n            </Grid> */}\r\n        </Paper>\r\n\r\n        <ConfirmDialog \r\n            title=\"Are you sure you want to delete this record?\"\r\n            subTitle=\"This operation can't be reversed\"\r\n            confirmDialog={confirmDialog}\r\n            setConfirmDialog = {setConfirmDialog}\r\n            />\r\n         </>\r\n    );\r\n}\r\n\r\n//export default staff; \r\n\r\nconst mapStateToProps = state => ({\r\n    addStaffList: state.addStaff.list,\r\n    \r\n})\r\n\r\nconst mapActionToProps = {\r\n    fetchAllAdmin: actions.fetchAllAdmin,\r\n    deleteStaff: actions.Delete,\r\n    \r\n}\r\n\r\nexport default connect(mapStateToProps, mapActionToProps)(withStyles(styles)(AddNewStaff));\r\n\r\n"],"sourceRoot":""}