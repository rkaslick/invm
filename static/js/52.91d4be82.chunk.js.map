{"version":3,"sources":["views/Components/Forms/CompanyData/AddCompanyData/AddCompanyDataForm.js"],"names":["defaultImageSrc","initialFieldValues","name","logo","phone","address","country","krapin","email","registrationNo","website","imageName","imageSrc","imageFile","mapActionToProps","fetchAllCompanyData","companyDataActions","deleteCompanyData","createCompanyData","updateCompanyData","connect","state","companyDataList","companyData","list","withStyles","theme","root","margin","spacing","minWidth","formControl","smMargin","_ref","classes","props","_objectWithoutProperties","_excluded","addToast","useToasts","validate","fieldValues","arguments","length","undefined","values","temp","_objectSpread","errors","setErrors","Object","every","x","_useForm","useForm","setCurrentId","_useForm2","_slicedToArray","setValues","handleInputChange","resetForm","useEffect","currentId","find","id","_jsx","className","children","_jsxs","autoComplete","noValidate","onSubmit","e","preventDefault","onSuccess","appearance","console","log","openPopup","setOpenPopup","TextField","type","label","value","onChange","error","helperText","src","style","width","height","accept","target","files","reader","FileReader","onload","result","readAsDataURL","variant","onClick","marginLeft"],"mappings":"kOA8BMA,EAAkB,kCAClBC,EAAqB,CACvBC,KAAM,GACNC,KAAM,GACNC,MAAO,GACPC,QAAS,GACTC,QAAS,GACTC,OAAQ,GACRC,MAAO,GACPC,eAAgB,GAChBC,QAAS,GACTC,UAAW,GACXC,SAAUZ,EACVa,UAAW,MAmTTC,EAAmB,CACrBC,oBAAqBC,IACrBC,kBAAmBD,IAEnBE,kBAAmBF,IACnBG,kBAAmBH,KAKRI,uBAfS,SAAAC,GAAK,MAAK,CAC9BC,gBAAiBD,EAAME,YAAYC,KAEtC,GAYuCV,EAAzBM,CAA2CK,aA5V3C,SAAAC,GAAK,MAAK,CACrBC,KAAM,CACF,uBAAwB,CACpBC,OAAQF,EAAMG,QAAQ,GACtBC,SAAU,MAIlBC,YAAa,CACTH,OAAQF,EAAMG,QAAQ,GACtBC,SAAU,KAEdE,SAAU,CACNJ,OAAQF,EAAMG,QAAQ,IAG7B,GA4UyDJ,EArT/B,SAAHQ,GAA+B,IAAzBC,EAAOD,EAAPC,QAAYC,EAAKC,YAAAH,EAAAI,GAGnCC,EAAaC,sBAAbD,SAsBFE,EAAW,WAA2B,IAA1BC,EAAWC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAGG,EACxBC,EAAIC,YAAA,GAAQC,GAwChB,GAvCI,SAAUP,IACVK,EAAK5C,KAAOuC,EAAYvC,KAAO,GAAK,0BAMpC,UAAWuC,IACXK,EAAK1C,MAAQqC,EAAYrC,MAAQ,GAAK,0BAItC,YAAaqC,IACbK,EAAKzC,QAAUoC,EAAYpC,QAAU,GAAK,0BAI1C,YAAaoC,IACbK,EAAKxC,QAAUmC,EAAYnC,QAAU,GAAK,0BAG1C,WAAYmC,IACZK,EAAKvC,OAASkC,EAAYlC,OAAS,GAAK,0BAExC,UAAWkC,IACXK,EAAKtC,MAAQiC,EAAYjC,MAAQ,GAAK,0BAEtC,YAAaiC,IACbK,EAAKpC,QAAU+B,EAAY/B,QAAU,GAAK,0BAE1C,mBAAoB+B,IACpBK,EAAKrC,eAAiBgC,EAAYhC,eAAiB,GAAK,0BAK5DwC,EAASF,YAAC,CAAC,EACJD,IAEHL,GAAeI,EACf,OAAOK,OAAOL,OAAOC,GAAMK,OAAM,SAAAC,GAAC,MAAS,IAALA,CAAO,GAIrD,EAEAC,EAOIC,YAAQrD,EAAoBuC,EAAUL,EAAMoB,cAAaC,EAAAC,YAAAJ,EAAA,GANzDR,EAAMW,EAAA,GACNE,EAASF,EAAA,GACTR,EAAMQ,EAAA,GACNP,EAASO,EAAA,GACTG,EAAiBH,EAAA,GACjBI,EAASJ,EAAA,GA6Eb,OApBAK,qBAAU,WACN1B,EAAMpB,sBAEiB,GAAnBoB,EAAM2B,WACNJ,EAASX,YAAC,CAAC,EACJZ,EAAMb,gBAAgByC,MAAK,SAAAX,GAAC,OAAIA,EAAEY,IAAM7B,EAAM2B,SAAS,MAElEb,EAAU,CAAC,EAOf,GAAG,CAACd,EAAM2B,YAONG,cAAA,WAASC,UAAU,UAASC,SACxBF,cAAA,OAAKC,UAAU,kBAAiBC,SAC5BC,eAAA,OAAKF,UAAU,MAAKC,SAAA,CAEhBF,cAAA,OAAKC,UAAU,YAAWC,SAEtBC,eAAA,OAAKF,UAAU,oBAAmBC,SAAA,CAC9BF,cAAA,OAAKC,UAAU,cAAaC,SACxBC,eAAA,MAAIF,UAAU,aAAYC,SAAA,CAAC,mBAAgBF,cAAA,SAAAE,SAAO,WAItDC,eAAA,QAAMJ,GAAG,YAAYK,aAAa,MAAMC,YAAU,EAACJ,UAAWhC,EAAQP,KAAM4C,SA9E/E,SAAAC,GAIjB,GAHAA,EAAEC,iBAGEjC,IAAY,CAEZ,IAAMkC,EAAY,WAdtBpC,EAAS,gCAAiC,CAAEqC,WAAY,YACxDrC,EAAS,gCAAiC,CAAEqC,WAAY,YACxDrC,EAAS,gCAAiC,CAAEqC,WAAY,YACxDxC,EAAMpB,sBAaE6C,GAGJ,EAIuB,GAAnBzB,EAAM2B,WAGNjB,EAAO1C,KAAO0C,EAAOjC,SACrBuB,EAAMjB,kBAAkB2B,EAAQ6B,KAShC7B,EAAO1C,KAAO0C,EAAOjC,SACrBgE,QAAQC,IAAIhC,EAAO1C,MACnBgC,EAAMhB,kBAAkBgB,EAAM2B,UAAWjB,EAAQ6B,IAM9B,GAAnBvC,EAAM2C,WACN3C,EAAM4C,cAAa,EAG3B,CAGJ,EAmC2HZ,SAAA,CAE/FF,cAACe,IAASjC,YAAA,CACNmB,UAAU,WACVF,GAAG,iBACHiB,KAAK,OACL/E,KAAK,OACLgF,MAAM,OACNC,MAAOtC,EAAO3C,KACdkF,SAAUzB,GACLX,EAAO9C,MAAQ,CAAEmF,OAAO,EAAMC,WAAYtC,EAAO9C,QAG1D+D,cAACe,IAASjC,YAAA,CACNmB,UAAU,WACVF,GAAG,iBACHiB,KAAK,OACL/E,KAAK,QACLgF,MAAM,QACNC,MAAOtC,EAAOzC,MACdgF,SAAUzB,GACLX,EAAO5C,OAAS,CAAEiF,OAAO,EAAMC,WAAYtC,EAAO5C,SAG3D6D,cAACe,IAASjC,YAAA,CACNmB,UAAU,WACVF,GAAG,iBACHiB,KAAK,OACL/E,KAAK,UACLgF,MAAM,UACNC,MAAOtC,EAAOxC,QACd+E,SAAUzB,GACLX,EAAO3C,SAAW,CAAEgF,OAAO,EAAMC,WAAYtC,EAAO3C,WAG7D4D,cAACe,IAASjC,YAAA,CACNmB,UAAU,WACVF,GAAG,iBACHiB,KAAK,OACL/E,KAAK,UACLgF,MAAM,UACNC,MAAOtC,EAAOvC,QACd8E,SAAUzB,GACLX,EAAO1C,SAAW,CAAE+E,OAAO,EAAMC,WAAYtC,EAAO1C,WAE7D2D,cAACe,IAASjC,YAAA,CACNmB,UAAU,WACVF,GAAG,iBACHiB,KAAK,OACL/E,KAAK,SACLgF,MAAM,UACNC,MAAOtC,EAAOtC,OACd6E,SAAUzB,GACLX,EAAOzC,QAAU,CAAE8E,OAAO,EAAMC,WAAYtC,EAAOzC,UAE5D0D,cAACe,IAASjC,YAAA,CACNmB,UAAU,WACVF,GAAG,iBACHiB,KAAK,OACL/E,KAAK,QACLgF,MAAM,QACNC,MAAOtC,EAAOrC,MACd4E,SAAUzB,GACLX,EAAOxC,OAAS,CAAE6E,OAAO,EAAMC,WAAYtC,EAAOxC,SAE3DyD,cAACe,IAASjC,YAAA,CACNmB,UAAU,WACVF,GAAG,iBACHiB,KAAK,OACL/E,KAAK,UACLgF,MAAM,UACNC,MAAOtC,EAAOnC,QACd0E,SAAUzB,GACLX,EAAOtC,SAAW,CAAE2E,OAAO,EAAMC,WAAYtC,EAAOtC,WAE7DuD,cAACe,IAASjC,YAAA,CACNmB,UAAU,WACVF,GAAG,iBACHiB,KAAK,OACL/E,KAAK,iBACLgF,MAAM,kBACNC,MAAOtC,EAAOpC,eACd2E,SAAUzB,GACLX,EAAOvC,gBAAkB,CAAE4E,OAAO,EAAMC,WAAYtC,EAAOvC,kBAGpE2D,eAAA,OAAKF,UAAU,WAAUC,SAAA,CACrBF,cAAA,QAAAE,SAAM,iBAAmBF,cAAA,SACzBA,cAAA,OAAKsB,IAAK1C,EAAOjC,SAAUsD,UAAU,eAAesB,MAAO,CAAEC,MAAO,IAAKC,OAAQ,OACjFzB,cAAA,SAAOgB,KAAK,OAAOU,OAAO,UAAUzB,UAAU,oBAC1CkB,SA/PhB,SAAAZ,GAChB,GAAIA,EAAEoB,OAAOC,OAASrB,EAAEoB,OAAOC,MAAM,GAAI,CACrC,IAAIhF,EAAY2D,EAAEoB,OAAOC,MAAM,GACzBC,EAAS,IAAIC,WACnBD,EAAOE,OAAS,SAAA5C,GACZM,EAASX,wBAAC,CAAC,EACJF,GAAM,IACThC,YACAD,SAAUwC,EAAEwC,OAAOK,SAE3B,EACAH,EAAOI,cAAcrF,EACzB,MACI6C,EAASX,wBAAC,CAAC,EACJF,GAAM,IACThC,UAAW,KACXD,SAAUZ,IAGtB,OAkP4BiE,cAAA,OAAKC,UAAU,cAAaC,SACxBC,eAAA,OAAAD,SAAA,CACIF,cAAA,UAAQgB,KAAK,SAASf,UAAU,kBAAiBC,SAAE,SACnDF,cAAA,UAAQkC,QAAQ,YACZjC,UAAU,oBACVkC,QAASxC,EAAW4B,MAAO,CAAEa,WAAY,GAAIlC,SAAC,uBAYtEF,cAAA,OAAKC,UAAU,mBASnC,I","file":"static/js/52.91d4be82.chunk.js","sourcesContent":["import React, { Fragment, useState, useEffect } from \"react\";\r\nimport { FormControl, Grid, TextField, withStyles, InputLabel, Select, MenuItem, Button, FormHelperText } from \"@material-ui/core\";\r\nimport { useForm } from \"../../useForm\";\r\nimport { connect } from \"react-redux\";\r\nimport * as companyDataActions from \"../../../../../actions/CompanyData/companyData\";\r\n\r\n//import * as userLevelActions from \"../../../../../actions/UserLevel/userLevel\";\r\nimport { ToastConsumer, useToasts } from \"react-toast-notifications\";\r\nimport \"../../staffForm.css\";\r\nimport { RestoreSharp } from \"@material-ui/icons\";\r\n\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            margin: theme.spacing(1),\r\n            minWidth: 230,\r\n        }\r\n    },\r\n\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 230,\r\n    },\r\n    smMargin: {\r\n        margin: theme.spacing(1),\r\n\r\n    },\r\n})\r\n\r\nconst defaultImageSrc = './images/icon-placeholder-5.jpg'\r\nconst initialFieldValues = {\r\n    name: \"\",\r\n    logo: \"\",\r\n    phone: \"\",\r\n    address: \"\",\r\n    country: \"\",\r\n    krapin: \"\",\r\n    email: \"\",\r\n    registrationNo: \"\",\r\n    website: \"\",\r\n    imageName: \"\",\r\n    imageSrc: defaultImageSrc,\r\n    imageFile: null\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst AddCompanyDataForm = ({ classes, ...props }) => {\r\n\r\n    //toast message\r\n    const { addToast } = useToasts()\r\n    const showPreview = e => {\r\n        if (e.target.files && e.target.files[0]) {\r\n            let imageFile = e.target.files[0];\r\n            const reader = new FileReader();\r\n            reader.onload = x => {\r\n                setValues({\r\n                    ...values,\r\n                    imageFile,\r\n                    imageSrc: x.target.result\r\n                })\r\n            }\r\n            reader.readAsDataURL(imageFile)\r\n        } else {\r\n            setValues({\r\n                ...values,\r\n                imageFile: null,\r\n                imageSrc: defaultImageSrc\r\n            })\r\n        }\r\n    }\r\n    //realtime validation for the whole form controls\r\n    const validate = (fieldValues = values) => {\r\n        let temp = { ...errors }\r\n        if ('name' in fieldValues) {\r\n            temp.name = fieldValues.name ? \"\" : \"This field is required\"\r\n            // addToast(\"User data saved succeffuly\", {appearance:'success'})\r\n            // console.log(\"Tast has beeen displayed\")\r\n        }\r\n\r\n\r\n        if ('phone' in fieldValues) {\r\n            temp.phone = fieldValues.phone ? \"\" : \"This field is required\"\r\n        }\r\n\r\n\r\n        if ('address' in fieldValues) {\r\n            temp.address = fieldValues.address ? \"\" : \"This field is required\"\r\n        }\r\n\r\n\r\n        if ('country' in fieldValues) {\r\n            temp.country = fieldValues.country ? \"\" : \"This field is required\"\r\n        }\r\n\r\n        if ('krapin' in fieldValues) {\r\n            temp.krapin = fieldValues.krapin ? \"\" : \"This field is required\"\r\n        }\r\n        if ('email' in fieldValues) {\r\n            temp.email = fieldValues.email ? \"\" : \"This field is required\"\r\n        }\r\n        if ('website' in fieldValues) {\r\n            temp.website = fieldValues.website ? \"\" : \"This field is required\"\r\n        }\r\n        if ('registrationNo' in fieldValues) {\r\n            temp.registrationNo = fieldValues.registrationNo ? \"\" : \"This field is required\"\r\n        }\r\n\r\n\r\n\r\n        setErrors({\r\n            ...temp\r\n        })\r\n        if (fieldValues == values) {\r\n            return Object.values(temp).every(x => x == \"\")\r\n        }\r\n\r\n\r\n    }\r\n\r\n    const [\r\n        values,\r\n        setValues,\r\n        errors,\r\n        setErrors,\r\n        handleInputChange,\r\n        resetForm\r\n    ] = useForm(initialFieldValues, validate, props.setCurrentId);\r\n\r\n    const showToast = () => {\r\n        addToast(\"Company data saved succeffuly\", { appearance: 'success' })\r\n        addToast(\"Company data saved succeffuly\", { appearance: 'success' })\r\n        addToast(\"Company data saved succeffuly\", { appearance: 'success' })\r\n        props.fetchAllCompanyData();\r\n    }\r\n\r\n\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n\r\n\r\n        if (validate()) {\r\n\r\n            const onSuccess = () => {\r\n                showToast();\r\n                resetForm();\r\n\r\n\r\n            }\r\n\r\n\r\n\r\n            if (props.currentId == 0) {\r\n\r\n                //using toast notification\r\n                values.logo = values.imageSrc;\r\n                props.createCompanyData(values, onSuccess)\r\n                //addorEdit(values, onSuccess)\r\n\r\n            }\r\n            else {\r\n                //using windows alert notification\r\n                //props.updateDCandidate(props.currentId, values, () => {window.alert('updated')})\r\n                //using toast notification\r\n                // console.log(values);\r\n                values.logo = values.imageSrc;\r\n                console.log(values.logo);\r\n                props.updateCompanyData(props.currentId, values, onSuccess)\r\n\r\n\r\n\r\n            }\r\n\r\n            if (props.openPopup == true) {\r\n                props.setOpenPopup(false)\r\n            }\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        props.fetchAllCompanyData();\r\n\r\n        if (props.currentId != 0)\r\n            setValues({\r\n                ...props.companyDataList.find(x => x.id == props.currentId)\r\n            })\r\n        setErrors({})\r\n\r\n\r\n        // props.fetchAllCategory();\r\n\r\n\r\n\r\n    }, [props.currentId])\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <section className=\"content\">\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                    {/* left column */}\r\n                    <div className=\"col-md-12\">\r\n                        {/* jquery validation */}\r\n                        <div className=\"card card-primary\">\r\n                            <div className=\"card-header\">\r\n                                <h4 className=\"card-title\">Add Company Data<small> </small></h4>\r\n                            </div>\r\n                            {/* /.card-header */}\r\n                            {/* form start */}\r\n                            <form id=\"quickForm\" autoComplete=\"off\" noValidate className={classes.root} onSubmit={handleSubmit}>\r\n\r\n                                <TextField\r\n                                    className=\"form-ctr\"\r\n                                    id=\"standard-basic\"\r\n                                    type=\"text\"\r\n                                    name=\"name\"\r\n                                    label=\"Name\"\r\n                                    value={values.name}\r\n                                    onChange={handleInputChange}\r\n                                    {...(errors.name && { error: true, helperText: errors.name })}\r\n                                />\r\n\r\n                                <TextField\r\n                                    className=\"form-ctr\"\r\n                                    id=\"standard-basic\"\r\n                                    type=\"text\"\r\n                                    name=\"phone\"\r\n                                    label=\"Phone\"\r\n                                    value={values.phone}\r\n                                    onChange={handleInputChange}\r\n                                    {...(errors.phone && { error: true, helperText: errors.phone })}\r\n                                />\r\n\r\n                                <TextField\r\n                                    className=\"form-ctr\"\r\n                                    id=\"standard-basic\"\r\n                                    type=\"text\"\r\n                                    name=\"address\"\r\n                                    label=\"Address\"\r\n                                    value={values.address}\r\n                                    onChange={handleInputChange}\r\n                                    {...(errors.address && { error: true, helperText: errors.address })}\r\n                                />\r\n\r\n                                <TextField\r\n                                    className=\"form-ctr\"\r\n                                    id=\"standard-basic\"\r\n                                    type=\"text\"\r\n                                    name=\"country\"\r\n                                    label=\"Country\"\r\n                                    value={values.country}\r\n                                    onChange={handleInputChange}\r\n                                    {...(errors.country && { error: true, helperText: errors.country })}\r\n                                />\r\n                                <TextField\r\n                                    className=\"form-ctr\"\r\n                                    id=\"standard-basic\"\r\n                                    type=\"text\"\r\n                                    name=\"krapin\"\r\n                                    label=\"KRA PIN\"\r\n                                    value={values.krapin}\r\n                                    onChange={handleInputChange}\r\n                                    {...(errors.krapin && { error: true, helperText: errors.krapin })}\r\n                                />\r\n                                <TextField\r\n                                    className=\"form-ctr\"\r\n                                    id=\"standard-basic\"\r\n                                    type=\"text\"\r\n                                    name=\"email\"\r\n                                    label=\"Email\"\r\n                                    value={values.email}\r\n                                    onChange={handleInputChange}\r\n                                    {...(errors.email && { error: true, helperText: errors.email })}\r\n                                />\r\n                                <TextField\r\n                                    className=\"form-ctr\"\r\n                                    id=\"standard-basic\"\r\n                                    type=\"text\"\r\n                                    name=\"website\"\r\n                                    label=\"Website\"\r\n                                    value={values.website}\r\n                                    onChange={handleInputChange}\r\n                                    {...(errors.website && { error: true, helperText: errors.website })}\r\n                                />\r\n                                <TextField\r\n                                    className=\"form-ctr\"\r\n                                    id=\"standard-basic\"\r\n                                    type=\"text\"\r\n                                    name=\"registrationNo\"\r\n                                    label=\"Registration No\"\r\n                                    value={values.registrationNo}\r\n                                    onChange={handleInputChange}\r\n                                    {...(errors.registrationNo && { error: true, helperText: errors.registrationNo })}\r\n                                />\r\n\r\n                                <div className=\"form-ctr\">\r\n                                    <span>Company Logo</span><br />\r\n                                    <img src={values.imageSrc} className=\"card-img-top\" style={{ width: 100, height: 100 }} />\r\n                                    <input type=\"file\" accept=\"image/*\" className=\"form-control-file\"\r\n                                        onChange={showPreview}\r\n                                    />\r\n                                </div>\r\n\r\n\r\n                                {/* /.card-body */}\r\n                                <div className=\"card-footer\">\r\n                                    <div>\r\n                                        <button type=\"submit\" className=\"btn btn-primary\" >Save</button>\r\n                                        <button variant=\"contained\"\r\n                                            className=\"btn btn-secondary\"\r\n                                            onClick={resetForm} style={{ marginLeft: 3 }}>Reset</button>\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                            </form>\r\n\r\n                        </div>\r\n                        {/* /.card */}\r\n                    </div>\r\n                    {/*/.col (left) */}\r\n                    {/* right column */}\r\n                    <div className=\"col-md-6\">\r\n                    </div>\r\n                    {/*/.col (right) */}\r\n                </div>\r\n                {/* /.row */}\r\n            </div>{/* /.container-fluid */}\r\n        </section>\r\n\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    companyDataList: state.companyData.list,\r\n    // categoryList: state.category.list\r\n})\r\n\r\nconst mapActionToProps = {\r\n    fetchAllCompanyData: companyDataActions.fetchAllCompanyData,\r\n    deleteCompanyData: companyDataActions.DeleteCompanyData,\r\n    // fetchAllCategory: categActions.fetchAllCategory,\r\n    createCompanyData: companyDataActions.createCompanyData,\r\n    updateCompanyData: companyDataActions.updateCompanyData,\r\n\r\n\r\n\r\n}\r\nexport default connect(mapStateToProps, mapActionToProps)(withStyles(styles)(AddCompanyDataForm));"],"sourceRoot":""}