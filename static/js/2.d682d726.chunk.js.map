{"version":3,"sources":["../node_modules/@material-ui/core/esm/ButtonGroup/ButtonGroup.js","views/Components/SaleDocuments/Invoice/Invoice.js","views/Components/IPopup.js","views/Components/DlPopup.js","views/Components/SaleDocuments/DeliveryNote/DeliveryNote.js","../node_modules/@material-ui/icons/Delete.js","../node_modules/@material-ui/icons/Edit.js"],"names":["Button","styles","ButtonGroup","React","props","ref","children","classes","className","_props$color","color","_props$component","component","Component","_props$disabled","disabled","_props$disableElevati","disableElevation","_props$disableFocusRi","disableFocusRipple","_props$disableRipple","disableRipple","_props$fullWidth","fullWidth","_props$orientation","orientation","_props$size","size","_props$variant","variant","other","_objectWithoutProperties","buttonClassName","clsx","grouped","concat","capitalize","_extends","role","root","contained","vertical","map","child","withStyles","theme","display","borderRadius","shape","boxShadow","shadows","width","flexDirection","minWidth","groupedHorizontal","borderTopLeftRadius","borderBottomLeftRadius","borderTopRightRadius","borderBottomRightRadius","groupedVertical","groupedText","groupedTextHorizontal","borderRight","palette","type","groupedTextVertical","borderBottom","groupedTextPrimary","borderColor","alpha","primary","main","groupedTextSecondary","secondary","groupedOutlined","groupedOutlinedHorizontal","marginLeft","borderRightColor","groupedOutlinedVertical","marginTop","borderBottomColor","groupedOutlinedPrimary","groupedOutlinedSecondary","groupedContained","groupedContainedHorizontal","grey","action","groupedContainedVertical","groupedContainedPrimary","dark","groupedContainedSecondary","name","mapActionToProps","fetchAllCompanyData","companyDataActions","fetchAllTaxes","TActions","connect","state","customersList","customers","list","companyDataList","companyData","taxList","tax","fontSize","paper","margin","spacing","padding","grid","paddingLeft","td","textIndent","tr","backgroundColor","_ref","_excluded","_useState","useState","_useState2","_slicedToArray","invoiceNo","setInvoiceNo","useEffect","invoNo","uuid","substring","toUpperCase","today","Date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","componentRef","useRef","_jsxs","_Fragment","_jsx","ReactToPrint","trigger","Controls","text","newButton","content","current","style","src","logo","alt","height","float","phone","address","customerData","class","scope","products","product","sellingPrice","quantity","discount","total","parseFloat","toFixed","gTotalPrice","totalTax","useStyles","makeStyles","dialogWrapper","position","top","DialogTitle","paddingRight","IPopup","title","openIPopup","setOpenIPopup","Dialog","open","maxWidth","clasess","Typography","flexGrow","ActionButton","onClick","CloseIcon","DialogContent","dividers","DlPopup","openDlPopup","setOpenDlPopup","textAlign","_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","value","default","_default","createElement","d"],"mappings":"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","file":"static/js/2.d682d726.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport capitalize from '../utils/capitalize';\nimport { alpha } from '../styles/colorManipulator';\nimport withStyles from '../styles/withStyles';\nimport Button from '../Button'; // Force a side effect so we don't have any override priority issue.\n// eslint-disable-next-line no-unused-expressions\n\nButton.styles;\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-flex',\n      borderRadius: theme.shape.borderRadius\n    },\n\n    /* Styles applied to the root element if `variant=\"contained\"`. */\n    contained: {\n      boxShadow: theme.shadows[2]\n    },\n\n    /* Styles applied to the root element if `disableElevation={true}`. */\n    disableElevation: {\n      boxShadow: 'none'\n    },\n\n    /* Pseudo-class applied to child elements if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `fullWidth={true}`. */\n    fullWidth: {\n      width: '100%'\n    },\n\n    /* Styles applied to the root element if `orientation=\"vertical\"`. */\n    vertical: {\n      flexDirection: 'column'\n    },\n\n    /* Styles applied to the children. */\n    grouped: {\n      minWidth: 40\n    },\n\n    /* Styles applied to the children if `orientation=\"horizontal\"`. */\n    groupedHorizontal: {\n      '&:not(:first-child)': {\n        borderTopLeftRadius: 0,\n        borderBottomLeftRadius: 0\n      },\n      '&:not(:last-child)': {\n        borderTopRightRadius: 0,\n        borderBottomRightRadius: 0\n      }\n    },\n\n    /* Styles applied to the children if `orientation=\"vertical\"`. */\n    groupedVertical: {\n      '&:not(:first-child)': {\n        borderTopRightRadius: 0,\n        borderTopLeftRadius: 0\n      },\n      '&:not(:last-child)': {\n        borderBottomRightRadius: 0,\n        borderBottomLeftRadius: 0\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"text\"`. */\n    groupedText: {},\n\n    /* Styles applied to the children if `variant=\"text\"` and `orientation=\"horizontal\"`. */\n    groupedTextHorizontal: {\n      '&:not(:last-child)': {\n        borderRight: \"1px solid \".concat(theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.23)' : 'rgba(255, 255, 255, 0.23)')\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"text\"` and `orientation=\"vertical\"`. */\n    groupedTextVertical: {\n      '&:not(:last-child)': {\n        borderBottom: \"1px solid \".concat(theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.23)' : 'rgba(255, 255, 255, 0.23)')\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"text\"` and `color=\"primary\"`. */\n    groupedTextPrimary: {\n      '&:not(:last-child)': {\n        borderColor: alpha(theme.palette.primary.main, 0.5)\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"text\"` and `color=\"secondary\"`. */\n    groupedTextSecondary: {\n      '&:not(:last-child)': {\n        borderColor: alpha(theme.palette.secondary.main, 0.5)\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"outlined\"`. */\n    groupedOutlined: {},\n\n    /* Styles applied to the children if `variant=\"outlined\"` and `orientation=\"horizontal\"`. */\n    groupedOutlinedHorizontal: {\n      '&:not(:first-child)': {\n        marginLeft: -1\n      },\n      '&:not(:last-child)': {\n        borderRightColor: 'transparent'\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"outlined\"` and `orientation=\"vertical\"`. */\n    groupedOutlinedVertical: {\n      '&:not(:first-child)': {\n        marginTop: -1\n      },\n      '&:not(:last-child)': {\n        borderBottomColor: 'transparent'\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"outlined\"` and `color=\"primary\"`. */\n    groupedOutlinedPrimary: {\n      '&:hover': {\n        borderColor: theme.palette.primary.main\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"outlined\"` and `color=\"secondary\"`. */\n    groupedOutlinedSecondary: {\n      '&:hover': {\n        borderColor: theme.palette.secondary.main\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"contained\"`. */\n    groupedContained: {\n      boxShadow: 'none'\n    },\n\n    /* Styles applied to the children if `variant=\"contained\"` and `orientation=\"horizontal\"`. */\n    groupedContainedHorizontal: {\n      '&:not(:last-child)': {\n        borderRight: \"1px solid \".concat(theme.palette.grey[400]),\n        '&$disabled': {\n          borderRight: \"1px solid \".concat(theme.palette.action.disabled)\n        }\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"contained\"` and `orientation=\"vertical\"`. */\n    groupedContainedVertical: {\n      '&:not(:last-child)': {\n        borderBottom: \"1px solid \".concat(theme.palette.grey[400]),\n        '&$disabled': {\n          borderBottom: \"1px solid \".concat(theme.palette.action.disabled)\n        }\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"contained\"` and `color=\"primary\"`. */\n    groupedContainedPrimary: {\n      '&:not(:last-child)': {\n        borderColor: theme.palette.primary.dark\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"contained\"` and `color=\"secondary\"`. */\n    groupedContainedSecondary: {\n      '&:not(:last-child)': {\n        borderColor: theme.palette.secondary.dark\n      }\n    }\n  };\n};\nvar ButtonGroup = /*#__PURE__*/React.forwardRef(function ButtonGroup(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'default' : _props$color,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$disableElevati = props.disableElevation,\n      disableElevation = _props$disableElevati === void 0 ? false : _props$disableElevati,\n      _props$disableFocusRi = props.disableFocusRipple,\n      disableFocusRipple = _props$disableFocusRi === void 0 ? false : _props$disableFocusRi,\n      _props$disableRipple = props.disableRipple,\n      disableRipple = _props$disableRipple === void 0 ? false : _props$disableRipple,\n      _props$fullWidth = props.fullWidth,\n      fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth,\n      _props$orientation = props.orientation,\n      orientation = _props$orientation === void 0 ? 'horizontal' : _props$orientation,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'outlined' : _props$variant,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"color\", \"component\", \"disabled\", \"disableElevation\", \"disableFocusRipple\", \"disableRipple\", \"fullWidth\", \"orientation\", \"size\", \"variant\"]);\n\n  var buttonClassName = clsx(classes.grouped, classes[\"grouped\".concat(capitalize(orientation))], classes[\"grouped\".concat(capitalize(variant))], classes[\"grouped\".concat(capitalize(variant)).concat(capitalize(orientation))], classes[\"grouped\".concat(capitalize(variant)).concat(color !== 'default' ? capitalize(color) : '')], disabled && classes.disabled);\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    role: \"group\",\n    className: clsx(classes.root, className, fullWidth && classes.fullWidth, disableElevation && classes.disableElevation, variant === 'contained' && classes.contained, orientation === 'vertical' && classes.vertical),\n    ref: ref\n  }, other), React.Children.map(children, function (child) {\n    if (! /*#__PURE__*/React.isValidElement(child)) {\n      return null;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"Material-UI: The ButtonGroup component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    return /*#__PURE__*/React.cloneElement(child, {\n      className: clsx(buttonClassName, child.props.className),\n      color: child.props.color || color,\n      disabled: child.props.disabled || disabled,\n      disableElevation: child.props.disableElevation || disableElevation,\n      disableFocusRipple: disableFocusRipple,\n      disableRipple: disableRipple,\n      fullWidth: fullWidth,\n      size: child.props.size || size,\n      variant: child.props.variant || variant\n    });\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? ButtonGroup.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the button group.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'inherit', 'primary', 'secondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the buttons will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, no elevation is used.\n   */\n  disableElevation: PropTypes.bool,\n\n  /**\n   * If `true`, the button keyboard focus ripple will be disabled.\n   */\n  disableFocusRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the button ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the buttons will take up the full width of its container.\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * The group orientation (layout flow direction).\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n\n  /**\n   * The size of the button.\n   * `small` is equivalent to the dense button styling.\n   */\n  size: PropTypes.oneOf(['large', 'medium', 'small']),\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['contained', 'outlined', 'text'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiButtonGroup'\n})(ButtonGroup);","\r\n// import \"./style.css\";\r\nimport \"../../../Reports/ProfitLoss/style.css\";\r\nimport { Grid, Paper, Table, TableContainer, TableHead, TableRow, TableCell, Toolbar, TableBody, withStyles, ButtonGroup, Button } from \"@material-ui/core\";\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n// import * as Cactions from \"../../../../../actions/Category/categories\";\r\n//import * as storeActions from \"../../../../../actions/Store/stores\";\r\n// import AddNewCategoryForm from \"./AddNewCategoryForm\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\n//import PeopleOutlineTwoToneIcon from '@material-ui/icons/PeopleOutlineTwoTone';\r\nimport PageHeader from \"../../../Components/PageHeader\";\r\nimport CategoryTwoToneIcon from '@material-ui/icons/CategoryTwoTone';\r\nimport ConfirmDialog from \"../../../Components/controls/ConfirmDialog\";\r\n//import Controls from \"./Controls\";\r\nimport NotListedLocation from '@material-ui/icons/NotListedLocation';\r\n// import * as productActions from \"../../../actions/Products/products\";\r\n// import * as cashSalesActions from \"../../../actions/CashSale/cashSale\";\r\n// import * as creditSalesActions from \"../../../actions/CreditSale/creditSale\";\r\n// import * as TCActions from \"../../../actions/Trucks_Cadetes/Trucks_Cadetes\";\r\nimport Controls from \"../../../Components/controls/Controls\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport { IoCalendarClearSharp } from \"react-icons/io5\";\r\n// import * as Eactions from \"../../../actions/Expenses/expenses\";\r\nimport { DateRangePickerComponent } from '@syncfusion/ej2-react-calendars';\r\n// import * as companyDataActions from \"../../../actions/CompanyData/companyData\";\r\nimport ReactToPrint from 'react-to-print';\r\nimport { useReactToPrint } from 'react-to-print';\r\nimport * as companyDataActions from \"../../../../actions/CompanyData/companyData\";\r\nimport { v4 as uuid } from 'uuid';\r\nimport * as TActions from \"../../../../actions/Tax/tax\";\r\nconst styles = theme => ({\r\n    root: {\r\n        \"& .MuiTableCell-head\": {\r\n            fontSize: \"0.95rem\"\r\n        }\r\n    },\r\n    paper: {\r\n        margin: theme.spacing(-8.9),\r\n        padding: theme.spacing(6)\r\n    },\r\n\r\n    grid: {\r\n        paddingLeft: theme.spacing(2)\r\n    },\r\n    td: {\r\n        textIndent: \"50px\",\r\n    },\r\n    tr: {\r\n        backgroundColor: \"primary\",\r\n        color: \"white\"\r\n    }\r\n\r\n})\r\n\r\n\r\n\r\nconst Invoice = ({ classes, ...props }) => {\r\n    const [invoiceNo, setInvoiceNo] = useState(\"\");\r\n\r\n    let taxRate = \"\";\r\n    let totalVat = 0;\r\n    useEffect(() => {\r\n        var invoNo = \"INV-\" + uuid().substring(0, 8).toUpperCase();\r\n        setInvoiceNo(invoNo);\r\n    }, [props.taxList])\r\n\r\n    var dateRange = \"\";\r\n  var today = new Date();\r\n  var dd = String(today.getDate()).padStart(2, '0');\r\n  var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\r\n  var yyyy = today.getFullYear();\r\n\r\n  today = yyyy + '-' + mm + '-' + dd;\r\n\r\n    const componentRef = useRef();\r\n\r\n    // const getTax = (id,price) => {\r\n    //     const tax = { ...props.taxList.find(x => x.taxId === id) };\r\n    //     // setTaxId(tax.taxId);\r\n    //     if(tax.rate === undefined){\r\n    //         tax.rate = 0;\r\n    //     }\r\n    //     taxRate = tax.rate / 100;\r\n    //     let vat = price * taxRate;\r\n    //     totalVat = totalVat + vat;\r\n    //     console.log(tax.rate);\r\n    // }\r\n    return (\r\n        <>\r\n            <ReactToPrint\r\n                trigger={() => <Controls.Button\r\n                    text=\"Print\"\r\n                    variant=\"outlined\"\r\n                    // startIcon={<AddIcon />}\r\n                    className={classes.newButton}\r\n                // onClick={handlePrint} \r\n                />\r\n                }\r\n                content={() => componentRef.current}\r\n\r\n            />\r\n\r\n\r\n            <div style={{ marginTop: -80 }}>\r\n                <div ref={componentRef} className='p-5'>\r\n                    <header>\r\n\r\n                        <div className=\"logo\">\r\n                        <img src={props.companyDataList[0].logo} alt=\"generic business logo\" height={100} width={100} style={{marginTop:50 }}/>\r\n                            {/* <h5>Company Name</h5> */}\r\n                        </div>\r\n                        <div className=\"invoiceNbr\" style={{ float: 'right' }}>\r\n                            INVOICE\r\n                            <br />\r\n                            {/* <h5> For the period: {props.dateR}</h5> */}\r\n                        </div>\r\n                    </header>\r\n                    <div className=\"fromtop company\">\r\n                        <div className=\"panel\"></div>\r\n                        <div className=\"fromtocontent\">\r\n                            <span style={{ fontSize: 20 }}>{props.companyDataList[0].name}</span><br />\r\n                            <span>Mobile: {props.companyDataList[0].phone}</span><br />\r\n                            <span>Address: {props.companyDataList[0].address}</span><br />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"fromtoInvo to\">\r\n                        {/* <div className=\"panel\">FROM:</div> */}\r\n                        <div className=\"fromtocontent\">\r\n                            <span>Invoice#</span> <span style={{paddingLeft:40}}>{invoiceNo}</span><br />\r\n                            <span>Invoice Date</span><span style={{paddingLeft:22}}>{today}</span><br />\r\n                            <span>Due Date</span> <span style={{paddingLeft:35}}>{today} </span><br />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"fromto from\">\r\n                        <div className=\"panel\">Bill To:</div>\r\n                        <div className=\"fromtocontent\">\r\n                            <span>{props.customerData.name}</span><br />\r\n                            <span>{props.customerData.phone}</span><br />\r\n                            <span>{props.customerData.address}</span>\r\n                        </div>\r\n                    </div>\r\n                    <section >\r\n                        {/* your favorite templating/data-binding library would come in handy here to generate these rows dynamically !*/}\r\n                        <table class=\"table  .table-responsive{-sm|-md|-lg|-xl|-xxl} table-bordered table-hover table-sm table-striped\" >\r\n                            <thead class=\"table-dark\" >\r\n                                <tr >\r\n                                    <th scope=\"col\">Item</th>\r\n                                    <th scope=\"col\">Unit Price</th>\r\n                                    <th scope=\"col\">Quantity</th>\r\n                                    <th scope=\"col\">Discount</th>\r\n                                    <th scope=\"col\">Amount</th>\r\n                                    <th scope=\"col\">VAT</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {props.products.map((product) =>\r\n                                (\r\n                                    \r\n                                    <tr>\r\n                                        \r\n                                        {/* <td>{product.productId}</td> */}\r\n                                        <td>{product.name}</td>\r\n                                        {/* <td>{product.size}</td>\r\n                                                        <td>{product.category}</td> */}\r\n                                        <td>{product.sellingPrice}</td>\r\n                                        <td>{product.quantity}</td>\r\n                                        {/* <td>{product.shells}</td>\r\n                                                        <td>{product.diffShell}</td>\r\n                                                        <td>{product.deposit}</td> */}\r\n                                        <td>{product.discount}</td>\r\n                                        {/* <td>{product.totalPrice}</td> */}\r\n                                        <td>{product.total}</td>\r\n                                        <td>{ parseFloat(product.tax).toFixed(2)}</td>\r\n\r\n                                        {/* <td>\r\n                                                            <ButtonGroup variant=\"text\">\r\n                                                                <Button><EditIcon color=\"primary\"\r\n                                                                // onClick={() => { setCurrentId(record.id) }} \r\n                                                                /></Button>\r\n                                                                <Button><DeleteIcon color=\"Secondary\"\r\n                                                                    onClick={() => {\r\n                                                                        openInDialog()\r\n                                                                        setConfirmDialog({\r\n                                                                            onConfirm: () => { onRemoveProduct(product.productId) }\r\n                                                                        })\r\n\r\n                                                                        // onRemoveProduct(product.productId)\r\n                                                                    }\r\n                                                                    }\r\n\r\n                                                                /></Button>\r\n                                                            </ButtonGroup>\r\n                                                        </td> */}\r\n                                    </tr>\r\n\r\n                                )\r\n\r\n\r\n                                )}\r\n                            </tbody>\r\n                        </table>\r\n                        <div className=\"totals tot\">\r\n                            <div className=\"panel\">Totals</div>\r\n                            <div className=\"fromtocontent\">\r\n                                {/* <span>Total Discount</span>  <span>%</span><br /> */}\r\n                                \r\n\r\n                                <div className=\"panel\"><span >Total    </span>  <span >{props.gTotalPrice}</span></div>\r\n                                <span>Sales Tax </span>  { parseFloat(props.totalTax).toFixed(2)}   <span></span><br />\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                    </section>\r\n                </div>\r\n\r\n\r\n            </div>\r\n        </>\r\n\r\n\r\n    );\r\n}\r\n\r\n//export default staff; \r\n\r\nconst mapStateToProps = state => ({\r\n    //   productsList: state.products.list,\r\n    //   creditSalesList: state.creditSale.list,\r\n    //   tcTransactionsList: state.trucks_cadetes.list,\r\n    //   nSTransactionDeatail: state.cash.list,\r\n    //   salesList: state.cashSale.list,\r\n    //   cSaleDetailsList: state.credit.list,\r\n    //   tcTransDetailsList: state.trucks.list,\r\n    customersList: state.customers.list,\r\n    companyDataList: state.companyData.list,\r\n    taxList: state.tax.list\r\n\r\n})\r\n\r\nconst mapActionToProps = {\r\n\r\n    //   fetchAllProducts: productActions.fetchAllProduct,\r\n    //   fetchAllNSTransactions: cashSalesActions.fetchAllTransactions,\r\n    //   fetchAllTCTransactions: TCActions.fetchAllTransactions,\r\n    //   fetchAllCSTransactions: creditSalesActions.fetchAllTransactions,\r\n    //   fetchAllTransactionDetails: cashSalesActions.fetchAllTransactionDetails,\r\n    //   fetchAllCSTransactionDetails: creditSalesActions.fetchAllTransactionDetails,\r\n    //   fetchAllTCTransactionDetails:TCActions.fetchAllTransactionDetails,\r\n   \r\n    fetchAllCompanyData: companyDataActions.fetchAllCompanyData,\r\n    fetchAllTaxes: TActions.fetchAllTaxes\r\n}\r\n\r\nexport default connect(mapStateToProps, mapActionToProps)(withStyles(styles)(Invoice));\r\n\r\n\r\n\r\n\r\n","import { Dialog, DialogContent, DialogTitle, makeStyles, Typography } from '@material-ui/core';\r\nimport React from 'react';\r\nimport Controls from \"./controls/Controls\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    dialogWrapper: {\r\n        padding: theme.spacing(2),\r\n        position: 'absolute',\r\n        top: theme.spacing(5),\r\n    },\r\n\r\n    DialogTitle:{\r\n        paddingRight:'0px'\r\n    }\r\n}))\r\nexport default function IPopup(props) {\r\n    const { title, children, openIPopup, setOpenIPopup } = props;\r\n    const classes = useStyles();\r\n    return (\r\n        <Dialog open={openIPopup} maxWidth=\"md\" clasess={{ paper: classes.dialogWrapper }}>\r\n            <DialogTitle className = {classes.DialogTitle}>\r\n                <div style={{ display: 'flex' }}>\r\n                    <Typography variant=\"h6\" component=\"div\" style={{ flexGrow: 1 }}>\r\n                        {title}\r\n                    </Typography>\r\n                   <Controls.ActionButton \r\n                   color=\"secondary\"\r\n                   onClick ={() => {setOpenIPopup(false)}}\r\n                   >\r\n                       \r\n                       <CloseIcon />\r\n                   </Controls.ActionButton>\r\n                </div>\r\n            </DialogTitle>\r\n\r\n            <DialogContent dividers>\r\n                {children}\r\n            </DialogContent>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\n","import { Dialog, DialogContent, DialogTitle, makeStyles, Typography } from '@material-ui/core';\r\nimport React from 'react';\r\nimport Controls from \"./controls/Controls\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    dialogWrapper: {\r\n        padding: theme.spacing(2),\r\n        position: 'absolute',\r\n        top: theme.spacing(5),\r\n    },\r\n\r\n    DialogTitle:{\r\n        paddingRight:'0px'\r\n    }\r\n}))\r\nexport default function DlPopup(props) {\r\n    const { title, children, openDlPopup, setOpenDlPopup } = props;\r\n    const classes = useStyles();\r\n    return (\r\n        <Dialog open={openDlPopup} maxWidth=\"md\" clasess={{ paper: classes.dialogWrapper }}>\r\n            <DialogTitle className = {classes.DialogTitle}>\r\n                <div style={{ display: 'flex' }}>\r\n                    <Typography variant=\"h6\" component=\"div\" style={{ flexGrow: 1 }}>\r\n                        {title}\r\n                    </Typography>\r\n                   <Controls.ActionButton \r\n                   color=\"secondary\"\r\n                   onClick ={() => {setOpenDlPopup(false)}}\r\n                   >\r\n                       \r\n                       <CloseIcon />\r\n                   </Controls.ActionButton>\r\n                </div>\r\n            </DialogTitle>\r\n\r\n            <DialogContent dividers>\r\n                {children}\r\n            </DialogContent>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\n","\r\n// import \"./style.css\";\r\nimport \"../../../Reports/ProfitLoss/style.css\";\r\nimport { Grid, Paper, Table, TableContainer, TableHead, TableRow, TableCell, Toolbar, TableBody, withStyles, ButtonGroup, Button } from \"@material-ui/core\";\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n// import * as Cactions from \"../../../../../actions/Category/categories\";\r\n//import * as storeActions from \"../../../../../actions/Store/stores\";\r\n// import AddNewCategoryForm from \"./AddNewCategoryForm\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\n//import PeopleOutlineTwoToneIcon from '@material-ui/icons/PeopleOutlineTwoTone';\r\nimport PageHeader from \"../../PageHeader\";\r\nimport CategoryTwoToneIcon from '@material-ui/icons/CategoryTwoTone';\r\nimport ConfirmDialog from \"../../controls/ConfirmDialog\";\r\n//import Controls from \"./Controls\";\r\nimport NotListedLocation from '@material-ui/icons/NotListedLocation';\r\n// import * as productActions from \"../../../actions/Products/products\";\r\n// import * as cashSalesActions from \"../../../actions/CashSale/cashSale\";\r\n// import * as creditSalesActions from \"../../../actions/CreditSale/creditSale\";\r\n// import * as TCActions from \"../../../actions/Trucks_Cadetes/Trucks_Cadetes\";\r\nimport Controls from \"../../controls/Controls\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport { IoCalendarClearSharp } from \"react-icons/io5\";\r\n// import * as Eactions from \"../../../actions/Expenses/expenses\";\r\nimport { DateRangePickerComponent } from '@syncfusion/ej2-react-calendars';\r\n// import * as companyDataActions from \"../../../actions/CompanyData/companyData\";\r\nimport ReactToPrint from 'react-to-print';\r\nimport { useReactToPrint } from 'react-to-print';\r\nimport * as companyDataActions from \"../../../../actions/CompanyData/companyData\";\r\nimport { v4 as uuid } from 'uuid';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        \"& .MuiTableCell-head\": {\r\n            fontSize: \"0.95rem\"\r\n        }\r\n    },\r\n    paper: {\r\n        margin: theme.spacing(-8.9),\r\n        padding: theme.spacing(6)\r\n    },\r\n\r\n    grid: {\r\n        paddingLeft: theme.spacing(2)\r\n    },\r\n    td: {\r\n        textIndent: \"50px\",\r\n    },\r\n    tr: {\r\n        backgroundColor: \"primary\",\r\n        color: \"white\"\r\n    }\r\n\r\n})\r\n\r\n\r\n\r\nconst DeliveryNote = ({ classes, ...props }) => {\r\n    const [invoiceNo, setInvoiceNo] = useState(\"\");\r\n\r\n\r\n    useEffect(() => {\r\n        var invoNo = \"Dl-\" + uuid().substring(0, 8).toUpperCase();\r\n        setInvoiceNo(invoNo);\r\n    }, [])\r\n\r\n    var dateRange = \"\";\r\n    var today = new Date();\r\n    var dd = String(today.getDate()).padStart(2, '0');\r\n    var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\r\n    var yyyy = today.getFullYear();\r\n\r\n    today = yyyy + '-' + mm + '-' + dd;\r\n\r\n    const componentRef = useRef();\r\n    return (\r\n        <>\r\n            <ReactToPrint\r\n                trigger={() => <Controls.Button\r\n                    text=\"Print\"\r\n                    variant=\"outlined\"\r\n                    // startIcon={<AddIcon />}\r\n                    className={classes.newButton}\r\n                // onClick={handlePrint} \r\n                />\r\n                }\r\n                content={() => componentRef.current}\r\n\r\n            />\r\n\r\n\r\n            <div style={{ marginTop: -80 }}>\r\n                <div ref={componentRef} className='p-5'>\r\n                    <header>\r\n\r\n                        <div className=\"logo\">\r\n                            <img src={props.companyDataList[0].logo} alt=\"generic business logo\" height={100} width={100} style={{marginTop:50 }}/>\r\n                            {/* <h5>Company Name</h5> */}\r\n                        </div>\r\n                        <div className=\"invoiceNbr\" style={{ float: 'right' }}>\r\n                            DELIVERY NOTE\r\n                            <br />\r\n                            {/* <h5> For the period: {props.dateR}</h5> */}\r\n                        </div>\r\n                    </header>\r\n                    <div className=\"fromtop company\">\r\n                        <div className=\"panel\"></div>\r\n                        <div className=\"fromtocontent\">\r\n                            <span style={{ fontSize: 20 }}>{props.companyDataList[0].name}</span><br />\r\n                            <span>Mobile: {props.companyDataList[0].phone}</span><br />\r\n                            <span>Address: {props.companyDataList[0].address}</span><br />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"fromtoInvo to\">\r\n                        {/* <div className=\"panel\">FROM:</div> */}\r\n                        <div className=\"fromtocontent\">\r\n                            <span>#</span> <span style={{ paddingLeft: 40 }}>{invoiceNo}</span><br />\r\n                            <span>Date</span><span style={{ paddingLeft: 22 }}>{today}</span><br />\r\n                            {/* <span>Due Date</span> <span style={{ paddingLeft: 35 }}>{today} </span><br /> */}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"fromto from\">\r\n                        <div className=\"panel\">Deliver To:</div>\r\n                        <div className=\"fromtocontent\">\r\n                            <span>{props.customerData.name}</span><br />\r\n                            <span>{props.customerData.phone}</span><br />\r\n                            <span>{props.customerData.address}</span>\r\n                        </div>\r\n                    </div>\r\n                    <section >\r\n                        {/* your favorite templating/data-binding library would come in handy here to generate these rows dynamically !*/}\r\n                        <table class=\"table  .table-responsive{-sm|-md|-lg|-xl|-xxl} table-bordered table-hover table-sm table-striped\" >\r\n                            <thead class=\"table-dark\" >\r\n                                <tr >\r\n                                    <th scope=\"col\">Item</th>\r\n                                    <th scope=\"col\">Unit Price</th>\r\n                                    <th scope=\"col\">Quantity</th>\r\n                                    <th scope=\"col\">Discount</th>\r\n                                    <th scope=\"col\">Amount</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {props.products.map((product) =>\r\n                                (\r\n                                    <tr>\r\n                                        {/* <td>{product.productId}</td> */}\r\n                                        <td>{product.name}</td>\r\n                                        {/* <td>{product.size}</td>\r\n                                                        <td>{product.category}</td> */}\r\n                                        <td>{product.sellingPrice}</td>\r\n                                        <td>{product.quantity}</td>\r\n                                        {/* <td>{product.shells}</td>\r\n                                                        <td>{product.diffShell}</td>\r\n                                                        <td>{product.deposit}</td> */}\r\n                                        <td>{product.discount}</td>\r\n                                        {/* <td>{product.totalPrice}</td> */}\r\n                                        <td>{product.total}</td>\r\n\r\n\r\n                                        {/* <td>\r\n                                                            <ButtonGroup variant=\"text\">\r\n                                                                <Button><EditIcon color=\"primary\"\r\n                                                                // onClick={() => { setCurrentId(record.id) }} \r\n                                                                /></Button>\r\n                                                                <Button><DeleteIcon color=\"Secondary\"\r\n                                                                    onClick={() => {\r\n                                                                        openInDialog()\r\n                                                                        setConfirmDialog({\r\n                                                                            onConfirm: () => { onRemoveProduct(product.productId) }\r\n                                                                        })\r\n\r\n                                                                        // onRemoveProduct(product.productId)\r\n                                                                    }\r\n                                                                    }\r\n\r\n                                                                /></Button>\r\n                                                            </ButtonGroup>\r\n                                                        </td> */}\r\n                                    </tr>\r\n\r\n                                )\r\n\r\n\r\n                                )}\r\n                            </tbody>\r\n                        </table>\r\n                        <div className=\"totals tot\">\r\n                            <div className=\"panel\">Totals</div>\r\n                            <div className=\"fromtocontent\">\r\n                                {/* <span>Total Discount</span>  <span>%</span><br /> */}\r\n                                <span>Sale Tax</span>     <span></span><br />\r\n\r\n                                <div className=\"panel\"><span >Total</span>  <span >{props.gTotalPrice}</span></div>\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div>\r\n                            <div>\r\n                                <p style={{ textAlign: 'center', margin: 50 }}>\r\n                                    Notice must be given to us of any goods not received within 10 days taken from the date of despatch stated on invoice.\r\n                                    Any Shortage or damage must be notified within 72 hours of receipt of goods.\r\n                                    Complaints can only be accepted if made in writing within 30 days of receipt of goods.\r\n                                    No goods may be returned without prior authorisation from company\r\n                                </p>\r\n                                <p style={{ textAlign: 'center' }}>\r\n                                    Thank you for your business!\r\n                                </p>\r\n                                <p style={{ textAlign: 'center' }}>\r\n                                    Should you have any enquiries concerning this delivery note, please contact us on {props.companyDataList[0].phone}\r\n                                </p>\r\n                                <p style={{ textAlign: 'center' }}>\r\n                                Address:{props.companyDataList[0].address}-\r\n                                    Tel:{props.companyDataList[0].phone}\r\n                                    E-mail: info@yourcompanysite.com Web: www.yourcompanysite.com\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                    </section>\r\n                </div>\r\n\r\n\r\n            </div>\r\n        </>\r\n\r\n\r\n    );\r\n}\r\n\r\n//export default staff; \r\n\r\nconst mapStateToProps = state => ({\r\n    //   productsList: state.products.list,\r\n    //   creditSalesList: state.creditSale.list,\r\n    //   tcTransactionsList: state.trucks_cadetes.list,\r\n    //   nSTransactionDeatail: state.cash.list,\r\n    //   salesList: state.cashSale.list,\r\n    //   cSaleDetailsList: state.credit.list,\r\n    //   tcTransDetailsList: state.trucks.list,\r\n    customersList: state.customers.list,\r\n    companyDataList: state.companyData.list,\r\n})\r\n\r\nconst mapActionToProps = {\r\n\r\n    //   fetchAllProducts: productActions.fetchAllProduct,\r\n    //   fetchAllNSTransactions: cashSalesActions.fetchAllTransactions,\r\n    //   fetchAllTCTransactions: TCActions.fetchAllTransactions,\r\n    //   fetchAllCSTransactions: creditSalesActions.fetchAllTransactions,\r\n    //   fetchAllTransactionDetails: cashSalesActions.fetchAllTransactionDetails,\r\n    //   fetchAllCSTransactionDetails: creditSalesActions.fetchAllTransactionDetails,\r\n    //   fetchAllTCTransactionDetails:TCActions.fetchAllTransactionDetails,\r\n\r\n    fetchAllCompanyData: companyDataActions.fetchAllCompanyData,\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, mapActionToProps)(withStyles(styles)(DeliveryNote));\r\n\r\n\r\n\r\n\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 00-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'Edit');\n\nexports.default = _default;"],"sourceRoot":""}