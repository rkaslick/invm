{"version":3,"sources":["../node_modules/@material-ui/core/esm/ButtonGroup/ButtonGroup.js","../node_modules/@material-ui/icons/PersonAddSharp.js","views/Components/Forms/Investors/AddInvestors/AddNewInvestorForm.js","../node_modules/@material-ui/icons/Delete.js","../node_modules/@material-ui/icons/Edit.js","views/Components/Forms/Investors/AddInvestors/AddNewInvestor.js"],"names":["Button","styles","ButtonGroup","React","props","ref","children","classes","className","_props$color","color","_props$component","component","Component","_props$disabled","disabled","_props$disableElevati","disableElevation","_props$disableFocusRi","disableFocusRipple","_props$disableRipple","disableRipple","_props$fullWidth","fullWidth","_props$orientation","orientation","_props$size","size","_props$variant","variant","other","_objectWithoutProperties","buttonClassName","clsx","grouped","concat","capitalize","_extends","role","root","contained","vertical","map","child","withStyles","theme","display","borderRadius","shape","boxShadow","shadows","width","flexDirection","minWidth","groupedHorizontal","borderTopLeftRadius","borderBottomLeftRadius","borderTopRightRadius","borderBottomRightRadius","groupedVertical","groupedText","groupedTextHorizontal","borderRight","palette","type","groupedTextVertical","borderBottom","groupedTextPrimary","borderColor","alpha","primary","main","groupedTextSecondary","secondary","groupedOutlined","groupedOutlinedHorizontal","marginLeft","borderRightColor","groupedOutlinedVertical","marginTop","borderBottomColor","groupedOutlinedPrimary","groupedOutlinedSecondary","groupedContained","groupedContainedHorizontal","grey","action","groupedContainedVertical","groupedContainedPrimary","dark","groupedContainedSecondary","name","_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","value","default","_default","createElement","d","initialFieldValues","fName","sName","lName","mobile","email","address","uName","password","userLevelId","cPswd","mapActionToProps","createStaff","actions","updateStaff","fetchAllUserLevel","userLevelActions","fetchAllInvestors","connect","state","investorsList","addStaff","list","userLevelList","userLevel","margin","spacing","formControl","smMargin","_ref","_excluded","addToast","useToasts","validate","fieldValues","arguments","length","undefined","values","temp","_objectSpread","errors","test","storeId","setErrors","every","x","_useForm","useForm","setCurrentId","_useForm2","_slicedToArray","setValues","handleInputChange","resetForm","useEffect","currentId","find","id","_jsx","_jsxs","autoComplete","noValidate","onSubmit","e","preventDefault","onSuccess","appearance","openPopup","setOpenPopup","TextField","label","InputLabelProps","startAdornment","InputAdornment","position","AccountCircle","onChange","error","helperText","Mobile","FormControl","InputLabel","Select","MenuItem","record","index","level","FormHelperText","onClick","style","deleteStaff","fontSize","paper","padding","grid","paddingLeft","_useState","useState","_useState2","_useState3","_useState4","confirmDialog","setConfirmDialog","showToast","_Fragment","PageHeader","title","icon","PeopleOutlineTwoToneIcon","Paper","elevation","AddNewInvestorForm","class","scope","hover","EditIcon","DeleteIcon","onConfirm","ConfirmDialog","subTitle"],"mappings":"wGAAA,0EAYAA,EAAOC,OACA,IAwKHC,EAA2BC,cAAiB,SAAqBC,EAAOC,GAC1E,IAAIC,EAAWF,EAAME,SACjBC,EAAUH,EAAMG,QAChBC,EAAYJ,EAAMI,UAClBC,EAAeL,EAAMM,MACrBA,OAAyB,IAAjBD,EAA0B,UAAYA,EAC9CE,EAAmBP,EAAMQ,UACzBC,OAAiC,IAArBF,EAA8B,MAAQA,EAClDG,EAAkBV,EAAMW,SACxBA,OAA+B,IAApBD,GAAqCA,EAChDE,EAAwBZ,EAAMa,iBAC9BA,OAA6C,IAA1BD,GAA2CA,EAC9DE,EAAwBd,EAAMe,mBAC9BA,OAA+C,IAA1BD,GAA2CA,EAChEE,EAAuBhB,EAAMiB,cAC7BA,OAAyC,IAAzBD,GAA0CA,EAC1DE,EAAmBlB,EAAMmB,UACzBA,OAAiC,IAArBD,GAAsCA,EAClDE,EAAqBpB,EAAMqB,YAC3BA,OAAqC,IAAvBD,EAAgC,aAAeA,EAC7DE,EAActB,EAAMuB,KACpBA,OAAuB,IAAhBD,EAAyB,SAAWA,EAC3CE,EAAiBxB,EAAMyB,QACvBA,OAA6B,IAAnBD,EAA4B,WAAaA,EACnDE,EAAQC,YAAyB3B,EAAO,CAAC,WAAY,UAAW,YAAa,QAAS,YAAa,WAAY,mBAAoB,qBAAsB,gBAAiB,YAAa,cAAe,OAAQ,YAE9M4B,EAAkBC,YAAK1B,EAAQ2B,QAAS3B,EAAQ,UAAU4B,OAAOC,YAAWX,KAAgBlB,EAAQ,UAAU4B,OAAOC,YAAWP,KAAYtB,EAAQ,UAAU4B,OAAOC,YAAWP,IAAUM,OAAOC,YAAWX,KAAgBlB,EAAQ,UAAU4B,OAAOC,YAAWP,IAAUM,OAAiB,YAAVzB,EAAsB0B,YAAW1B,GAAS,KAAMK,GAAYR,EAAQQ,UACzV,OAAoBZ,gBAAoBU,EAAWwB,YAAS,CAC1DC,KAAM,QACN9B,UAAWyB,YAAK1B,EAAQgC,KAAM/B,EAAWe,GAAahB,EAAQgB,UAAWN,GAAoBV,EAAQU,iBAA8B,cAAZY,GAA2BtB,EAAQiC,UAA2B,aAAhBf,GAA8BlB,EAAQkC,UAC3MpC,IAAKA,GACJyB,GAAQ3B,WAAeuC,IAAIpC,GAAU,SAAUqC,GAChD,OAAmBxC,iBAAqBwC,GAUpBxC,eAAmBwC,EAAO,CAC5CnC,UAAWyB,YAAKD,EAAiBW,EAAMvC,MAAMI,WAC7CE,MAAOiC,EAAMvC,MAAMM,OAASA,EAC5BK,SAAU4B,EAAMvC,MAAMW,UAAYA,EAClCE,iBAAkB0B,EAAMvC,MAAMa,kBAAoBA,EAClDE,mBAAoBA,EACpBE,cAAeA,EACfE,UAAWA,EACXI,KAAMgB,EAAMvC,MAAMuB,MAAQA,EAC1BE,QAASc,EAAMvC,MAAMyB,SAAWA,IAlBzB,IAoBX,IACF,IA6Eee,iBA3SK,SAAgBC,GAClC,MAAO,CAELN,KAAM,CACJO,QAAS,cACTC,aAAcF,EAAMG,MAAMD,cAI5BP,UAAW,CACTS,UAAWJ,EAAMK,QAAQ,IAI3BjC,iBAAkB,CAChBgC,UAAW,QAIblC,SAAU,CAAC,EAGXQ,UAAW,CACT4B,MAAO,QAITV,SAAU,CACRW,cAAe,UAIjBlB,QAAS,CACPmB,SAAU,IAIZC,kBAAmB,CACjB,sBAAuB,CACrBC,oBAAqB,EACrBC,uBAAwB,GAE1B,qBAAsB,CACpBC,qBAAsB,EACtBC,wBAAyB,IAK7BC,gBAAiB,CACf,sBAAuB,CACrBF,qBAAsB,EACtBF,oBAAqB,GAEvB,qBAAsB,CACpBG,wBAAyB,EACzBF,uBAAwB,IAK5BI,YAAa,CAAC,EAGdC,sBAAuB,CACrB,qBAAsB,CACpBC,YAAa,aAAa3B,OAA8B,UAAvBU,EAAMkB,QAAQC,KAAmB,sBAAwB,+BAK9FC,oBAAqB,CACnB,qBAAsB,CACpBC,aAAc,aAAa/B,OAA8B,UAAvBU,EAAMkB,QAAQC,KAAmB,sBAAwB,+BAK/FG,mBAAoB,CAClB,qBAAsB,CACpBC,YAAaC,YAAMxB,EAAMkB,QAAQO,QAAQC,KAAM,MAKnDC,qBAAsB,CACpB,qBAAsB,CACpBJ,YAAaC,YAAMxB,EAAMkB,QAAQU,UAAUF,KAAM,MAKrDG,gBAAiB,CAAC,EAGlBC,0BAA2B,CACzB,sBAAuB,CACrBC,YAAa,GAEf,qBAAsB,CACpBC,iBAAkB,gBAKtBC,wBAAyB,CACvB,sBAAuB,CACrBC,WAAY,GAEd,qBAAsB,CACpBC,kBAAmB,gBAKvBC,uBAAwB,CACtB,UAAW,CACTb,YAAavB,EAAMkB,QAAQO,QAAQC,OAKvCW,yBAA0B,CACxB,UAAW,CACTd,YAAavB,EAAMkB,QAAQU,UAAUF,OAKzCY,iBAAkB,CAChBlC,UAAW,QAIbmC,2BAA4B,CAC1B,qBAAsB,CACpBtB,YAAa,aAAa3B,OAAOU,EAAMkB,QAAQsB,KAAK,MACpD,aAAc,CACZvB,YAAa,aAAa3B,OAAOU,EAAMkB,QAAQuB,OAAOvE,aAM5DwE,yBAA0B,CACxB,qBAAsB,CACpBrB,aAAc,aAAa/B,OAAOU,EAAMkB,QAAQsB,KAAK,MACrD,aAAc,CACZnB,aAAc,aAAa/B,OAAOU,EAAMkB,QAAQuB,OAAOvE,aAM7DyE,wBAAyB,CACvB,qBAAsB,CACpBpB,YAAavB,EAAMkB,QAAQO,QAAQmB,OAKvCC,0BAA2B,CACzB,qBAAsB,CACpBtB,YAAavB,EAAMkB,QAAQU,UAAUgB,OAI7C,GAoIkC,CAChCE,KAAM,kBADO/C,CAEZ1C,E,oCCxTH,IAAI0F,EAAyBC,EAAQ,KAEjCC,EAA0BD,EAAQ,KAEtCE,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQE,aAAU,EAElB,IAAIhG,EAAQ2F,EAAwBD,EAAQ,IAIxCO,GAAW,EAFMR,EAAuBC,EAAQ,MAElBM,SAAuBhG,EAAMkG,cAAc,OAAQ,CACnFC,EAAG,kJACD,kBAEJL,EAAQE,QAAUC,C,oPCeZG,EAAqB,CAEvBC,MAAO,GACPC,MAAO,GACPC,MAAO,GACPC,OAAQ,GACRC,MAAO,GACPC,QAAS,GACTC,MAAO,GACPC,SAAU,GACVC,YAAa,GAEbC,MAAO,IAuTLC,EAAmB,CACrBC,YAAaC,IACbC,YAAaD,IACbE,kBAAmBC,IACnBC,kBAAmBJ,KAGRK,iBAdS,SAAAC,GAAK,MAAK,CAC9BC,cAAeD,EAAME,SAASC,KAC9BC,cAAeJ,EAAMK,UAAUF,KAClC,GAWuCX,EAAzBO,CAA2C7E,aA5V3C,SAAAC,GAAK,MAAK,CACrBN,KAAM,CACF,uBAAwB,CACpByF,OAAQnF,EAAMoF,QAAQ,GACtB5E,SAAU,MAIlB6E,YAAa,CACTF,OAAQnF,EAAMoF,QAAQ,GACtB5E,SAAU,KAEd8E,SAAU,CACNH,OAAQnF,EAAMoF,QAAQ,IAG7B,GA4UyDrF,EArTlC,SAAHwF,GAA+B,IAAzB7H,EAAO6H,EAAP7H,QAAYH,EAAK2B,YAAAqG,EAAAC,GAIhCC,EAAaC,sBAAbD,SAGFE,EAAW,WAA2B,IAA1BC,EAAWC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAGG,EACxBC,EAAIC,YAAA,GAAQC,GAoDhB,GAnDI,UAAWP,IACXK,EAAKtC,MAAQiC,EAAYjC,MAAQ,GAAK,0BAMtC,UAAWiC,IACXK,EAAKrC,MAAQgC,EAAYhC,MAAQ,GAAK,0BAItC,UAAWgC,IACXK,EAAKpC,MAAQ+B,EAAY/B,MAAQ,GAAK,0BAItC,UAAW+B,GACO,KAAdK,EAAKlC,QACLkC,EAAKlC,MAAS,cAAeqC,KAAKR,EAAY7B,OAAS,GAAK,sBAGhE,WAAY6B,IACZK,EAAKnC,OAAS8B,EAAY9B,OAAS,GAAK,0BAExC,YAAa8B,IACbK,EAAKjC,QAAU4B,EAAY5B,QAAU,GAAK,0BAE1C,gBAAiB4B,IACjBK,EAAK9B,YAAcyB,EAAYzB,YAAc,GAAK,0BAElD,YAAayB,IACbK,EAAKI,QAAUT,EAAYS,QAAU,GAAK,0BAE1C,UAAWT,IACXK,EAAKhC,MAAQ2B,EAAY3B,MAAQ,GAAK,0BAEtC,aAAc2B,IACdK,EAAK/B,SAAW0B,EAAY1B,SAAW,GAAK,0BAE5C,UAAW0B,IACXK,EAAK7B,MAAQwB,EAAYxB,MAAQ,GAAK,0BAO1CkC,EAASJ,YAAC,CAAC,EACJD,IAEHL,GAAeI,EACf,OAAO9C,OAAO8C,OAAOC,GAAMM,OAAM,SAAAC,GAAC,MAAS,IAALA,CAAO,GAIrD,EAEAC,EAOIC,YAAQhD,EAAoBiC,EAAUpI,EAAMoJ,cAAaC,EAAAC,YAAAJ,EAAA,GANzDT,EAAMY,EAAA,GACNE,EAASF,EAAA,GACTT,EAAMS,EAAA,GACNN,EAASM,EAAA,GACTG,EAAiBH,EAAA,GACjBI,EAASJ,EAAA,GAoEb,OAlBAK,qBAAU,WAGiB,GAAnB1J,EAAM2J,WACNJ,EAASZ,YAAC,CAAC,EACJ3I,EAAMuH,cAAcqC,MAAK,SAAAX,GAAC,OAAIA,EAAEY,IAAM7J,EAAM2J,SAAS,MAEhEZ,EAAU,CAAC,GACX/I,EAAMkH,mBAIV,GAAG,CAAClH,EAAM2J,YASNG,cAAA,WAAS1J,UAAU,UAASF,SACxB4J,cAAA,OAAK1J,UAAU,kBAAiBF,SAC5B6J,eAAA,OAAK3J,UAAU,MAAKF,SAAA,CAEhB4J,cAAA,OAAK1J,UAAU,YAAWF,SAEtB6J,eAAA,OAAK3J,UAAU,oBAAmBF,SAAA,CAC9B4J,cAAA,OAAK1J,UAAU,cAAaF,SACxB6J,eAAA,MAAI3J,UAAU,aAAYF,SAAA,CAAC,gBAAa4J,cAAA,SAAA5J,SAAO,wBAInD6J,eAAA,QAAMF,GAAG,YAAYG,aAAa,MAAMC,YAAU,EAAC7J,UAAWD,EAAQgC,KAAM+H,SAvE/E,SAAAC,GAIjB,GAHAA,EAAEC,iBAGEhC,IAAY,CAEZ,IAAMiC,EAAY,WACdZ,IAfRvB,EAAS,8BAA+B,CAAEoC,WAAY,YACtDpC,EAAS,8BAA+B,CAAEoC,WAAY,YACtDpC,EAAS,8BAA+B,CAAEoC,WAAY,YACtDtK,EAAMoH,mBAeF,EAIuB,GAAnBpH,EAAM2J,UAIN3J,EAAM+G,YAAY0B,EAAQ4B,GAQ1BrK,EAAMiH,YAAYjH,EAAM2J,UAAWlB,EAAQ4B,GAGxB,GAAnBrK,EAAMuK,WACNvK,EAAMwK,cAAa,EAG3B,CAGJ,EAmC2HtK,SAAA,CAE/F4J,cAACW,IAAS9B,YAAA,CACNvI,UAAU,WACVyJ,GAAG,4BACHpI,QAAQ,WACRmC,KAAK,OACL2B,KAAK,QACLmF,MAAM,aACNC,gBAAiB,CACbC,eACId,cAACe,IAAc,CAACC,SAAS,QAAO5K,SAC5B4J,cAACiB,IAAa,OAI1BjF,MAAO2C,EAAOrC,MACd4E,SAAUxB,GACLZ,EAAOxC,OAAS,CAAE6E,OAAO,EAAMC,WAAYtC,EAAOxC,SAG3D0D,cAACW,IAAS9B,YAAA,CAACvI,UAAU,WAAWmF,KAAK,QAAQmF,MAAM,cAAc5E,MAAO2C,EAAOpC,MAC3E2E,SAAUxB,EACV/H,QAAQ,YACFmH,EAAOvC,OAAS,CAAE4E,OAAO,EAAMC,WAAYtC,EAAOvC,SAG5DyD,cAACW,IAAS9B,YAAA,CAACvI,UAAU,WAAWmF,KAAK,QAAQmF,MAAM,YAAY5E,MAAO2C,EAAOnC,MACzE0E,SAAUxB,EACV/H,QAAQ,YAEFmH,EAAOtC,OAAS,CAAE2E,OAAO,EAAMC,WAAYtC,EAAOtC,SAG5DwD,cAACW,IAAS9B,YAAA,CACNvI,UAAU,WACVmF,KAAK,QACLmF,MAAM,QAAQ9G,KAAK,QAAQkC,MAAO2C,EAAOjC,MACzCwE,SAAUxB,EACV/H,QAAQ,YAEHmH,EAAOpC,OAAS,CAAEyE,OAAO,EAAMC,WAAYtC,EAAOpC,SAG3DsD,cAACW,IAAS9B,YAAA,CAACvI,UAAU,WAAWmF,KAAK,SAASmF,MAAM,SAAS5E,MAAO2C,EAAOlC,OACvEyE,SAAUxB,EACV/H,QAAQ,YAEFmH,EAAOrC,QAAU,CAAE0E,OAAO,EAAMC,WAAYtC,EAAOuC,UAG7DrB,cAACW,IAAS9B,YAAA,CAACvI,UAAU,WAAWmF,KAAK,UAAUmF,MAAM,UAAU5E,MAAO2C,EAAOhC,QACzEuE,SAAUxB,EACV/H,QAAQ,YAEFmH,EAAOnC,SAAW,CAAEwE,OAAO,EAAMC,WAAYtC,EAAOnC,WAI9DsD,eAACqB,IAAWzC,wBAAA,CAACvI,UAAWD,EAAQ2H,aACvBc,EAAOhC,aAAe,CAAEqE,OAAO,IAAM,IAAA/K,SAAA,CAE1C4J,cAACuB,IAAU,CAAAnL,SAAE,iBACb6J,eAACuB,IAAM,CACHlL,UAAU,WACVmF,KAAK,cACLmF,MAAM,eACN5E,MAAO2C,EAAO7B,YACdoE,SAAUxB,EACV/H,QAAQ,WAAUvB,SAAA,CAGlB4J,cAACyB,IAAQ,CAACzF,MAAM,GAAE5F,SAAC,wBAEfF,EAAM0H,cAAcpF,KAAI,SAACkJ,EAAQC,GAC7B,OACI3B,cAACyB,IAAQ,CAACzF,MAAO0F,EAAO3B,GAAG3J,SAAEsL,EAAOE,OAG5C,OAGP9C,EAAOhC,aAAekD,cAAC6B,IAAc,CAAAzL,SAAE0I,EAAOhC,kBAGnDkD,cAACW,IAAS9B,YAAA,CAACvI,UAAU,WAAWmF,KAAK,QAAQmF,MAAM,YAAY5E,MAAO2C,EAAO/B,MACzEsE,SAAUxB,EACV/H,QAAQ,YAEFmH,EAAOlC,OAAS,CAAEuE,OAAO,EAAMC,WAAYtC,EAAOlC,SAG5DoD,cAACW,IAAS9B,YAAA,CAACvI,UAAU,WAAWmF,KAAK,WAAWmF,MAAM,WAAW9G,KAAK,WAAWkC,MAAO2C,EAAO9B,SAC3FqE,SAAUxB,EACV/H,QAAQ,YAEFmH,EAAOjC,UAAY,CAAEsE,OAAO,EAAMC,WAAYtC,EAAOjC,YAG/DmD,cAACW,IAAS9B,YAAA,CAACvI,UAAU,WAAWmF,KAAK,QAAQmF,MAAM,mBAAmB9G,KAAK,WAAWkC,MAAO2C,EAAO5B,MAChGmE,SAAUxB,EACV/H,QAAQ,YAGFmH,EAAO/B,OAAS,CAAEoE,OAAO,EAAMC,WAAYtC,EAAO/B,SAM5DiD,cAAA,OAAK1J,UAAU,cAAaF,SACxB6J,eAAA,OAAA7J,SAAA,CACI4J,cAAA,UAAQlG,KAAK,SAASxD,UAAU,kBAAiBF,SAAE,SACnD4J,cAAA,UAAQrI,QAAQ,YACZrB,UAAU,oBACVwL,QAASnC,EAAWoC,MAAO,CAAErH,WAAY,GAAItE,SAAC,uBAYtE4J,cAAA,OAAK1J,UAAU,mBASnC,I,mCCzVA,IAAIoF,EAAyBC,EAAQ,KAEjCC,EAA0BD,EAAQ,KAEtCE,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQE,aAAU,EAElB,IAAIhG,EAAQ2F,EAAwBD,EAAQ,IAIxCO,GAAW,EAFMR,EAAuBC,EAAQ,MAElBM,SAAuBhG,EAAMkG,cAAc,OAAQ,CACnFC,EAAG,kFACD,UAEJL,EAAQE,QAAUC,C,mCCjBlB,IAAIR,EAAyBC,EAAQ,KAEjCC,EAA0BD,EAAQ,KAEtCE,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQE,aAAU,EAElB,IAAIhG,EAAQ2F,EAAwBD,EAAQ,IAIxCO,GAAW,EAFMR,EAAuBC,EAAQ,MAElBM,SAAuBhG,EAAMkG,cAAc,OAAQ,CACnFC,EAAG,wJACD,QAEJL,EAAQE,QAAUC,C,2OCsIZc,EAAmB,CACrBM,kBAAmBJ,IACnB8E,YAAa9E,KAIFK,uBAXS,SAAAC,GAAK,MAAK,CAC9BC,cAAeD,EAAME,SAASC,KAEjC,GAQuCX,EAAzBO,CAA2C7E,aA9I3C,SAAAC,GAAK,MAAK,CACrBN,KAAM,CACF,uBAAwB,CACpB4J,SAAU,YAGlBC,MAAO,CACHpE,OAAQnF,EAAMoF,SAAS,KACvBoE,QAASxJ,EAAMoF,QAAQ,IAG3BqE,KAAK,CACDC,YAAa1J,EAAMoF,QAAQ,IAElC,GAgIyDrF,EA5HtC,SAAHwF,GAA+B,IAAzB7H,EAAO6H,EAAP7H,QAAYH,EAAK2B,YAAAqG,EAAAC,GAE5BC,EAAaC,sBAAbD,SACRkE,EAAkCC,mBAAS,GAAEC,EAAAhD,YAAA8C,EAAA,GAAtCzC,EAAS2C,EAAA,GAAElD,EAAYkD,EAAA,GAC9BC,EAA0CF,oBAAS,GAAMG,EAAAlD,YAAAiD,EAAA,GAAlDE,EAAaD,EAAA,GAAEE,EAAgBF,EAAA,GACtC9C,qBAAU,WACN1J,EAAMoH,mBAEV,GAAG,IAEH,IAAMuF,EAAW,WACbzE,EAAS,iCAAkC,CAAEoC,WAAY,UACzDpC,EAAS,iCAAkC,CAAEoC,WAAY,UACzDpC,EAAS,iCAAkC,CAAEoC,WAAY,SAE7D,EAUA,OACKP,eAAA6C,WAAA,CAAA1M,SAAA,CACA4J,cAAC+C,IAAU,CACJC,MAAM,YAENC,KAAMjD,cAACkD,IAAwB,CAACjB,SAAS,YAC1C,IACNhC,eAACkD,IAAK,CAAC7M,UAAWD,EAAQ6L,MAAOkB,UAAW,EAAEhN,SAAA,CAGnC4J,cAACqD,IAAkB,CAAQxD,YAAWP,iBAEtCU,cAAA,OAAK1J,UAAWD,EAAQ+L,KAAKhM,SAC7B6J,eAAA,SAAOqD,MAAM,mGAAkGlN,SAAA,CAC3G4J,cAAA,SAAOsD,MAAM,aAAYlN,SACrB6J,eAAA,MAAA7J,SAAA,CACI4J,cAAA,MAAIuD,MAAM,MAAKnN,SAAC,OAChB4J,cAAA,MAAIuD,MAAM,MAAKnN,SAAC,SAChB4J,cAAA,MAAIuD,MAAM,MAAKnN,SAAC,UAChB4J,cAAA,MAAIuD,MAAM,MAAKnN,SAAC,WAChB4J,cAAA,MAAIuD,MAAM,MAAKnN,SAAC,YAEhB4J,cAAA,MAAIuD,MAAM,MAAKnN,SAAC,iBAChB4J,cAAA,MAAIuD,MAAM,MAAKnN,SAAC,cAChB4J,cAAA,cAGRA,cAAA,SAAA5J,SAQaF,EAAMuH,cAAcjF,KAAI,SAACkJ,EAAQC,GAC7B,OAAS1B,eAAA,MAAkBuD,OAAK,EAAApN,SAAA,CAC5B4J,cAAA,MAAA5J,SAAKsL,EAAO3B,KACZC,cAAA,MAAA5J,SAAKsL,EAAOpF,MAAQ,IAAKoF,EAAOnF,MAAQ,IAAMmF,EAAOlF,QACrDwD,cAAA,MAAA5J,SAAKsL,EAAOhF,QACZsD,cAAA,MAAA5J,SAAKsL,EAAOjF,SACZuD,cAAA,MAAA5J,SAAKsL,EAAO/E,UACZqD,cAAA,MAAA5J,SAAKsL,EAAO7D,YACZmC,cAAA,MAAA5J,SAAKsL,EAAO9E,QAEZoD,cAAA,MAAA5J,SACI6J,eAACjK,IAAW,CAAC2B,QAAS,OAAMvB,SAAA,CACzB4J,cAAClK,IAAM,CAAAM,SAAC4J,cAACyD,IAAQ,CAACjN,MAAM,UACxBsL,QAAS,WAAKxC,EAAaoC,EAAO3B,GAAG,MACrCC,cAAClK,IAAM,CAAAM,SAAC4J,cAAC0D,IAAU,CAAClN,MAAM,YACxBsL,QAAS,WArDvDc,GAAiB,GAuD+BA,EAAiB,CACbe,UAAW,WA9DlD,IAAA5D,IA8DiE2B,EAAO3B,GA7DjF7J,EAAM8L,YAAYjC,EAAI8C,GACtBD,GAAiB,EA4DmE,GAI5C,aArBSjB,EA8BxB,cAU7B3B,cAAC4D,IAAa,CACVZ,MAAM,+CACNa,SAAS,mCACTlB,cAAeA,EACfC,iBAAoBA,MAIhC,I","file":"static/js/17.57e8a765.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport capitalize from '../utils/capitalize';\nimport { alpha } from '../styles/colorManipulator';\nimport withStyles from '../styles/withStyles';\nimport Button from '../Button'; // Force a side effect so we don't have any override priority issue.\n// eslint-disable-next-line no-unused-expressions\n\nButton.styles;\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-flex',\n      borderRadius: theme.shape.borderRadius\n    },\n\n    /* Styles applied to the root element if `variant=\"contained\"`. */\n    contained: {\n      boxShadow: theme.shadows[2]\n    },\n\n    /* Styles applied to the root element if `disableElevation={true}`. */\n    disableElevation: {\n      boxShadow: 'none'\n    },\n\n    /* Pseudo-class applied to child elements if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `fullWidth={true}`. */\n    fullWidth: {\n      width: '100%'\n    },\n\n    /* Styles applied to the root element if `orientation=\"vertical\"`. */\n    vertical: {\n      flexDirection: 'column'\n    },\n\n    /* Styles applied to the children. */\n    grouped: {\n      minWidth: 40\n    },\n\n    /* Styles applied to the children if `orientation=\"horizontal\"`. */\n    groupedHorizontal: {\n      '&:not(:first-child)': {\n        borderTopLeftRadius: 0,\n        borderBottomLeftRadius: 0\n      },\n      '&:not(:last-child)': {\n        borderTopRightRadius: 0,\n        borderBottomRightRadius: 0\n      }\n    },\n\n    /* Styles applied to the children if `orientation=\"vertical\"`. */\n    groupedVertical: {\n      '&:not(:first-child)': {\n        borderTopRightRadius: 0,\n        borderTopLeftRadius: 0\n      },\n      '&:not(:last-child)': {\n        borderBottomRightRadius: 0,\n        borderBottomLeftRadius: 0\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"text\"`. */\n    groupedText: {},\n\n    /* Styles applied to the children if `variant=\"text\"` and `orientation=\"horizontal\"`. */\n    groupedTextHorizontal: {\n      '&:not(:last-child)': {\n        borderRight: \"1px solid \".concat(theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.23)' : 'rgba(255, 255, 255, 0.23)')\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"text\"` and `orientation=\"vertical\"`. */\n    groupedTextVertical: {\n      '&:not(:last-child)': {\n        borderBottom: \"1px solid \".concat(theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.23)' : 'rgba(255, 255, 255, 0.23)')\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"text\"` and `color=\"primary\"`. */\n    groupedTextPrimary: {\n      '&:not(:last-child)': {\n        borderColor: alpha(theme.palette.primary.main, 0.5)\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"text\"` and `color=\"secondary\"`. */\n    groupedTextSecondary: {\n      '&:not(:last-child)': {\n        borderColor: alpha(theme.palette.secondary.main, 0.5)\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"outlined\"`. */\n    groupedOutlined: {},\n\n    /* Styles applied to the children if `variant=\"outlined\"` and `orientation=\"horizontal\"`. */\n    groupedOutlinedHorizontal: {\n      '&:not(:first-child)': {\n        marginLeft: -1\n      },\n      '&:not(:last-child)': {\n        borderRightColor: 'transparent'\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"outlined\"` and `orientation=\"vertical\"`. */\n    groupedOutlinedVertical: {\n      '&:not(:first-child)': {\n        marginTop: -1\n      },\n      '&:not(:last-child)': {\n        borderBottomColor: 'transparent'\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"outlined\"` and `color=\"primary\"`. */\n    groupedOutlinedPrimary: {\n      '&:hover': {\n        borderColor: theme.palette.primary.main\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"outlined\"` and `color=\"secondary\"`. */\n    groupedOutlinedSecondary: {\n      '&:hover': {\n        borderColor: theme.palette.secondary.main\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"contained\"`. */\n    groupedContained: {\n      boxShadow: 'none'\n    },\n\n    /* Styles applied to the children if `variant=\"contained\"` and `orientation=\"horizontal\"`. */\n    groupedContainedHorizontal: {\n      '&:not(:last-child)': {\n        borderRight: \"1px solid \".concat(theme.palette.grey[400]),\n        '&$disabled': {\n          borderRight: \"1px solid \".concat(theme.palette.action.disabled)\n        }\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"contained\"` and `orientation=\"vertical\"`. */\n    groupedContainedVertical: {\n      '&:not(:last-child)': {\n        borderBottom: \"1px solid \".concat(theme.palette.grey[400]),\n        '&$disabled': {\n          borderBottom: \"1px solid \".concat(theme.palette.action.disabled)\n        }\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"contained\"` and `color=\"primary\"`. */\n    groupedContainedPrimary: {\n      '&:not(:last-child)': {\n        borderColor: theme.palette.primary.dark\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"contained\"` and `color=\"secondary\"`. */\n    groupedContainedSecondary: {\n      '&:not(:last-child)': {\n        borderColor: theme.palette.secondary.dark\n      }\n    }\n  };\n};\nvar ButtonGroup = /*#__PURE__*/React.forwardRef(function ButtonGroup(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'default' : _props$color,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$disableElevati = props.disableElevation,\n      disableElevation = _props$disableElevati === void 0 ? false : _props$disableElevati,\n      _props$disableFocusRi = props.disableFocusRipple,\n      disableFocusRipple = _props$disableFocusRi === void 0 ? false : _props$disableFocusRi,\n      _props$disableRipple = props.disableRipple,\n      disableRipple = _props$disableRipple === void 0 ? false : _props$disableRipple,\n      _props$fullWidth = props.fullWidth,\n      fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth,\n      _props$orientation = props.orientation,\n      orientation = _props$orientation === void 0 ? 'horizontal' : _props$orientation,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'outlined' : _props$variant,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"color\", \"component\", \"disabled\", \"disableElevation\", \"disableFocusRipple\", \"disableRipple\", \"fullWidth\", \"orientation\", \"size\", \"variant\"]);\n\n  var buttonClassName = clsx(classes.grouped, classes[\"grouped\".concat(capitalize(orientation))], classes[\"grouped\".concat(capitalize(variant))], classes[\"grouped\".concat(capitalize(variant)).concat(capitalize(orientation))], classes[\"grouped\".concat(capitalize(variant)).concat(color !== 'default' ? capitalize(color) : '')], disabled && classes.disabled);\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    role: \"group\",\n    className: clsx(classes.root, className, fullWidth && classes.fullWidth, disableElevation && classes.disableElevation, variant === 'contained' && classes.contained, orientation === 'vertical' && classes.vertical),\n    ref: ref\n  }, other), React.Children.map(children, function (child) {\n    if (! /*#__PURE__*/React.isValidElement(child)) {\n      return null;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"Material-UI: The ButtonGroup component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    return /*#__PURE__*/React.cloneElement(child, {\n      className: clsx(buttonClassName, child.props.className),\n      color: child.props.color || color,\n      disabled: child.props.disabled || disabled,\n      disableElevation: child.props.disableElevation || disableElevation,\n      disableFocusRipple: disableFocusRipple,\n      disableRipple: disableRipple,\n      fullWidth: fullWidth,\n      size: child.props.size || size,\n      variant: child.props.variant || variant\n    });\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? ButtonGroup.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the button group.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'inherit', 'primary', 'secondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the buttons will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, no elevation is used.\n   */\n  disableElevation: PropTypes.bool,\n\n  /**\n   * If `true`, the button keyboard focus ripple will be disabled.\n   */\n  disableFocusRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the button ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the buttons will take up the full width of its container.\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * The group orientation (layout flow direction).\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n\n  /**\n   * The size of the button.\n   * `small` is equivalent to the dense button styling.\n   */\n  size: PropTypes.oneOf(['large', 'medium', 'small']),\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['contained', 'outlined', 'text'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiButtonGroup'\n})(ButtonGroup);","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M15 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm-9-2V7H4v3H1v2h3v3h2v-3h3v-2H6zm9 4c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n}), 'PersonAddSharp');\n\nexports.default = _default;","import React, { Fragment, useState, useEffect } from \"react\";\r\nimport { FormControl, Grid, TextField, withStyles, InputLabel, Select, MenuItem, Button, FormHelperText } from \"@material-ui/core\";\r\nimport { useForm } from \"../../useForm\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../../../../actions/Staff/addStaff\";\r\nimport * as storeActions from \"../../../../../actions/Store/stores\";\r\nimport * as userLevelActions from \"../../../../../actions/UserLevel/userLevel\";\r\nimport { ToastConsumer, useToasts } from \"react-toast-notifications\";\r\nimport \"../../staffForm.css\";\r\nimport { string } from \"prop-types\";\r\nimport { RestoreSharp } from \"@material-ui/icons\";\r\nimport { createSelector, createStructuredSelector } from 'reselect';\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\n\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            margin: theme.spacing(1),\r\n            minWidth: 230,\r\n        }\r\n    },\r\n\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 230,\r\n    },\r\n    smMargin: {\r\n        margin: theme.spacing(1),\r\n\r\n    },\r\n})\r\n\r\nconst initialFieldValues = {\r\n\r\n    fName: '',\r\n    sName: '',\r\n    lName: '',\r\n    mobile: '',\r\n    email: '',\r\n    address: '',\r\n    uName: '',\r\n    password: '',\r\n    userLevelId: '',\r\n    \r\n    cPswd: '',\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst AddNewStaffForm = ({ classes, ...props }) => {\r\n    //const [addorEdit] = props;\r\n    //const [openPopup, setOpenPopup] = useState(false)\r\n    //toast message\r\n    const { addToast } = useToasts()\r\n    \r\n    //realtime validation for the whole form controls\r\n    const validate = (fieldValues = values) => {\r\n        let temp = { ...errors }\r\n        if ('fName' in fieldValues) {\r\n            temp.fName = fieldValues.fName ? \"\" : \"This field is required\"\r\n            // addToast(\"User data saved succeffuly\", {appearance:'success'})\r\n            // console.log(\"Tast has beeen displayed\")\r\n        }\r\n\r\n\r\n        if ('sName' in fieldValues) {\r\n            temp.sName = fieldValues.sName ? \"\" : \"This field is required\"\r\n        }\r\n\r\n\r\n        if ('lName' in fieldValues) {\r\n            temp.lName = fieldValues.lName ? \"\" : \"This field is required\"\r\n        }\r\n\r\n\r\n        if ('email' in fieldValues) {\r\n            if (temp.email != \" \") {\r\n                temp.email = (/^&|.+@.+..+/).test(fieldValues.email) ? \"\" : \"Email is not valid\"\r\n            }\r\n        }\r\n        if ('mobile' in fieldValues) {\r\n            temp.mobile = fieldValues.mobile ? \"\" : \"This field is required\"\r\n        }\r\n        if ('address' in fieldValues) {\r\n            temp.address = fieldValues.address ? \"\" : \"This field is required\"\r\n        }\r\n        if ('userLevelId' in fieldValues) {\r\n            temp.userLevelId = fieldValues.userLevelId ? \"\" : \"This field is required\"\r\n        }\r\n        if ('storeId' in fieldValues) {\r\n            temp.storeId = fieldValues.storeId ? \"\" : \"This field is required\"\r\n        }\r\n        if ('uName' in fieldValues) {\r\n            temp.uName = fieldValues.uName ? \"\" : \"This field is required\"\r\n        }\r\n        if ('password' in fieldValues) {\r\n            temp.password = fieldValues.password ? \"\" : \"This field is required\"\r\n        }\r\n        if ('cPswd' in fieldValues) {\r\n            temp.cPswd = fieldValues.cPswd ? \"\" : \"This field is required\"\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n        setErrors({\r\n            ...temp\r\n        })\r\n        if (fieldValues == values) {\r\n            return Object.values(temp).every(x => x == \"\")\r\n        }\r\n\r\n\r\n    }\r\n\r\n    const [\r\n        values,\r\n        setValues,\r\n        errors,\r\n        setErrors,\r\n        handleInputChange,\r\n        resetForm\r\n    ] = useForm(initialFieldValues, validate, props.setCurrentId);\r\n\r\n    const showToast = () => {\r\n        addToast(\"Staff data saved succeffuly\", { appearance: 'success' })\r\n        addToast(\"Staff data saved succeffuly\", { appearance: 'success' })\r\n        addToast(\"Staff data saved succeffuly\", { appearance: 'success' })\r\n        props.fetchAllInvestors();\r\n    }\r\n\r\n\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n\r\n\r\n        if (validate()) {\r\n\r\n            const onSuccess = () => {\r\n                resetForm();\r\n                showToast();\r\n\r\n            }\r\n\r\n\r\n\r\n            if (props.currentId == 0) {\r\n\r\n                //using toast notification\r\n\r\n                props.createStaff(values, onSuccess)\r\n                //addorEdit(values, onSuccess)\r\n\r\n            }\r\n            else {\r\n                //using windows alert notification\r\n                //props.updateDCandidate(props.currentId, values, () => {window.alert('updated')})\r\n                //using toast notification\r\n                props.updateStaff(props.currentId, values, onSuccess)\r\n\r\n            }\r\n            if (props.openPopup == true) {\r\n                props.setOpenPopup(false)\r\n            }\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n\r\n        if (props.currentId != 0)\r\n            setValues({\r\n                ...props.investorsList.find(x => x.id == props.currentId)\r\n            })\r\n        setErrors({})\r\n        props.fetchAllUserLevel();\r\n\r\n\r\n\r\n    }, [props.currentId])\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n\r\n        <section className=\"content\">\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                    {/* left column */}\r\n                    <div className=\"col-md-12\">\r\n                        {/* jquery validation */}\r\n                        <div className=\"card card-primary\">\r\n                            <div className=\"card-header\">\r\n                                <h4 className=\"card-title\">Add Investor <small>+ Credentials </small></h4>\r\n                            </div>\r\n                            {/* /.card-header */}\r\n                            {/* form start */}\r\n                            <form id=\"quickForm\" autoComplete=\"off\" noValidate className={classes.root} onSubmit={handleSubmit}>\r\n\r\n                                <TextField\r\n                                    className=\"form-ctr\"\r\n                                    id=\"input-with-icon-textfield\"\r\n                                    variant=\"outlined\"\r\n                                    type=\"text\"\r\n                                    name=\"fName\"\r\n                                    label=\"First Name\"\r\n                                    InputLabelProps={{\r\n                                        startAdornment: (\r\n                                            <InputAdornment position=\"start\">\r\n                                                <AccountCircle />\r\n                                            </InputAdornment>\r\n                                        ),\r\n                                    }}\r\n                                    value={values.fName}\r\n                                    onChange={handleInputChange}\r\n                                    {...(errors.fName && { error: true, helperText: errors.fName })}\r\n                                />\r\n\r\n                                <TextField className=\"form-ctr\" name=\"sName\" label=\"Second Name\" value={values.sName}\r\n                                    onChange={handleInputChange}\r\n                                    variant=\"outlined\"\r\n                                    {... (errors.sName && { error: true, helperText: errors.sName })}\r\n                                />\r\n\r\n                                <TextField className=\"form-ctr\" name=\"lName\" label=\"Last Name\" value={values.lName}\r\n                                    onChange={handleInputChange}\r\n                                    variant=\"outlined\"\r\n\r\n                                    {... (errors.lName && { error: true, helperText: errors.lName })}\r\n                                />\r\n\r\n                                <TextField\r\n                                    className=\"form-ctr\"\r\n                                    name=\"email\"\r\n                                    label=\"Email\" type=\"email\" value={values.email}\r\n                                    onChange={handleInputChange}\r\n                                    variant=\"outlined\"\r\n\r\n                                    {...(errors.email && { error: true, helperText: errors.email })}\r\n                                />\r\n\r\n                                <TextField className=\"form-ctr\" name=\"mobile\" label=\"Mobile\" value={values.mobile}\r\n                                    onChange={handleInputChange}\r\n                                    variant=\"outlined\"\r\n\r\n                                    {... (errors.mobile && { error: true, helperText: errors.Mobile })}\r\n                                />\r\n\r\n                                <TextField className=\"form-ctr\" name=\"address\" label=\"Address\" value={values.address}\r\n                                    onChange={handleInputChange}\r\n                                    variant=\"outlined\"\r\n\r\n                                    {... (errors.address && { error: true, helperText: errors.address })}\r\n                                />\r\n                                \r\n\r\n                                <FormControl className={classes.formControl}\r\n                                    {...(errors.userLevelId && { error: true })}\r\n                                >\r\n                                    <InputLabel >Access Level</InputLabel>\r\n                                    <Select\r\n                                        className=\"form-ctr\"\r\n                                        name=\"userLevelId\"\r\n                                        label=\"Access Level\"\r\n                                        value={values.userLevelId}\r\n                                        onChange={handleInputChange}\r\n                                        variant=\"outlined\"\r\n\r\n                                    >\r\n                                        <MenuItem value=\"\">Select Access Level</MenuItem>\r\n                                        {\r\n                                            props.userLevelList.map((record, index) => {\r\n                                                return (\r\n                                                    <MenuItem value={record.id}>{record.level}</MenuItem>\r\n\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </Select>\r\n                                    {errors.userLevelId && <FormHelperText>{errors.userLevelId}</FormHelperText>}\r\n                                </FormControl>\r\n\r\n                                <TextField className=\"form-ctr\" name=\"uName\" label=\"User Name\" value={values.uName}\r\n                                    onChange={handleInputChange}\r\n                                    variant=\"outlined\"\r\n\r\n                                    {... (errors.uName && { error: true, helperText: errors.uName })}\r\n                                />\r\n\r\n                                <TextField className=\"form-ctr\" name=\"password\" label=\"Password\" type=\"password\" value={values.password}\r\n                                    onChange={handleInputChange}\r\n                                    variant=\"outlined\"\r\n\r\n                                    {... (errors.password && { error: true, helperText: errors.password })}\r\n                                />\r\n\r\n                                <TextField className=\"form-ctr\" name=\"cPswd\" label=\"Confirm Password\" type=\"password\" value={values.cPswd}\r\n                                    onChange={handleInputChange}\r\n                                    variant=\"outlined\"\r\n\r\n\r\n                                    {... (errors.cPswd && { error: true, helperText: errors.cPswd })}\r\n                                />\r\n\r\n\r\n\r\n                                {/* /.card-body */}\r\n                                <div className=\"card-footer\">\r\n                                    <div>\r\n                                        <button type=\"submit\" className=\"btn btn-primary\" >Save</button>\r\n                                        <button variant=\"contained\"\r\n                                            className=\"btn btn-secondary\"\r\n                                            onClick={resetForm} style={{ marginLeft: 3 }}>Reset</button>\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                            </form>\r\n\r\n                        </div>\r\n                        {/* /.card */}\r\n                    </div>\r\n                    {/*/.col (left) */}\r\n                    {/* right column */}\r\n                    <div className=\"col-md-6\">\r\n                    </div>\r\n                    {/*/.col (right) */}\r\n                </div>\r\n                {/* /.row */}\r\n            </div>{/* /.container-fluid */}\r\n        </section>\r\n\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    investorsList: state.addStaff.list,\r\n    userLevelList: state.userLevel.list,\r\n})\r\n\r\n\r\n\r\nconst mapActionToProps = {\r\n    createStaff: actions.create,\r\n    updateStaff: actions.update,\r\n    fetchAllUserLevel: userLevelActions.fetchAllUserLevel,\r\n    fetchAllInvestors: actions.fetchAllInvestors,\r\n\r\n}\r\nexport default connect(mapStateToProps, mapActionToProps)(withStyles(styles)(AddNewStaffForm));","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 00-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'Edit');\n\nexports.default = _default;","import { Grid, Paper, Table, TableContainer, TableHead, TableRow, TableCell, TableBody, withStyles, ButtonGroup, Button } from \"@material-ui/core\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../../../../actions/Staff/addStaff\";\r\n\r\nimport AddNewInvestorForm from \"./AddNewInvestorForm\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\n//import PeopleOutlineTwoToneIcon from '@material-ui/icons/PeopleOutlineTwoTone';\r\nimport PageHeader from \"../../../PageHeader\";\r\nimport PeopleOutlineTwoToneIcon from '@material-ui/icons/PersonAddSharp';\r\nimport ConfirmDialog from \"../../../controls/ConfirmDialog\";\r\n//import Controls from \"./Controls\";\r\nimport NotListedLocation  from '@material-ui/icons/NotListedLocation';\r\n\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        \"& .MuiTableCell-head\": {\r\n            fontSize: \"0.95rem\"\r\n        }\r\n    },\r\n    paper: {\r\n        margin: theme.spacing(-8.9),\r\n        padding: theme.spacing(6)\r\n    },\r\n\r\n    grid:{\r\n        paddingLeft: theme.spacing(2)\r\n    }\r\n})\r\n\r\n\r\n\r\nconst AddNewStaff = ({ classes, ...props }) => {\r\n    //Toast message\r\n    const { addToast } = useToasts()\r\n    const [currentId, setCurrentId] = useState(0)\r\n    const [confirmDialog, setConfirmDialog] = useState(false) \r\n    useEffect(() => {\r\n        props.fetchAllInvestors()\r\n       // props.fetchAllStores()\r\n    }, [])\r\n\r\n    const showToast= () =>{\r\n        addToast(\"Record was deleted succesffuly\", { appearance: 'error' })\r\n        addToast(\"Record was deleted succesffuly\", { appearance: 'error' })\r\n        addToast(\"Record was deleted succesffuly\", { appearance: 'error' })\r\n\r\n    }\r\n    const onDelete = id => {\r\n            props.deleteStaff(id, showToast )\r\n            setConfirmDialog(false)\r\n    }\r\n\r\n    const openInDialog = () => {\r\n        setConfirmDialog(true)   \r\n    }\r\n\r\n    return (\r\n         <>\r\n         <PageHeader\r\n                title=\"Investors\"\r\n                //subTitle=\"Form design with validation\"\r\n                icon={<PeopleOutlineTwoToneIcon fontSize=\"large\" />}\r\n            />,\r\n         <Paper className={classes.paper} elevation={3}>\r\n           \r\n                    \r\n                    <AddNewInvestorForm {...({ currentId, setCurrentId })} />\r\n               \r\n                    <div className={classes.grid}>\r\n                    <table class=\"table  .table-responsive{-sm|-md|-lg|-xl|-xxl} table-bordered table-hover table-sm table-striped\" >\r\n                        <thead class=\"thead-dark\">\r\n                            <tr>\r\n                                <th scope=\"col\">Id</th>\r\n                                <th scope=\"col\">Name</th>\r\n                                <th scope=\"col\">Email</th>\r\n                                <th scope=\"col\">Mobile</th>\r\n                                <th scope=\"col\">Address</th>\r\n                               \r\n                                <th scope=\"col\">Access Level</th>\r\n                                <th scope=\"col\">User Name</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {/* <tr>\r\n                                <th scope=\"row\">1</th>\r\n                                <td>Mark</td>\r\n                                <td>Otto</td>\r\n                                <td>@mdo</td>\r\n                            </tr> */}\r\n                            {\r\n                                     props.investorsList.map((record, index) => {\r\n                                         return ( <tr key = {index} hover>\r\n                                             <td>{record.id}</td>\r\n                                             <td>{record.fName + \" \"+ record.sName + \" \" + record.lName}</td>\r\n                                             <td>{record.email}</td>\r\n                                             <td>{record.mobile}</td>\r\n                                             <td>{record.address}</td>\r\n                                             <td>{record.userLevel}</td>\r\n                                             <td>{record.uName}</td>\r\n                                             \r\n                                             <td>\r\n                                                 <ButtonGroup variant= \"text\">\r\n                                                    <Button><EditIcon color=\"primary\"\r\n                                                    onClick={()=>{setCurrentId(record.id)}}/></Button>\r\n                                                    <Button><DeleteIcon color=\"Secondary\"\r\n                                                      onClick={() => {\r\n                                                        openInDialog()\r\n                                                        setConfirmDialog({\r\n                                                            onConfirm: () =>{onDelete(record.id)}\r\n                                                        })\r\n                                                        \r\n                                                        //onDelete(record.id)\r\n                                                    }\r\n                                                    }\r\n                                                \r\n                                                    /></Button> \r\n                                                 </ButtonGroup>\r\n                                             </td>\r\n                                         </tr>\r\n\r\n                                         )\r\n                                     })\r\n                                 }\r\n                           \r\n                        </tbody>\r\n                    </table>\r\n                    </div>\r\n                {/* </Grid>\r\n            </Grid> */}\r\n        </Paper>\r\n\r\n        <ConfirmDialog \r\n            title=\"Are you sure you want to delete this record?\"\r\n            subTitle=\"This operation can't be reversed\"\r\n            confirmDialog={confirmDialog}\r\n            setConfirmDialog = {setConfirmDialog}\r\n            />\r\n         </>\r\n    );\r\n}\r\n\r\n//export default staff; \r\n\r\nconst mapStateToProps = state => ({\r\n    investorsList: state.addStaff.list,\r\n    \r\n})\r\n\r\nconst mapActionToProps = {\r\n    fetchAllInvestors: actions.fetchAllInvestors,\r\n    deleteStaff: actions.Delete,\r\n    \r\n}\r\n\r\nexport default connect(mapStateToProps, mapActionToProps)(withStyles(styles)(AddNewStaff));\r\n\r\n"],"sourceRoot":""}