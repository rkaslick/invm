{"version":3,"sources":["views/Components/Forms/Vehicles/AddVehicles/AddNewVehicleForm.js"],"names":["initialFieldValues","regNo","description","mapActionToProps","createVehicle","VActions","updateVehicle","fetchAllVehicles","connect","state","vehiclesList","vehicles","list","withStyles","theme","root","margin","spacing","minWidth","formControl","smMargin","_ref","classes","props","_objectWithoutProperties","_excluded","addToast","useToasts","_useState","useState","_useState2","_slicedToArray","_useState3","_useState4","errorDialog","setErrorDialog","_useState5","_useState6","tittle","setTittle","validate","fieldValues","arguments","length","undefined","values","temp","_objectSpread","errors","setErrors","Object","every","x","_useForm","useForm","setCurrentId","_useForm2","setValues","handleInputChange","resetForm","useEffect","currentId","find","_jsxs","_Fragment","children","_jsx","className","id","autoComplete","noValidate","onSubmit","e","preventDefault","onSuccess","appearance","console","log","onConfirm","openPopup","setOpenPopup","TextField","type","name","label","value","onChange","error","helperText","variant","onClick","style","marginLeft","ErrorDialog","title"],"mappings":"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","file":"static/js/63.4dccc3a7.chunk.js","sourcesContent":["import React, { Fragment, useState, useEffect } from \"react\";\r\nimport { FormControl, Grid, TextField, withStyles, InputLabel, Select, MenuItem, Button, FormHelperText } from \"@material-ui/core\";\r\nimport { useForm } from \"../../useForm\";\r\nimport { connect } from \"react-redux\";\r\n//import * as actions from \"../../../../../actions/Staff/addStaff\";\r\nimport * as VActions from \"../../../../../actions/Vehicles/vehicles\";\r\n//import * as userLevelActions from \"../../../../../actions/UserLevel/userLevel\";\r\nimport { ToastConsumer, useToasts } from \"react-toast-notifications\";\r\nimport \"../../staffForm.css\";\r\nimport { RestoreSharp } from \"@material-ui/icons\";\r\nimport Popup from \"../../../RPopup \";\r\nimport ErrorDialog from \"../../../controls/errorDialog\";\r\n\r\n\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            margin: theme.spacing(1),\r\n            minWidth: 230,\r\n        }\r\n    },\r\n\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 230,\r\n    },\r\n    smMargin: {\r\n        margin: theme.spacing(1),\r\n\r\n    },\r\n})\r\n\r\nconst initialFieldValues = {\r\n\r\n    regNo: '',\r\n    description: '',\r\n    // phone: '',\r\n    // location: '',\r\n    // // email: '',\r\n    // // address: '',\r\n    // companyDataId: '',\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst AddNewVehicleForm = ({ classes, ...props }) => {\r\n\r\n    //toast message\r\n    const { addToast } = useToasts();\r\n    const [openPopup, setOpenPopup] = useState(false);\r\n    const [errorDialog, setErrorDialog] = useState(false);\r\n    const [tittle, setTittle] = useState(\"\");\r\n\r\n    //realtime validation for the whole form controls\r\n    const validate = (fieldValues = values) => {\r\n        let temp = { ...errors }\r\n        if ('regNo' in fieldValues) {\r\n            temp.regNo = fieldValues.regNo ? \"\" : \"This field is required\"\r\n            // addToast(\"User data saved succeffuly\", {appearance:'success'})\r\n            // console.log(\"Tast has beeen displayed\")\r\n        }\r\n\r\n\r\n        if ('description' in fieldValues) {\r\n            temp.description = fieldValues.description ? \"\" : \"This field is required\"\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n\r\n        setErrors({\r\n            ...temp\r\n        })\r\n        if (fieldValues == values) {\r\n            return Object.values(temp).every(x => x == \"\")\r\n        }\r\n\r\n\r\n    }\r\n\r\n    const [\r\n        values,\r\n        setValues,\r\n        errors,\r\n        setErrors,\r\n        handleInputChange,\r\n        resetForm\r\n    ] = useForm(initialFieldValues, validate, props.setCurrentId);\r\n\r\n    const showToast = () => {\r\n        addToast(\"Vehicle data saved succeffuly\", { appearance: 'success' })\r\n        addToast(\"Vehicle data saved succeffuly\", { appearance: 'success' })\r\n        addToast(\"Vehicle data saved succeffuly\", { appearance: 'success' })\r\n        props.fetchAllVehicles();\r\n    }\r\n\r\n    const openInErrorDialog = () => {\r\n        setErrorDialog(true)\r\n\r\n\r\n\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n\r\n\r\n        if (validate()) {\r\n\r\n            const onSuccess = () => {\r\n                showToast();\r\n                resetForm();\r\n\r\n\r\n            }\r\n\r\n\r\n\r\n            if (props.currentId == 0) {\r\n\r\n                //using toast notification\r\n\r\n                props.createVehicle(values, onSuccess)\r\n                //addorEdit(values, onSuccess)\r\n\r\n            }\r\n            else {\r\n                //using windows alert notification\r\n                //props.updateDCandidate(props.currentId, values, () => {window.alert('updated')})\r\n                //using toast notification\r\n                if (values.regNo == props.currentId) {\r\n                    props.updateVehicle(props.currentId, values, onSuccess)\r\n\r\n                } else {\r\n                    console.log('No Plate cannot be updated. It may be associated with Many transactions');\r\n                    setTittle(\"Vehicle No.Plate cannot be updated. It may be associated with Many transactions.\");\r\n                    openInErrorDialog();\r\n                    setErrorDialog({\r\n                        onConfirm: () => {  }\r\n                    })\r\n\r\n                    resetForm();\r\n\r\n                }\r\n\r\n\r\n\r\n\r\n            }\r\n\r\n            if (props.openPopup == true) {\r\n                props.setOpenPopup(false)\r\n            }\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n\r\n        if (props.currentId != 0)\r\n            setValues({\r\n                ...props.vehiclesList.find(x => x.regNo == props.currentId)\r\n            })\r\n        setErrors({})\r\n        props.fetchAllVehicles();\r\n        // props.fetchAllUserLevel();\r\n\r\n\r\n\r\n    }, [props.currentId])\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <section className=\"content\">\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row\">\r\n                        {/* left column */}\r\n                        <div className=\"col-md-12\">\r\n                            {/* jquery validation */}\r\n                            <div className=\"card card-primary\">\r\n                                <div className=\"card-header\">\r\n                                    <h4 className=\"card-title\">Add Vehicles <small> </small></h4>\r\n                                </div>\r\n                                {/* /.card-header */}\r\n                                {/* form start */}\r\n                                <form id=\"quickForm\" autoComplete=\"off\" noValidate className={classes.root} onSubmit={handleSubmit}>\r\n\r\n                                    <TextField\r\n                                        className=\"form-ctr\"\r\n                                        id=\"standard-basic\"\r\n                                        type=\"text\"\r\n                                        name=\"regNo\"\r\n                                        label=\"Number Plate\"\r\n                                        value={values.regNo}\r\n                                        onChange={handleInputChange}\r\n                                        {...(errors.regNo && { error: true, helperText: errors.regNo })}\r\n                                    />\r\n\r\n                                    <TextField className=\"form-ctr\" name=\"description\" label=\"Description\" value={values.description}\r\n                                        onChange={handleInputChange}\r\n\r\n\r\n                                        {... (errors.description && { error: true, helperText: errors.description })}\r\n                                    />\r\n\r\n\r\n\r\n\r\n\r\n\r\n                                    {/* /.card-body */}\r\n                                    <div className=\"card-footer\">\r\n                                        <div>\r\n                                            <button type=\"submit\" className=\"btn btn-primary\" >Save</button>\r\n                                            <button variant=\"contained\"\r\n                                                className=\"btn btn-secondary\"\r\n                                                onClick={resetForm} style={{ marginLeft: 3 }}>Reset</button>\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n                                </form>\r\n\r\n                            </div>\r\n                            {/* /.card */}\r\n                        </div>\r\n                        {/*/.col (left) */}\r\n                        {/* right column */}\r\n                        <div className=\"col-md-6\">\r\n                        </div>\r\n                        {/*/.col (right) */}\r\n                    </div>\r\n                    {/* /.row */}\r\n                </div>{/* /.container-fluid */}\r\n            </section>\r\n\r\n            <ErrorDialog\r\n                title={tittle}\r\n                // subTitle=\"This operation can't be reversed\"\r\n                errorDialog={errorDialog}\r\n                setErrorDialog={setErrorDialog}\r\n            />\r\n        </>\r\n\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n\r\n    vehiclesList: state.vehicles.list\r\n\r\n})\r\n\r\n\r\n\r\nconst mapActionToProps = {\r\n    createVehicle: VActions.createVehicle,\r\n    updateVehicle: VActions.updateVehicle,\r\n    fetchAllVehicles: VActions.fetchAllVehicles,\r\n    //fetchAllUserLevel: userLevelActions.fetchAllUserLevel,\r\n    //fetchAllAddStaff: actions.fetchAll,\r\n\r\n}\r\nexport default connect(mapStateToProps, mapActionToProps)(withStyles(styles)(AddNewVehicleForm));"],"sourceRoot":""}