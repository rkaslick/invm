{"version":3,"sources":["views/Components/Forms/Customers/AddCustomers/AddCustomers.js","../node_modules/@material-ui/core/esm/ButtonGroup/ButtonGroup.js","../node_modules/@material-ui/icons/PeopleOutlineTwoTone.js","views/Components/Forms/Customers/AddCustomers/AddCustomersForm.js","../node_modules/@material-ui/icons/Delete.js","../node_modules/@material-ui/icons/Edit.js"],"names":["mapActionToProps","fetchAllCustomers","customerActions","deleteCustomers","connect","state","customersList","customers","list","withStyles","theme","root","fontSize","paper","margin","spacing","padding","grid","paddingLeft","_ref","classes","props","_objectWithoutProperties","_excluded","addToast","useToasts","_useState","useState","_useState2","_slicedToArray","currentId","setCurrentId","_useState3","_useState4","confirmDialog","setConfirmDialog","useEffect","showToast","appearance","_jsxs","_Fragment","children","_jsx","PageHeader","title","icon","PeopleOutlineTwoToneIcon","Paper","className","elevation","AddCustomersForm","class","scope","map","record","index","hover","name","description","phone","address","ButtonGroup","variant","Button","EditIcon","color","onClick","id","DeleteIcon","onConfirm","ConfirmDialog","subTitle","styles","React","ref","_props$color","_props$component","component","Component","_props$disabled","disabled","_props$disableElevati","disableElevation","_props$disableFocusRi","disableFocusRipple","_props$disableRipple","disableRipple","_props$fullWidth","fullWidth","_props$orientation","orientation","_props$size","size","_props$variant","other","buttonClassName","clsx","grouped","concat","capitalize","_extends","role","contained","vertical","child","display","borderRadius","shape","boxShadow","shadows","width","flexDirection","minWidth","groupedHorizontal","borderTopLeftRadius","borderBottomLeftRadius","borderTopRightRadius","borderBottomRightRadius","groupedVertical","groupedText","groupedTextHorizontal","borderRight","palette","type","groupedTextVertical","borderBottom","groupedTextPrimary","borderColor","alpha","primary","main","groupedTextSecondary","secondary","groupedOutlined","groupedOutlinedHorizontal","marginLeft","borderRightColor","groupedOutlinedVertical","marginTop","borderBottomColor","groupedOutlinedPrimary","groupedOutlinedSecondary","groupedContained","groupedContainedHorizontal","grey","action","groupedContainedVertical","groupedContainedPrimary","dark","groupedContainedSecondary","_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","value","default","_default","createElement","Fragment","cx","cy","r","opacity","d","initialFieldValues","country","storeId","deleteCustomer","createCustomer","updateCustomer","fetchAllStores","storeActions","storesList","stores","formControl","smMargin","validate","fieldValues","arguments","length","undefined","values","temp","_objectSpread","errors","setErrors","every","x","_useForm","useForm","_useForm2","setValues","handleInputChange","resetForm","find","autoComplete","noValidate","onSubmit","e","preventDefault","onSuccess","openPopup","setOpenPopup","TextField","label","onChange","error","helperText","style"],"mappings":"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","file":"static/js/11.f9a0de59.chunk.js","sourcesContent":["import { Grid, Paper, Table, TableContainer, TableHead, TableRow, TableCell, TableBody, withStyles, ButtonGroup, Button } from \"@material-ui/core\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n//import * as actions from \"../../../../../actions/Staff/addStaff\";\r\nimport * as customerActions from \"../../../../../actions/Customers/customers\";\r\n//import * as storeActions from \"../../../../../actions/Store/stores\";\r\nimport AddCustomersForm from \"./AddCustomersForm\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport PeopleOutlineTwoToneIcon from '@material-ui/icons/PeopleOutlineTwoTone';\r\nimport PageHeader from \"../../../PageHeader\";\r\n//import AddSuppliersIcon from '@material-ui/icons/add';\r\n//import AddShoppingCartTwoToneIcon from '@material-ui/icons/';\r\nimport ConfirmDialog from \"../../../controls/ConfirmDialog\";\r\n//import Controls from \"./Controls\";\r\nimport NotListedLocation  from '@material-ui/icons/NotListedLocation';\r\n\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        \"& .MuiTableCell-head\": {\r\n            fontSize: \"0.95rem\"\r\n        }\r\n    },\r\n    paper: {\r\n        margin: theme.spacing(-8.9),\r\n        padding: theme.spacing(6)\r\n    },\r\n\r\n    grid:{\r\n        paddingLeft: theme.spacing(2)\r\n    }\r\n})\r\n\r\n\r\n\r\nconst AddCustomers = ({ classes, ...props }) => {\r\n    //Toast message\r\n    const { addToast } = useToasts()\r\n    const [currentId, setCurrentId] = useState(0)\r\n    const [confirmDialog, setConfirmDialog] = useState(false) \r\n    useEffect(() => {\r\n        props.fetchAllCustomers()\r\n       // props.fetchAllStores()\r\n    }, [])\r\n\r\n    const showToast= () =>{\r\n        addToast(\"Record was deleted succesffuly\", { appearance: 'error' })\r\n        addToast(\"Record was deleted succesffuly\", { appearance: 'error' })\r\n        addToast(\"Record was deleted succesffuly\", { appearance: 'error' })\r\n        props.fetchAllCustomers()\r\n\r\n    }\r\n    const onDelete = id => {\r\n            props.deleteCustomers(id, showToast )\r\n            setConfirmDialog(false)\r\n\r\n    }\r\n\r\n    const openInDialog = () => {\r\n        setConfirmDialog(true)\r\n        \r\n        \r\n        \r\n    }\r\n\r\n    return (\r\n         <>\r\n         <PageHeader\r\n                title=\"Customers\"\r\n                //subTitle=\"Form design with validation\"\r\n                icon={<PeopleOutlineTwoToneIcon fontSize=\"large\" />}\r\n            />,\r\n         <Paper className={classes.paper} elevation={3}>\r\n            \r\n                    \r\n                    <AddCustomersForm {...({ currentId, setCurrentId })} />\r\n               \r\n                   \r\n                    <div className={classes.grid}>\r\n                    <table class=\"table  .table-responsive{-sm|-md|-lg|-xl|-xxl} table-bordered table-hover table-sm table-striped\" >\r\n                        <thead class=\"thead-dark\">\r\n                            <tr>\r\n                                <th scope=\"col\">Name</th>\r\n                                <th scope=\"col\">Description</th>\r\n                                <th scope=\"col\">Phone</th>\r\n                                <th scope=\"col\">Address</th>\r\n                                \r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            \r\n                            {\r\n                                     props.customersList.map((record, index) => {\r\n                                         return ( <tr key = {index} hover>\r\n                                            \r\n                                             <td>{record.name}</td>\r\n                                             <td>{record.description}</td>\r\n                                             <td>{record.phone}</td>\r\n                                             <td>{record.address}</td>\r\n                                            \r\n                                             \r\n                                             <td>\r\n                                                 <ButtonGroup variant= \"text\">\r\n                                                    <Button><EditIcon color=\"primary\"\r\n                                                    onClick={()=>{setCurrentId(record.id)}}/></Button>\r\n                                                    <Button><DeleteIcon color=\"Secondary\"\r\n                                                      onClick={() => {\r\n                                                        openInDialog()\r\n                                                        setConfirmDialog({\r\n                                                            onConfirm: () =>{onDelete(record.id)}\r\n                                                        })\r\n                                                        \r\n                                                        //onDelete(record.id)\r\n                                                    }\r\n                                                    }\r\n                                                \r\n                                                    /></Button> \r\n                                                 </ButtonGroup>\r\n                                             </td>\r\n                                         </tr>\r\n\r\n                                         )\r\n                                     })\r\n                                 }\r\n                           \r\n                        </tbody>\r\n                    </table>\r\n                    </div>\r\n               \r\n        </Paper>\r\n\r\n        <ConfirmDialog \r\n            title=\"Are you sure you want to delete this record?\"\r\n            subTitle=\"This operation can't be reversed\"\r\n            confirmDialog={confirmDialog}\r\n            setConfirmDialog = {setConfirmDialog}\r\n            />\r\n         </>\r\n    );\r\n}\r\n\r\n//export default staff; \r\n\r\nconst mapStateToProps = state => ({\r\n    customersList: state.customers.list,\r\n    \r\n})\r\n\r\nconst mapActionToProps = {\r\n    fetchAllCustomers: customerActions.fetchAllCustomer,\r\n    deleteCustomers: customerActions.DeleteCustomer,\r\n    \r\n}\r\n\r\nexport default connect(mapStateToProps, mapActionToProps)(withStyles(styles)(AddCustomers));\r\n\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport capitalize from '../utils/capitalize';\nimport { alpha } from '../styles/colorManipulator';\nimport withStyles from '../styles/withStyles';\nimport Button from '../Button'; // Force a side effect so we don't have any override priority issue.\n// eslint-disable-next-line no-unused-expressions\n\nButton.styles;\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-flex',\n      borderRadius: theme.shape.borderRadius\n    },\n\n    /* Styles applied to the root element if `variant=\"contained\"`. */\n    contained: {\n      boxShadow: theme.shadows[2]\n    },\n\n    /* Styles applied to the root element if `disableElevation={true}`. */\n    disableElevation: {\n      boxShadow: 'none'\n    },\n\n    /* Pseudo-class applied to child elements if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `fullWidth={true}`. */\n    fullWidth: {\n      width: '100%'\n    },\n\n    /* Styles applied to the root element if `orientation=\"vertical\"`. */\n    vertical: {\n      flexDirection: 'column'\n    },\n\n    /* Styles applied to the children. */\n    grouped: {\n      minWidth: 40\n    },\n\n    /* Styles applied to the children if `orientation=\"horizontal\"`. */\n    groupedHorizontal: {\n      '&:not(:first-child)': {\n        borderTopLeftRadius: 0,\n        borderBottomLeftRadius: 0\n      },\n      '&:not(:last-child)': {\n        borderTopRightRadius: 0,\n        borderBottomRightRadius: 0\n      }\n    },\n\n    /* Styles applied to the children if `orientation=\"vertical\"`. */\n    groupedVertical: {\n      '&:not(:first-child)': {\n        borderTopRightRadius: 0,\n        borderTopLeftRadius: 0\n      },\n      '&:not(:last-child)': {\n        borderBottomRightRadius: 0,\n        borderBottomLeftRadius: 0\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"text\"`. */\n    groupedText: {},\n\n    /* Styles applied to the children if `variant=\"text\"` and `orientation=\"horizontal\"`. */\n    groupedTextHorizontal: {\n      '&:not(:last-child)': {\n        borderRight: \"1px solid \".concat(theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.23)' : 'rgba(255, 255, 255, 0.23)')\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"text\"` and `orientation=\"vertical\"`. */\n    groupedTextVertical: {\n      '&:not(:last-child)': {\n        borderBottom: \"1px solid \".concat(theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.23)' : 'rgba(255, 255, 255, 0.23)')\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"text\"` and `color=\"primary\"`. */\n    groupedTextPrimary: {\n      '&:not(:last-child)': {\n        borderColor: alpha(theme.palette.primary.main, 0.5)\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"text\"` and `color=\"secondary\"`. */\n    groupedTextSecondary: {\n      '&:not(:last-child)': {\n        borderColor: alpha(theme.palette.secondary.main, 0.5)\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"outlined\"`. */\n    groupedOutlined: {},\n\n    /* Styles applied to the children if `variant=\"outlined\"` and `orientation=\"horizontal\"`. */\n    groupedOutlinedHorizontal: {\n      '&:not(:first-child)': {\n        marginLeft: -1\n      },\n      '&:not(:last-child)': {\n        borderRightColor: 'transparent'\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"outlined\"` and `orientation=\"vertical\"`. */\n    groupedOutlinedVertical: {\n      '&:not(:first-child)': {\n        marginTop: -1\n      },\n      '&:not(:last-child)': {\n        borderBottomColor: 'transparent'\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"outlined\"` and `color=\"primary\"`. */\n    groupedOutlinedPrimary: {\n      '&:hover': {\n        borderColor: theme.palette.primary.main\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"outlined\"` and `color=\"secondary\"`. */\n    groupedOutlinedSecondary: {\n      '&:hover': {\n        borderColor: theme.palette.secondary.main\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"contained\"`. */\n    groupedContained: {\n      boxShadow: 'none'\n    },\n\n    /* Styles applied to the children if `variant=\"contained\"` and `orientation=\"horizontal\"`. */\n    groupedContainedHorizontal: {\n      '&:not(:last-child)': {\n        borderRight: \"1px solid \".concat(theme.palette.grey[400]),\n        '&$disabled': {\n          borderRight: \"1px solid \".concat(theme.palette.action.disabled)\n        }\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"contained\"` and `orientation=\"vertical\"`. */\n    groupedContainedVertical: {\n      '&:not(:last-child)': {\n        borderBottom: \"1px solid \".concat(theme.palette.grey[400]),\n        '&$disabled': {\n          borderBottom: \"1px solid \".concat(theme.palette.action.disabled)\n        }\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"contained\"` and `color=\"primary\"`. */\n    groupedContainedPrimary: {\n      '&:not(:last-child)': {\n        borderColor: theme.palette.primary.dark\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"contained\"` and `color=\"secondary\"`. */\n    groupedContainedSecondary: {\n      '&:not(:last-child)': {\n        borderColor: theme.palette.secondary.dark\n      }\n    }\n  };\n};\nvar ButtonGroup = /*#__PURE__*/React.forwardRef(function ButtonGroup(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'default' : _props$color,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$disableElevati = props.disableElevation,\n      disableElevation = _props$disableElevati === void 0 ? false : _props$disableElevati,\n      _props$disableFocusRi = props.disableFocusRipple,\n      disableFocusRipple = _props$disableFocusRi === void 0 ? false : _props$disableFocusRi,\n      _props$disableRipple = props.disableRipple,\n      disableRipple = _props$disableRipple === void 0 ? false : _props$disableRipple,\n      _props$fullWidth = props.fullWidth,\n      fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth,\n      _props$orientation = props.orientation,\n      orientation = _props$orientation === void 0 ? 'horizontal' : _props$orientation,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'outlined' : _props$variant,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"color\", \"component\", \"disabled\", \"disableElevation\", \"disableFocusRipple\", \"disableRipple\", \"fullWidth\", \"orientation\", \"size\", \"variant\"]);\n\n  var buttonClassName = clsx(classes.grouped, classes[\"grouped\".concat(capitalize(orientation))], classes[\"grouped\".concat(capitalize(variant))], classes[\"grouped\".concat(capitalize(variant)).concat(capitalize(orientation))], classes[\"grouped\".concat(capitalize(variant)).concat(color !== 'default' ? capitalize(color) : '')], disabled && classes.disabled);\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    role: \"group\",\n    className: clsx(classes.root, className, fullWidth && classes.fullWidth, disableElevation && classes.disableElevation, variant === 'contained' && classes.contained, orientation === 'vertical' && classes.vertical),\n    ref: ref\n  }, other), React.Children.map(children, function (child) {\n    if (! /*#__PURE__*/React.isValidElement(child)) {\n      return null;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"Material-UI: The ButtonGroup component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    return /*#__PURE__*/React.cloneElement(child, {\n      className: clsx(buttonClassName, child.props.className),\n      color: child.props.color || color,\n      disabled: child.props.disabled || disabled,\n      disableElevation: child.props.disableElevation || disableElevation,\n      disableFocusRipple: disableFocusRipple,\n      disableRipple: disableRipple,\n      fullWidth: fullWidth,\n      size: child.props.size || size,\n      variant: child.props.variant || variant\n    });\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? ButtonGroup.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the button group.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'inherit', 'primary', 'secondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the buttons will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, no elevation is used.\n   */\n  disableElevation: PropTypes.bool,\n\n  /**\n   * If `true`, the button keyboard focus ripple will be disabled.\n   */\n  disableFocusRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the button ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the buttons will take up the full width of its container.\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * The group orientation (layout flow direction).\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n\n  /**\n   * The size of the button.\n   * `small` is equivalent to the dense button styling.\n   */\n  size: PropTypes.oneOf(['large', 'medium', 'small']),\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['contained', 'outlined', 'text'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiButtonGroup'\n})(ButtonGroup);","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"circle\", {\n  cx: \"9\",\n  cy: \"8.5\",\n  r: \"1.5\",\n  opacity: \".3\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M4.34 17h9.32c-.84-.58-2.87-1.25-4.66-1.25s-3.82.67-4.66 1.25z\",\n  opacity: \".3\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M9 12c1.93 0 3.5-1.57 3.5-3.5S10.93 5 9 5 5.5 6.57 5.5 8.5 7.07 12 9 12zm0-5c.83 0 1.5.67 1.5 1.5S9.83 10 9 10s-1.5-.67-1.5-1.5S8.17 7 9 7zm0 6.75c-2.34 0-7 1.17-7 3.5V19h14v-1.75c0-2.33-4.66-3.5-7-3.5zM4.34 17c.84-.58 2.87-1.25 4.66-1.25s3.82.67 4.66 1.25H4.34zm11.7-3.19c1.16.84 1.96 1.96 1.96 3.44V19h4v-1.75c0-2.02-3.5-3.17-5.96-3.44zM15 12c1.93 0 3.5-1.57 3.5-3.5S16.93 5 15 5c-.54 0-1.04.13-1.5.35.63.89 1 1.98 1 3.15s-.37 2.26-1 3.15c.46.22.96.35 1.5.35z\"\n})), 'PeopleOutlineTwoTone');\n\nexports.default = _default;","import React, { Fragment, useState, useEffect } from \"react\";\r\nimport { FormControl, Grid, TextField, withStyles, InputLabel, Select, MenuItem, Button, FormHelperText } from \"@material-ui/core\";\r\nimport { useForm } from \"../../useForm\";\r\nimport { connect } from \"react-redux\";\r\n//import * as categActions from \"../../../../../actions/Category/categories\";\r\nimport * as customerActions from \"../../../../../actions/Customers/customers\";\r\nimport * as storeActions from \"../../../../../actions/Store/stores\";\r\n//import * as userLevelActions from \"../../../../../actions/UserLevel/userLevel\";\r\nimport { ToastConsumer, useToasts } from \"react-toast-notifications\";\r\nimport \"../../staffForm.css\";\r\nimport { RestoreSharp } from \"@material-ui/icons\";\r\n\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            margin: theme.spacing(1),\r\n            minWidth: 230,\r\n        }\r\n    },\r\n\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 230,\r\n    },\r\n    smMargin: {\r\n        margin: theme.spacing(1),\r\n\r\n    },\r\n})\r\n\r\nconst initialFieldValues = {\r\n\r\n    name: '',\r\n    description: '',\r\n    phone: '',\r\n    address: '',\r\n    // companyDataId:'1',\r\n    // phone: '',\r\n    // location: '',\r\n    // // email: '',\r\n    // // address: '',\r\n    // companyDataId: '',\r\n    country:'kenya',\r\n    storeId: 1,\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst AddCustomerForm = ({ classes, ...props }) => {\r\n\r\n    //toast message\r\n    const { addToast } = useToasts()\r\n\r\n    //realtime validation for the whole form controls\r\n    const validate = (fieldValues = values) => {\r\n        let temp = { ...errors }\r\n        if ('name' in fieldValues) {\r\n            temp.name = fieldValues.name ? \"\" : \"This field is required\"\r\n            // addToast(\"User data saved succeffuly\", {appearance:'success'})\r\n            // console.log(\"Tast has beeen displayed\")\r\n        }\r\n\r\n\r\n        if ('description' in fieldValues) {\r\n            temp.description = fieldValues.description ? \"\" : \"This field is required\"\r\n        }\r\n\r\n\r\n        if ('phone' in fieldValues) {\r\n            temp.phone = fieldValues.phone ? \"\" : \"This field is required\"\r\n        }\r\n\r\n\r\n        if ('address' in fieldValues) {\r\n            temp.address = fieldValues.address ? \"\" : \"This field is required\"\r\n        }\r\n       \r\n\r\n        // if ('storeId' in fieldValues) {\r\n        //     temp.storeId = fieldValues.storeId ? \"\" : \"This field is required\"\r\n        // }\r\n\r\n\r\n        setErrors({\r\n            ...temp\r\n        })\r\n        if (fieldValues == values) {\r\n            return Object.values(temp).every(x => x == \"\")\r\n        }\r\n\r\n\r\n    }\r\n\r\n    const [\r\n        values,\r\n        setValues,\r\n        errors,\r\n        setErrors,\r\n        handleInputChange,\r\n        resetForm\r\n    ] = useForm(initialFieldValues, validate, props.setCurrentId);\r\n\r\n    const showToast = () => {\r\n        addToast(\"Customer data saved succeffuly\", { appearance: 'success' })\r\n        addToast(\"Customer data saved succeffuly\", { appearance: 'success' })\r\n        addToast(\"Customer data saved succeffuly\", { appearance: 'success' })\r\n        props.fetchAllCustomers();\r\n    }\r\n\r\n\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n\r\n\r\n        if (validate()) {\r\n\r\n            const onSuccess = () => {\r\n                showToast();\r\n                resetForm();\r\n\r\n\r\n            }\r\n\r\n\r\n\r\n            if (props.currentId == 0) {\r\n\r\n                //using toast notification\r\n\r\n                props.createCustomer(values, onSuccess)\r\n                //addorEdit(values, onSuccess)\r\n\r\n            }\r\n            else {\r\n                //using windows alert notification\r\n                //props.updateDCandidate(props.currentId, values, () => {window.alert('updated')})\r\n                //using toast notification\r\n                props.updateCustomer(props.currentId, values, onSuccess)\r\n\r\n\r\n\r\n            }\r\n\r\n            if (props.openPopup == true) {\r\n                props.setOpenPopup(false)\r\n            }\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n\r\n        if (props.currentId != 0)\r\n            setValues({\r\n                ...props.customersList.find(x => x.id == props.currentId)\r\n            })\r\n        setErrors({})\r\n        props.fetchAllCustomers();\r\n        // props.fetchAllStores();\r\n        // props.fetchAllCategory();\r\n\r\n\r\n\r\n    }, [props.currentId])\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n\r\n        <section className=\"content\">\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                    {/* left column */}\r\n                    <div className=\"col-md-12\">\r\n                        {/* jquery validation */}\r\n                        <div className=\"card card-primary\">\r\n                            <div className=\"card-header\">\r\n                                <h4 className=\"card-title\">Add Customers<small> </small></h4>\r\n                            </div>\r\n                            {/* /.card-header */}\r\n                            {/* form start */}\r\n                            <form id=\"quickForm\" autoComplete=\"off\" noValidate className={classes.root} onSubmit={handleSubmit}>\r\n\r\n\r\n                            {/* <FormControl className={classes.formControl}\r\n                                    {...(errors.storeId && { error: true })}\r\n                                >\r\n                                    <InputLabel>Store</InputLabel>\r\n                                    <Select\r\n                                        className=\"form-ctr\"\r\n                                        name=\"storeId\"\r\n                                        label=\" Store\"\r\n                                        value={values.storeId}\r\n                                        //onFocus={fetchStores}\r\n                                        onChange={handleInputChange}\r\n                                        variant=\"outlined\"\r\n\r\n                                    >\r\n\r\n                                        <MenuItem value=\"\">Select Store</MenuItem>\r\n\r\n                                        {\r\n                                            props.storesList.map((record, index) => {\r\n                                                return (\r\n                                                    <MenuItem value={record.storeId}>{record.name}</MenuItem>\r\n\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </Select>\r\n                                    {errors.storeId && <FormHelperText>{errors.storeId}</FormHelperText>}\r\n                                </FormControl> */}\r\n\r\n                                <TextField\r\n                                    className=\"form-ctr\"\r\n                                    id=\"standard-basic\"\r\n                                    type=\"text\"\r\n                                    name=\"name\"\r\n                                    label=\"Customer Name\"\r\n                                    value={values.name}\r\n                                    onChange={handleInputChange}\r\n                                    {...(errors.name && { error: true, helperText: errors.name })}\r\n                                />\r\n\r\n                                <TextField className=\"form-ctr\" name=\"description\" label=\"Description\" value={values.description}\r\n                                    onChange={handleInputChange}\r\n\r\n\r\n                                    {... (errors.description && { error: true, helperText: errors.description })}\r\n                                />\r\n\r\n                                <TextField className=\"form-ctr\" name=\"phone\" label=\"Phone Number\" value={values.phone}\r\n                                    onChange={handleInputChange}\r\n\r\n\r\n                                    {... (errors.size && { error: true, helperText: errors.size })}\r\n                                />\r\n                                <TextField\r\n                                    className=\"form-ctr\"\r\n                                    id=\"standard-basic\"\r\n                                    type=\"text\"\r\n                                    name=\"address\"\r\n                                    label=\"Address\"\r\n                                    value={values.address}\r\n                                    onChange={handleInputChange}\r\n                                    {...(errors.address && { error: true, helperText: errors.address })}\r\n                                />\r\n\r\n                            \r\n\r\n\r\n\r\n                                {/* /.card-body */}\r\n                                <div className=\"card-footer\">\r\n                                    <div>\r\n                                        <button type=\"submit\" className=\"btn btn-primary\" >Save</button>\r\n                                        <button variant=\"contained\"\r\n                                            className=\"btn btn-secondary\"\r\n                                            onClick={resetForm} style={{ marginLeft: 3 }}>Reset</button>\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                            </form>\r\n\r\n                        </div>\r\n                        {/* /.card */}\r\n                    </div>\r\n                    {/*/.col (left) */}\r\n                    {/* right column */}\r\n                    <div className=\"col-md-6\">\r\n                    </div>\r\n                    {/*/.col (right) */}\r\n                </div>\r\n                {/* /.row */}\r\n            </div>{/* /.container-fluid */}\r\n        </section>\r\n\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    customersList: state.customers.list,\r\n    storesList: state.stores.list\r\n    //categoryList: state.category.list\r\n})\r\n\r\nconst mapActionToProps = {\r\n    fetchAllCustomers: customerActions.fetchAllCustomer,\r\n    deleteCustomer: customerActions.DeleteCustomer,\r\n    // fetchAllCategory: CustomerActions.fetchAllCategory,\r\n    createCustomer: customerActions.createCustomer,\r\n    updateCustomer: customerActions.updateCustomer,\r\n    fetchAllStores: storeActions.fetchAllStore\r\n}\r\nexport default connect(mapStateToProps, mapActionToProps)(withStyles(styles)(AddCustomerForm));","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 00-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'Edit');\n\nexports.default = _default;"],"sourceRoot":""}